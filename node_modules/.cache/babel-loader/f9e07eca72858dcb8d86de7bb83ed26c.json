{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/WorkTaskBubble.js\";\nimport { useStyles } from \"../App\";\nimport \"../App.css\";\nimport React, { useContext } from \"react\";\nimport { GetTaskStatusData } from \"./TaskStatusData\";\nimport { WorkDetailDialog } from \"../dialogWindows/WorkDetailDialog\";\nimport Box from \"@material-ui/core/Box\";\nimport moment from \"moment\";\nimport \"moment/locale/sk\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport { DataContext } from \"../providers/DataProvider\";\nexport function WorkTaskBubble(date) {\n  const classes = useStyles();\n  const {\n    taskData\n  } = useContext(DataContext);\n  let filteredData = [];\n\n  if (taskData.workTasks !== undefined) {\n    filteredData = taskData.workTasks.filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: \"-1\",\n    title: \"Test\",\n    desc: \"Test\",\n    workTime: \"100h\",\n    status: \"not_done\"\n  });\n\n  const handleClickOpen = task => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n  };\n\n  const onDragEnd = result => {\n    if (result != undefined) {\n      const {\n        source,\n        destination\n      } = result; // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        const items = reorder(this.getList(source.droppableId), source.index, destination.index);\n        let state = {\n          items\n        };\n\n        if (source.droppableId === \"droppable2\") {\n          state = {\n            selected: items\n          };\n        }\n\n        this.setState(state);\n      } else {\n        const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n        this.setState({\n          items: result.droppable,\n          selected: result.droppable2\n        });\n      }\n    }\n  };\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Pr\\xE1zdne\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: e => onDragEnd(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: `${moment(date).unix()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      className: classes.taskBubble,\n      style: {\n        backgroundColor: GetTaskStatusData(item.status).color,\n        transition: \"background-color 1s\"\n      },\n      onClick: () => handleClickOpen(item),\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n      style: {\n        marginRight: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 27\n      }\n    }, item.workTime))))), provided.placeholder))), /*#__PURE__*/React.createElement(WorkDetailDialog, {\n      onClose: handleClose,\n      open: open,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/WorkTaskBubble.js"],"names":["useStyles","React","useContext","GetTaskStatusData","WorkDetailDialog","Box","moment","DragDropContext","Droppable","Draggable","TimerIcon","DataContext","WorkTaskBubble","date","classes","taskData","filteredData","workTasks","undefined","filter","task","includes","format","open","setOpen","useState","selectedTask","setSelectedTask","id","title","desc","workTime","status","handleClickOpen","handleClose","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","onDragEnd","items","getList","state","selected","setState","droppable","droppable2","length","justifyContent","height","textAlign","paddingTop","color","fontFamily","fontSize","fontWeight","e","unix","provided","droppableProps","innerRef","map","item","draggableProps","dragHandleProps","taskBubble","backgroundColor","transition","bubbleTitle","marginRight","bubbleWorkTime","placeholder"],"mappings":"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","sourcesContent":["import { useStyles } from \"../App\";\nimport \"../App.css\";\nimport React, { useContext } from \"react\";\nimport { GetTaskStatusData } from \"./TaskStatusData\";\nimport { WorkDetailDialog } from \"../dialogWindows/WorkDetailDialog\";\nimport Box from \"@material-ui/core/Box\";\nimport moment from \"moment\";\nimport \"moment/locale/sk\";\n\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\n\nimport { DataContext } from \"../providers/DataProvider\";\n\nexport function WorkTaskBubble(date) {\n  const classes = useStyles();\n\n  const { taskData } = useContext(DataContext);\n\n  let filteredData = [];\n\n  if (taskData.workTasks !== undefined) {\n    filteredData = taskData.workTasks.filter((task) =>\n      task.date.includes(moment(date).format(\"DD/MM/yyyy\"))\n    ); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: \"-1\",\n    title: \"Test\",\n    desc: \"Test\",\n    workTime: \"100h\",\n    status: \"not_done\",\n  });\n\n  const handleClickOpen = (task) => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const reorder = (list, startIndex, endIndex) => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n  \n\treturn result;\n  };\n  \n  const move = (source, destination, droppableSource, droppableDestination) => {\n\tconst sourceClone = Array.from(source);\n\tconst destClone = Array.from(destination);\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\n  \n\tdestClone.splice(droppableDestination.index, 0, removed);\n  \n\tconst result = {};\n\tresult[droppableSource.droppableId] = sourceClone;\n\tresult[droppableDestination.droppableId] = destClone;\n  \n\treturn result;\n  };\n\n  const onDragEnd = (result) => {\n    if (result != undefined) {\n\t\tconst { source, destination } = result;\n\n\t\t// dropped outside the list\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (source.droppableId === destination.droppableId) {\n\t\t\tconst items = reorder(\n\t\t\t\tthis.getList(source.droppableId),\n\t\t\t\tsource.index,\n\t\t\t\tdestination.index\n\t\t\t);\n\n\t\t\tlet state = { items };\n\n\t\t\tif (source.droppableId === \"droppable2\") {\n\t\t\t\tstate = { selected: items };\n\t\t\t}\n\n\t\t\tthis.setState(state);\n\t\t} else {\n\t\t\tconst result = move(\n\t\t\t\tthis.getList(source.droppableId),\n\t\t\t\tthis.getList(destination.droppableId),\n\t\t\t\tsource,\n\t\t\t\tdestination\n\t\t\t);\n\n\t\t\tthis.setState({\n\t\t\t\titems: result.droppable,\n\t\t\t\tselected: result.droppable2,\n\t\t\t});\n\t\t}\n    }\n  };\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return (\n      <div style={{ justifyContent: \"center\", height: \"100%\" }}>\n        <h3\n          style={{\n            textAlign: \"center\",\n            paddingTop: \"18px\",\n            color: \"#bdbdbd\",\n            fontFamily: \"Poppins\",\n            fontSize: \"18px\",\n            fontWeight: \"500\",\n          }}\n        >\n          Prázdne\n        </h3>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <DragDropContext onDragEnd={(e) => onDragEnd(e)}>\n          <Droppable droppableId={`${moment(date).unix()}`}>\n            {(provided) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {filteredData.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided) => (\n                      <div\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Box\n                          className={classes.taskBubble}\n                          style={{\n                            backgroundColor: GetTaskStatusData(item.status)\n                              .color,\n                            transition: \"background-color 1s\",\n                          }}\n                          onClick={() => handleClickOpen(item)}\n                          ref={provided.innerRef}\n                        >\n                          <Box flexGrow={1}>\n                            <h3 className={classes.bubbleTitle}>\n                              {item.title}\n                            </h3>\n                          </Box>\n                          <TimerIcon style={{ marginRight: \"5px\" }} />\n                          <h3 className={classes.bubbleWorkTime}>\n                            {item.workTime}\n                          </h3>\n                        </Box>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <WorkDetailDialog\n          onClose={handleClose}\n          open={open}\n          selectedTask={selectedTask}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js\";\nimport { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { DetailDialog } from '../dialogWindows/DetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from '@material-ui/icons/Timer'; //import data from '../MOCK_DATA.json';\n\nlet place = {\n  address: \"\",\n  city: \"\",\n  country: \"\"\n};\nlet contact = {\n  email: \"\",\n  phoneNumber: \"\"\n};\nlet meet_task = {\n  id: \"\",\n  title: \"\",\n  token: \"\",\n  desc: \"\",\n  date: \"\",\n  workTime: \"\",\n  category: \"\",\n  place: place,\n  status: \"\"\n};\nlet work_task = {\n  id: \"\",\n  token: \"\",\n  title: \"\",\n  desc: \"\",\n  date: \"\",\n  workTime: \"\",\n  status: \"\"\n};\nlet comm_task = {\n  id: \"\",\n  token: \"\",\n  title: \"\",\n  desc: \"\",\n  date: \"\",\n  contact: contact,\n  workTime: \"\",\n  status: \"\"\n};\n\nfunction AllTasks() {\n  this.date = \"\";\n  this.meet = [meet_task];\n  this.work = [work_task];\n  this.comm = [comm_task];\n}\n\n;\nlet AllTasksList = [];\n\nconst getTasks = (data, date) => {\n  let TaskObject = new AllTasks();\n  TaskObject.date = date;\n  TaskObject.meet = data.filter(task => task.type.includes('produc')).filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\")));\n  TaskObject.work = fetchWorkTasks(date);\n  TaskObject.comm = data.filter(task => task.type.includes('comm')).filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\")));\n  return TaskObject;\n};\n\nexport function TaskBubble(type, date) {\n  const classes = useStyles();\n  let filteredData = []; //filter tasks by specified type\n  //const AllTasks = getTasks(data, date);\n\n  AllTasksList.push(AllTasks);\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: '-1',\n    title: 'Test',\n    desc: 'Test',\n    workTime: '100h',\n    status: 'not_done'\n  });\n\n  const handleClickOpen = task => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Pr\\xE1zdne\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: `${moment(date).unix()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      className: classes.taskBubble,\n      style: {\n        backgroundColor: GetTaskStatusData(item.status).color\n      },\n      onClick: () => handleClickOpen(item),\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n      style: {\n        marginRight: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 27\n      }\n    }, item.workTime))))), provided.placeholder))), /*#__PURE__*/React.createElement(DetailDialog, {\n      onClose: handleClose,\n      open: open,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js"],"names":["useStyles","React","useState","GetTaskStatusData","DetailDialog","Box","moment","DragDropContext","Droppable","Draggable","TimerIcon","place","address","city","country","contact","email","phoneNumber","meet_task","id","title","token","desc","date","workTime","category","status","work_task","comm_task","AllTasks","meet","work","comm","AllTasksList","getTasks","data","TaskObject","filter","task","type","includes","format","fetchWorkTasks","TaskBubble","classes","filteredData","push","open","setOpen","selectedTask","setSelectedTask","handleClickOpen","handleClose","undefined","length","justifyContent","height","textAlign","paddingTop","color","fontFamily","fontSize","fontWeight","unix","provided","droppableProps","innerRef","map","item","index","draggableProps","dragHandleProps","taskBubble","backgroundColor","bubbleTitle","marginRight","bubbleWorkTime","placeholder"],"mappings":"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","sourcesContent":["import { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { DetailDialog } from '../dialogWindows/DetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\n\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from '@material-ui/icons/Timer';\n\n//import data from '../MOCK_DATA.json';\n\n\nlet place = {\n  address: \"\",\n  city: \"\",\n  country: \"\"\n};\nlet contact = {\n  email: \"\",\n  phoneNumber: \"\"\n};\n\nlet meet_task = {\n  id: \"\",\n  title: \"\",\n  token: \"\",\n  desc: \"\",\n  date: \"\",\n  workTime: \"\",\n  category: \"\",\n  place: place,\n  status: \"\",\n};\nlet work_task = {\n  id: \"\",\n  token: \"\",\n  title: \"\",\n  desc: \"\",\n  date: \"\",\n  workTime: \"\",\n  status: \"\"\n};\nlet comm_task = {\n  id: \"\",\n  token: \"\",\n  title: \"\",\n  desc: \"\",\n  date: \"\",\n  contact: contact,\n  workTime: \"\",\n  status: \"\"\n};\n\nfunction AllTasks() {\n  this.date = \"\";\n  this.meet = [meet_task];\n  this.work = [work_task];\n  this.comm = [comm_task];\n};\n\nlet AllTasksList = [];\n\nconst getTasks = (data, date) => {\n  let TaskObject = new AllTasks();\n  TaskObject.date = date;\n  TaskObject.meet = data.filter((task) => task.type.includes('produc')).filter((task) => task.date.includes(moment(date).format(\"DD/MM/yyyy\")));\n  TaskObject.work = fetchWorkTasks(date);\n  TaskObject.comm = data.filter((task) => task.type.includes('comm')).filter((task) => task.date.includes(moment(date).format(\"DD/MM/yyyy\")));\n\n  return TaskObject;\n};\n\nexport function TaskBubble(type, date) {\n  const classes = useStyles();\n\n  let filteredData = []; //filter tasks by specified type\n\n  //const AllTasks = getTasks(data, date);\n  AllTasksList.push(AllTasks);\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({ id: '-1', title: 'Test', desc: 'Test', workTime: '100h', status: 'not_done' });\n\n  const handleClickOpen = (task) => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return (\n      <div style={{ justifyContent: \"center\", height: \"100%\" }}>\n        <h3 style={{ textAlign: \"center\", paddingTop: \"18px\", color: \"#bdbdbd\", fontFamily: \"Poppins\", fontSize: \"18px\", fontWeight: \"500\" }}>\n          Prázdne\n        </h3>\n      </div>\n    )\n\n  } else {\n    return (\n      <div>\n        <DragDropContext>\n          <Droppable droppableId={`${moment(date).unix()}`}>\n            {(provided) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {filteredData.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index} >\n                    {(provided) => (\n                      <div {...provided.draggableProps} {...provided.dragHandleProps}>\n                        <Box className={classes.taskBubble} style={{ backgroundColor: GetTaskStatusData(item.status).color }} onClick={() => handleClickOpen(item)} ref={provided.innerRef}>\n                          <Box flexGrow={1}>\n                            <h3 className={classes.bubbleTitle}>{item.title}</h3>\n                          </Box>\n                          <TimerIcon style={{ marginRight: '5px' }} />\n                          <h3 className={classes.bubbleWorkTime}>{item.workTime}</h3>\n                        </Box>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <DetailDialog onClose={handleClose} open={open} selectedTask={selectedTask} />\n      </div>\n    )\n  }\n};"]},"metadata":{},"sourceType":"module"}
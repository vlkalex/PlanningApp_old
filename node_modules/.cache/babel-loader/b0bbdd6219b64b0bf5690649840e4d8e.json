{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getDatesFromMonth } from './DateCalc';\nimport { SideBar } from './sideBar/SideBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport moment from 'moment';\nimport 'moment/locale/sk';\nimport { RenderTaskList } from './sections/RenderTaskList';\nexport const useStyles = makeStyles(theme => ({\n  main: {\n    backgroundColor: '#f8f8f8',\n    height: '-webkit-fill-available'\n  },\n  root: {\n    padding: '2px 10px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 300,\n    height: '-webkit-fill-available',\n    borderColor: '#f1d6ab',\n    borderRadius: 50,\n    background: '#00000040'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n    color: '#f1d6ab',\n    fontFamily: 'Sen',\n    fontSize: 18\n  },\n  taskListWindow: {\n    justifyContent: 'center',\n    margin: '20px 30px 20px 30px',\n    display: 'flex',\n    width: '95%',\n    minHeight: '8em',\n    background: '#FAFAFA',\n    borderRadius: '30px',\n    padding: '20px 0px',\n    boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.1)',\n    \"&:focus\": {\n      outline: '0px'\n    }\n  },\n  taskBubble: {\n    display: 'flex',\n    borderRadius: 20,\n    padding: '18px 20px',\n    marginBottom: '20px',\n    fontFamily: 'Poppins',\n    backgroundColor: '#fff',\n    color: '#2b2b28',\n    width: '95%',\n    alignItems: 'center',\n    cursor: 'pointer',\n    boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.1)',\n    position: 'relative',\n    right: '12px'\n  },\n  bubbleTitle: {\n    color: '#2b2b2b',\n    fontWeight: '600',\n    fontSize: '1.1em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    textTransform: 'capitalize'\n  },\n  bubbleDesc: {\n    fontWeight: '600',\n    fontSize: 15,\n    marginBlockStart: 0,\n    marginBlockEnd: 0\n  },\n  bubbleWorkTime: {\n    fontWeight: '600',\n    fontSize: '0.9em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    paddingTop: '2px'\n  }\n}));\n\nfunction DateText(day) {\n  const number = moment(day).format('D');\n  const dayText = moment(day).format('dddd');\n\n  if (moment(day).dayOfYear() === moment().dayOfYear()) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        width: '3em',\n        backgroundColor: 'rgba(241, 214, 171, 0.5)',\n        padding: '20px',\n        borderRadius: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontWeight: '800',\n        fontSize: '1.6em',\n        color: '#2b2b2b'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, number, \".\"), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontWeight: '600',\n        fontSize: '1.2em',\n        color: '#6c6c6c',\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, dayText));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        width: '3em',\n        padding: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontFamily: 'Poppins',\n        fontWeight: '800',\n        fontSize: '1.6em',\n        color: '#2b2b2b',\n        paddingBottom: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, number, \".\"), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontFamily: 'Poppins',\n        fontWeight: '600',\n        fontSize: '1.2em',\n        color: '#6c6c6c',\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, dayText));\n  }\n}\n\nfunction App() {\n  const classes = useStyles();\n  moment().locale('sk');\n  let weeks = getDatesFromMonth(moment().format('M'));\n  const [weekState, setWeek] = useState(moment().week());\n\n  const handleWeekChange = (event, newWeek) => {\n    setWeek(parseInt(newWeek));\n  };\n\n  const [selectedMonth, setSelectedMonth] = useState(moment().month());\n  console.log(moment().format('MMM'));\n\n  const handleMonthChange = event => {\n    setSelectedMonth(event.target.value);\n  }; // moves the menu below the select input\n\n\n  const menuProps = {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const findCurrDate = () => {\n    setWeek(moment().week());\n    setTimeout(() => {\n      let currDate = moment().startOf('day').valueOf();\n      document.getElementById(currDate).focus();\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#f8f8f8',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      paddingLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disableUnderline: true,\n    classes: {\n      root: classes.taskSelect\n    },\n    MenuProps: menuProps,\n    value: selectedMonth,\n    onChange: handleMonthChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"jan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"January\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"feb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \"February\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"mar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"March\"))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      findCurrDate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"Current date\"), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: weekState.toString(),\n    exclusive: true,\n    onChange: handleWeekChange,\n    \"aria-label\": \"week select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"1.\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"2.\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"3.\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \"4.\"), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"5.\"))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      flexDirection: 'row',\n      width: '90%',\n      marginLeft: '7em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, \"Produkcia\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, \"Pr\\xE1ca\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \"Komunik\\xE1cia\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      flexDirection: 'column',\n      overflowY: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      paddingLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, weeks[weekState].map((day, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: day,\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'row',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, DateText(day), /*#__PURE__*/React.createElement(RenderTaskList, {\n    date: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/App.js"],"names":["React","useState","useEffect","getDatesFromMonth","SideBar","makeStyles","Button","ToggleButton","ToggleButtonGroup","Select","MenuItem","FormControl","moment","RenderTaskList","useStyles","theme","main","backgroundColor","height","root","padding","display","alignItems","width","borderColor","borderRadius","background","input","marginLeft","spacing","flex","color","fontFamily","fontSize","taskListWindow","justifyContent","margin","minHeight","boxShadow","outline","taskBubble","marginBottom","cursor","position","right","bubbleTitle","fontWeight","marginBlockStart","marginBlockEnd","textTransform","bubbleDesc","bubbleWorkTime","paddingTop","DateText","day","number","format","dayText","dayOfYear","flexDirection","paddingBottom","App","classes","locale","weeks","weekState","setWeek","week","handleWeekChange","event","newWeek","parseInt","selectedMonth","setSelectedMonth","month","console","log","handleMonthChange","target","value","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","findCurrDate","setTimeout","currDate","startOf","valueOf","document","getElementById","focus","paddingLeft","taskSelect","toString","overflowY","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { getDatesFromMonth } from './DateCalc';\nimport { SideBar } from './sideBar/SideBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport moment from 'moment';\nimport 'moment/locale/sk';\nimport { RenderTaskList } from './sections/RenderTaskList';\n\n\n\nexport const useStyles = makeStyles((theme) => ({\n  main: {\n    backgroundColor: '#f8f8f8',\n    height: '-webkit-fill-available',\n  },\n  root: {\n    padding: '2px 10px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 300,\n    height: '-webkit-fill-available',\n    borderColor: '#f1d6ab',\n    borderRadius: 50,\n    background: '#00000040',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n    color: '#f1d6ab',\n    fontFamily: 'Sen',\n    fontSize: 18,\n  },\n  \n  taskListWindow: {\n    justifyContent: 'center',\n    margin: '20px 30px 20px 30px',\n    display: 'flex',\n    width: '95%',\n    minHeight: '8em',\n    background: '#FAFAFA',\n    borderRadius: '30px',\n    padding: '20px 0px',\n    boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.1)',\n    \"&:focus\":{\n      outline: '0px',\n    },\n  },\n  taskBubble: {\n    display: 'flex',\n    borderRadius: 20,\n    padding: '18px 20px',\n    marginBottom: '20px',\n    fontFamily:'Poppins',\n    backgroundColor: '#fff',\n    color: '#2b2b28',\n    width: '95%',\n    alignItems: 'center',\n    cursor: 'pointer',\n    boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.1)',\n    position: 'relative',\n    right: '12px',\n  },\n  bubbleTitle: {\n    color: '#2b2b2b',\n    fontWeight: '600',\n    fontSize: '1.1em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    textTransform: 'capitalize',\n  },\n  bubbleDesc: {\n    fontWeight: '600',\n    fontSize: 15,\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n  },\n  bubbleWorkTime: {\n    fontWeight: '600',\n    fontSize: '0.9em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    paddingTop: '2px',\n  },\n}));\n\nfunction DateText(day) {\n  const number = moment(day).format('D');\n  const dayText = moment(day).format('dddd');\n\n  if(moment(day).dayOfYear() === moment().dayOfYear()) {\n    return (\n      <div style={{alignItems:'center', display: 'flex', flexDirection:'column', width:'3em', backgroundColor:'rgba(241, 214, 171, 0.5)', padding:'20px', borderRadius:'20px'}}>\n        <h3 style={{fontWeight:'800', fontSize:'1.6em', color:'#2b2b2b'}}>\n          {number}.\n        </h3>\n  \n        <h3 style={{fontWeight:'600', fontSize:'1.2em', color:'#6c6c6c', textTransform:'capitalize'}}>\n          {dayText}\n        </h3>\n      </div>\n    )\n  } else {\n    return (\n      <div style={{alignItems:'center', display: 'flex', flexDirection:'column', width:'3em', padding:'20px'}}>\n        <h3 style={{fontFamily:'Poppins', fontWeight:'800', fontSize:'1.6em', color:'#2b2b2b', paddingBottom:'8px'}}>\n          {number}.\n        </h3>\n  \n        <h3 style={{fontFamily:'Poppins', fontWeight:'600', fontSize:'1.2em', color:'#6c6c6c', textTransform:'capitalize'}}>\n          {dayText}\n        </h3>\n      </div>\n    )\n  }\n}\n\n\nfunction App() {\n  const classes = useStyles();\n  moment().locale('sk');\n\n  let weeks = getDatesFromMonth(moment().format('M'));\n  const [weekState, setWeek] = useState(moment().week());\n\n  const handleWeekChange = (event, newWeek) => {\n    setWeek(parseInt(newWeek));\n  };\n\n  const [selectedMonth,setSelectedMonth] = useState(moment().month());\n\n  console.log(moment().format('MMM'));\n  const handleMonthChange = (event) => {\n    setSelectedMonth(event.target.value);\n  };\n\n  // moves the menu below the select input\n  const menuProps = {\n      anchorOrigin: {\n      vertical: \"bottom\",\n          horizontal: \"left\"\n      },\n      transformOrigin: {\n      vertical: \"top\",\n          horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n  };\n\n  const findCurrDate = () => {\n    setWeek(moment().week())\n\n    setTimeout(() => {  \n      let currDate = moment().startOf('day').valueOf();\n      document.getElementById(currDate).focus();\n    }, 1000);\n  }\n  \n  return (\n    <div style={{ width: '100%', height: '100%', backgroundColor: '#f8f8f8', display:'flex', flexDirection:'row',}} >\n\n      <SideBar />\n\n      <div style={{alignItems:'center', display: 'flex', flexDirection:'column', width:'100%', paddingLeft:'10px'}}>\n        \n        <div style={{alignItems:'center', display: 'flex', flexDirection:'row'}}>\n          <FormControl>\n            <Select\n                disableUnderline\n                classes={{ root: classes.taskSelect }}\n                MenuProps={menuProps}\n                value={selectedMonth}\n                onChange={handleMonthChange}\n            >\n                <MenuItem value={\"jan\"}>January</MenuItem>\n                <MenuItem value={\"feb\"}>February</MenuItem>\n                <MenuItem value={\"mar\"}>March</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Button onClick={() => {findCurrDate()}}>\n            Current date\n          </Button>\n\n          <ToggleButtonGroup\n            value={weekState.toString()}\n            exclusive\n            onChange={handleWeekChange}\n            aria-label=\"week select\"\n          >\n            <ToggleButton value=\"0\">\n              1.\n            </ToggleButton>\n            <ToggleButton value=\"1\">\n              2.\n            </ToggleButton>\n            <ToggleButton value=\"2\">\n              3.\n            </ToggleButton>\n            <ToggleButton value=\"3\">\n              4.\n            </ToggleButton>\n            <ToggleButton value=\"4\">\n              5.\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n\n        <span style={{display: 'flex', alignItems: 'center', justifyContent: 'space-around', flexDirection:'row', width:'90%', marginLeft:'7em'}}>\n            <h2>\n                Produkcia\n            </h2>\n            <h2>\n                Práca\n            </h2>\n            <h2>\n                Komunikácia\n            </h2>\n            {/* <Button style={{maxWidth: '20px', maxHeight: '20px', minWidth: '20px', minHeight: '20px', marginLeft: '8px'}}>\n                <AddIcon />\n            </Button> */}\n        </span>\n      \n\n        <div style={{width: '100%', flexDirection:'column', overflowY: 'scroll'}}>\n          <div style={{alignItems:'center', display: 'flex', flexDirection:'column', paddingLeft: '20px'}}>\n            {weeks[weekState].map((day, i) => (\n              <div key={day} style={{alignItems:'center', display: 'flex', flexDirection:'row', width: '100%'}}>\n                {DateText(day)}\n                <RenderTaskList date={day}/>\n              </div>\n            ))}\n          </div>\n        </div>\n      \n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
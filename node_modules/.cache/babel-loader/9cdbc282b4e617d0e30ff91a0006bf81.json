{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/DateCalc.js\";\nimport React from 'react';\nimport moment from 'moment';\n\nlet enumerateDaysBetweenDates = function (startDate, endDate) {\n  var dates = [];\n  var currDate = moment(startDate).subtract(moment(\"1\", \"MM\").startOf('month').format('d'), 'days').startOf('day');\n  currDate.add('1', 'day');\n  var lastDate = moment(endDate).startOf('day'); //while(currDate.add(1, 'days').diff(lastDate) < 0) {\n  //    dates.push(currDate.valueOf());\n  //}\n\n  while (lastDate.subtract(1, 'days').format('d') !== '0') {\n    dates.push(lastDate.valueOf());\n  }\n\n  return dates.reverse();\n};\n\nexport let getISOWeekDates = function (isoWeekNum = 1, year = new Date().getFullYear()) {\n  let d = moment().isoWeek(1).startOf('isoWeek').add(isoWeekNum - 1, 'weeks');\n  let finalMonth = d.format('MMMM');\n  let tempMonth = '';\n\n  for (var dates = [], i = 0; i < 7; i++) {\n    if (d.format('MMMM') !== finalMonth) {\n      tempMonth = d.format('MMMM');\n    }\n\n    dates.push(d.valueOf());\n    d.add(1, 'day');\n  }\n\n  if (tempMonth !== '') {\n    return [dates, finalMonth + ' - ' + tempMonth + d.format(' YYYY')];\n  }\n\n  return [dates, finalMonth + d.format(' YYYY')];\n};\nexport let getDatesFromMonth = function (currentMonth) {\n  let startBlanks = [];\n  let endBlanks = [];\n  let daysInMonth = [];\n  let weeks = [];\n  let currentYear = moment().year();\n  let currentDay = moment().format('DD/MM/YYYY');\n  let currentWeek = moment(currentDay, 'DD/MM/YYYY').week();\n\n  for (let day = 1; day <= moment(currentMonth, \"MM\").daysInMonth(); day++) {\n    daysInMonth.push(moment(currentMonth, \"MM\").date(day).valueOf());\n  }\n\n  for (let i = moment(currentMonth, \"MM\").endOf('month').format('d'); i < 7; i++) {\n    if (i === 0) {\n      break;\n    }\n\n    endBlanks.push( /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }\n    }, \"Skip!\"));\n  }\n\n  if (moment(currentMonth, \"MM\").startOf('month').format('d') !== '1') {\n    startBlanks = enumerateDaysBetweenDates(moment(currentMonth, \"MM\").subtract(1, 'months').endOf('month').format('M/D/YYYY'), moment(currentMonth, \"MM\").startOf('month').format('M/D/YYYY'));\n  }\n\n  let totalSlots = [...startBlanks, ...daysInMonth, ...endBlanks];\n  let temp = [];\n  totalSlots.forEach((item, i) => {\n    if (i > 1) {\n      if (i % 7 === 0) {\n        weeks.push(temp);\n        temp = [];\n      }\n    }\n\n    temp.push(item);\n  });\n  weeks.push(temp);\n  return weeks;\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/DateCalc.js"],"names":["React","moment","enumerateDaysBetweenDates","startDate","endDate","dates","currDate","subtract","startOf","format","add","lastDate","push","valueOf","reverse","getISOWeekDates","isoWeekNum","year","Date","getFullYear","d","isoWeek","finalMonth","tempMonth","i","getDatesFromMonth","currentMonth","startBlanks","endBlanks","daysInMonth","weeks","currentYear","currentDay","currentWeek","week","day","date","endOf","totalSlots","temp","forEach","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nlet enumerateDaysBetweenDates = function(startDate, endDate) {\n    var dates = [];\n  \n    var currDate = moment(startDate).subtract(moment(\"1\",\"MM\").startOf('month').format('d'), 'days').startOf('day');\n    currDate.add('1', 'day');\n    \n    var lastDate = moment(endDate).startOf('day');\n  \n    //while(currDate.add(1, 'days').diff(lastDate) < 0) {\n    //    dates.push(currDate.valueOf());\n    //}\n\n    while(lastDate.subtract(1, 'days').format('d') !== '0') {\n        dates.push(lastDate.valueOf());\n    }\n    \n    return dates.reverse();\n};\n\nexport let getISOWeekDates = function(isoWeekNum = 1, year = new Date().getFullYear()) {\n    let d = moment().isoWeek(1).startOf('isoWeek').add(isoWeekNum - 1, 'weeks');\n    let finalMonth = d.format('MMMM');\n    let tempMonth = '';\n\n    for (var dates=[], i=0; i < 7; i++) {\n        if (d.format('MMMM') !== finalMonth) {\n            tempMonth = d.format('MMMM');\n        }\n\n        dates.push(d.valueOf());\n        d.add(1, 'day');\n    }\n\n    if (tempMonth !== '') {\n        return [dates, finalMonth + ' - ' + tempMonth + d.format(' YYYY')];\n    }\n\n    return [dates, finalMonth + d.format(' YYYY')];\n    \n};\n\nexport let getDatesFromMonth = function(currentMonth) {\n    let startBlanks = [];\n    let endBlanks = [];\n    let daysInMonth = [];\n    let weeks = [];\n    let currentYear = moment().year();\n    let currentDay = moment().format('DD/MM/YYYY');\n    let currentWeek = moment(currentDay,'DD/MM/YYYY').week();\n    \n    for (let day = 1; day <= moment(currentMonth,\"MM\").daysInMonth(); day++) {\n        daysInMonth.push(moment(currentMonth,\"MM\").date(day).valueOf())\n    }\n    for (let i = moment(currentMonth,\"MM\").endOf('month').format('d'); i < 7; i++) {\n        if (i === 0) {\n            break;\n        }\n        endBlanks.push(<p>Skip!</p>);\n    }\n\n    if (moment(currentMonth,\"MM\").startOf('month').format('d') !== '1') {\n        startBlanks = enumerateDaysBetweenDates(moment(currentMonth,\"MM\").subtract(1,'months').endOf('month').format('M/D/YYYY'),moment(currentMonth,\"MM\").startOf('month').format('M/D/YYYY'))\n    }\n\n    let totalSlots = [...startBlanks, ...daysInMonth, ...endBlanks];\n\n    let temp = [];\n    totalSlots.forEach((item, i) => {\n    if (i > 1) {\n        if(i%7 === 0) {\n        weeks.push(temp);\n        temp = [];\n        }\n    }\n    temp.push(item);\n    });\n\n    weeks.push(temp);\n\n    return weeks;\n};"]},"metadata":{},"sourceType":"module"}
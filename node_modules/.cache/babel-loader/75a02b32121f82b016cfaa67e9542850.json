{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/MeetDetailDialog.js\";\nimport '../App.css';\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport TodayIcon from '@material-ui/icons/Today';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DataContext } from \"../providers/DataProvider\";\nimport { UserContext } from \"../providers/UserProvider\";\nconst styles = makeStyles(theme => ({\n  detailTitle: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '700',\n    fontSize: '1.6em',\n    paddingBottom: '15px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0\n  },\n  detailText: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    paddingLeft: '20px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(2),\n    top: theme.spacing(3.5),\n    color: '#1f1f1d'\n  },\n  editButton: {\n    position: 'absolute',\n    right: theme.spacing(8),\n    top: theme.spacing(3.5),\n    color: '#2B2B28'\n  },\n  taskStatus: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    padding: '0.4em 0.7em',\n    borderRadius: '10px'\n  },\n  taskSelect: {\n    width: '90%',\n    background: '#FFEAC8',\n    borderStyle: 'none',\n    borderWidth: 2,\n    borderRadius: '10px',\n    marginLeft: 18,\n    padding: '10px 0px',\n    \"&:focus\": {\n      borderRadius: '10px',\n      background: 'transparent'\n    }\n  },\n  taskTitleInput: {\n    paddingBottom: '10px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    \"& input\": {\n      fontFamily: 'Poppins',\n      color: '#2b2b2b',\n      fontWeight: '700',\n      fontSize: '1.6em'\n    }\n  },\n  taskDescInput: {\n    paddingLeft: '20px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    \"& textarea\": {\n      fontFamily: 'Poppins',\n      color: '#2b2b2b',\n      fontWeight: '500',\n      fontSize: '1.1em'\n    }\n  },\n  updateTaskButton: {\n    width: '60%',\n    alignSelf: 'center',\n    margin: '20px 20px 0 20px',\n    fontFamily: 'Poppins',\n    fontSize: '14px',\n    fontWeight: '600',\n    color: 'white',\n    background: '#66c660',\n    '&:hover': {\n      background: '#5ab054'\n    }\n  }\n}));\n\nconst renderTaskStatusBubble = taskStatusData => {\n  const classes = styles();\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.taskStatus,\n    style: {\n      backgroundColor: taskStatusData.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, taskStatusData.title);\n};\n\nexport function MeetDetailDialog(props) {\n  const classes = styles();\n  const {\n    onClose,\n    selectedTask,\n    open\n  } = props;\n  const {\n    setRefresh\n  } = useContext(DataContext);\n  const user = useContext(UserContext);\n\n  const handleClose = () => {\n    enterEditMode(false);\n    onClose();\n  };\n\n  const taskStatusData = GetTaskStatusData(selectedTask.status);\n  const [editMode, enterEditMode] = useState(false);\n  const [val, setVal] = useState(taskStatusData.id);\n\n  const handleStatusChange = event => {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*'\n        },\n        body: JSON.stringify({\n          collection: \"meeting_tasks\",\n          taskId: selectedTask.id,\n          status: event.target.value\n        })\n      };\n      fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions).then(response => response.json()).then(data => setRefresh(data.taskId));\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setVal(event.target.value);\n    selectedTask.status = event.target.value;\n  };\n\n  const [titleState, setTitle] = useState('');\n  const [descState, setDesc] = useState('');\n  const [workTimeState, setWorkTime] = useState('');\n  const [selectedDate, handleDateChange] = useState(new Date());\n  var workTime = moment.duration(moment(selectedTask.endTime, \"HH:mm\").diff(moment(selectedTask.startTime, \"HH:mm\")));\n\n  const editModeOn = () => {\n    enterEditMode(true);\n    setTitle(selectedTask.title);\n    setDesc(selectedTask.desc);\n    setWorkTime(selectedTask.workTime);\n    handleDateChange(moment(selectedTask.date, \"DD/MM/yyy\"));\n  };\n\n  const editModeOff = () => {\n    enterEditMode(false);\n    setTitle('');\n    setDesc('');\n    setWorkTime('');\n  }; // moves the menu below the select input\n\n\n  const menuProps = {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  async function updateTask() {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          token: user.uid,\n          taskId: selectedTask.id,\n          title: selectedTask.title,\n          desc: selectedTask.desc,\n          date: moment(selectedDate).format(\"DD/MM/yyy\"),\n          status: selectedTask.status,\n          address: selectedTask.address,\n          startTime: selectedTask.startTime,\n          endTime: selectedTask.endTime,\n          category: \"\"\n        })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-meeting-task', requestOptions).then(response => response);\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setRefresh(selectedTask.id);\n    editModeOff();\n  }\n\n  ;\n\n  async function deleteTask() {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          taskId: selectedTask.id,\n          token: user.uid\n        })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/delete-meeting-task', requestOptions).then(response => response);\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setRefresh(selectedTask.id);\n    handleClose();\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"70%\"\n    },\n    className: classes.taskTitleInput,\n    value: selectedTask.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.detailTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, selectedTask.title), editMode ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"edit\",\n    className: classes.editButton,\n    onClick: () => {\n      deleteTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    style: {\n      color: '#c45a5a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"edit\",\n    className: classes.editButton,\n    onClick: () => {\n      editModeOn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CreateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disableUnderline: true,\n    classes: {\n      root: classes.taskSelect\n    },\n    MenuProps: menuProps,\n    value: taskStatusData.id,\n    onChange: handleStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('done'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"in_progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('in_progress'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"not_done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('not_done')))))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }), editMode ? /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    style: {\n      width: \"70%\"\n    },\n    className: classes.taskDescInput,\n    value: descState,\n    onChange: e => setDesc(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, selectedTask.desc)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PlaceIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, selectedTask.address)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ScheduleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, selectedTask.startTime, \" - \", selectedTask.endTime)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, parseInt(workTime.asHours()), \"h\", parseInt(workTime.asMinutes()) % 60, \"m\")), editMode ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TodayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    style: {\n      width: 90,\n      marginLeft: 10,\n      background: 'rgba(171, 171, 171, 0.15)',\n      borderRadius: '5px',\n      border: 'none'\n    },\n    format: \"D.M.YYYY\",\n    value: selectedDate,\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }\n  })) : \"\", editMode ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.updateTaskButton,\n    onClick: () => {\n      editModeOff();\n      updateTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, \"Aktualizova\\u0165\") : \"\"));\n}\nMeetDetailDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedTask: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/MeetDetailDialog.js"],"names":["React","useState","useContext","makeStyles","GetTaskStatusData","moment","PropTypes","Dialog","Button","Select","MenuItem","FormControl","TextField","DatePicker","MuiPickersUtilsProvider","MomentUtils","FormatAlignLeftIcon","TimerIcon","PlaceIcon","ScheduleIcon","IconButton","CloseIcon","CreateIcon","FlagIcon","TodayIcon","DeleteIcon","DataContext","UserContext","styles","theme","detailTitle","fontFamily","color","fontWeight","fontSize","paddingBottom","marginBlockStart","marginBlockEnd","detailText","paddingLeft","closeButton","position","right","spacing","top","editButton","taskStatus","padding","borderRadius","taskSelect","width","background","borderStyle","borderWidth","marginLeft","taskTitleInput","taskDescInput","updateTaskButton","alignSelf","margin","renderTaskStatusBubble","taskStatusData","classes","backgroundColor","title","MeetDetailDialog","props","onClose","selectedTask","open","setRefresh","user","handleClose","enterEditMode","status","editMode","val","setVal","id","handleStatusChange","event","requestOptions","method","headers","body","JSON","stringify","collection","taskId","target","value","fetch","then","response","json","data","error","console","log","alert","titleState","setTitle","descState","setDesc","workTimeState","setWorkTime","selectedDate","handleDateChange","Date","workTime","duration","endTime","diff","startTime","editModeOn","desc","date","editModeOff","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","updateTask","localStorage","getItem","token","uid","format","address","category","deleteTask","style","boxShadow","elevation","display","alignItems","justifyContent","paddingTop","root","e","parseInt","asHours","asMinutes","border","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\nimport moment from 'moment';\n\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\n\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport TodayIcon from '@material-ui/icons/Today';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { DataContext } from \"../providers/DataProvider\";\nimport { UserContext } from \"../providers/UserProvider\";\n\nconst styles = makeStyles((theme) => ({\n    detailTitle: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '700',\n        fontSize: '1.6em',\n        paddingBottom: '15px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n    },\n    detailText: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        paddingLeft: '20px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: theme.spacing(3.5),\n        color: '#1f1f1d',\n    },\n    editButton: {\n        position: 'absolute',\n        right: theme.spacing(8),\n        top: theme.spacing(3.5),\n        color: '#2B2B28',\n    },\n    taskStatus: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        padding: '0.4em 0.7em',\n        borderRadius: '10px',\n    },\n    taskSelect: {\n        width: '90%',\n        background: '#FFEAC8',\n        borderStyle:'none',\n        borderWidth: 2,\n        borderRadius: '10px',\n        marginLeft: 18,\n        padding: '10px 0px',\n        \"&:focus\":{\n            borderRadius: '10px',\n            background: 'transparent',\n        },\n    },\n    taskTitleInput: {\n        paddingBottom: '10px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        \"& input\": {\n            fontFamily: 'Poppins',\n            color: '#2b2b2b',\n            fontWeight: '700',\n            fontSize: '1.6em',\n        }\n    },\n    taskDescInput: {\n        paddingLeft: '20px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        \"& textarea\": {\n            fontFamily: 'Poppins',\n            color: '#2b2b2b',\n            fontWeight: '500',\n            fontSize: '1.1em',\n        }\n    },\n    updateTaskButton: {\n        width: '60%',\n        alignSelf: 'center',\n        margin: '20px 20px 0 20px',\n        fontFamily: 'Poppins',\n        fontSize: '14px',\n        fontWeight: '600',\n        color: 'white',\n        background: '#66c660',\n        '&:hover': {\n            background: '#5ab054',\n        }\n    },\n}));\n\nconst renderTaskStatusBubble = (taskStatusData) => {\n    const classes = styles();\n    return (\n        <span className={classes.taskStatus} style={{backgroundColor: taskStatusData.color}}>\n            {taskStatusData.title}\n        </span>\n    )\n}\n\nexport function MeetDetailDialog(props) {\n    const classes = styles();\n\n    const { onClose, selectedTask, open } = props;\n    const { setRefresh } = useContext(DataContext);\n    const user = useContext(UserContext);\n\n    const handleClose = () => {\n        enterEditMode(false);\n        onClose();\n    };\n\n    const taskStatusData = GetTaskStatusData(selectedTask.status);\n\n    const [editMode, enterEditMode] = useState(false);\n\n    const [val,setVal] = useState(taskStatusData.id);\n\n    const handleStatusChange = (event) => {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*' },\n                body: JSON.stringify({ \n                    collection: \"meeting_tasks\",\n                    taskId: selectedTask.id,\n                    status: event.target.value,\n                    })\n            };\n            fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions)\n                .then(response => response.json())\n                .then(data => setRefresh(data.taskId));\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n        setVal(event.target.value);\n        selectedTask.status = event.target.value;\n    };\n\n    const [titleState, setTitle] = useState('');\n    const [descState, setDesc] = useState('');\n    const [workTimeState, setWorkTime] = useState('');\n    const [selectedDate, handleDateChange] = useState(new Date());\n    \n    var workTime = moment.duration(moment(selectedTask.endTime, \"HH:mm\").diff(moment(selectedTask.startTime, \"HH:mm\")));\n\n    const editModeOn = () => {\n        enterEditMode(true);\n        setTitle(selectedTask.title);\n        setDesc(selectedTask.desc);\n        setWorkTime(selectedTask.workTime);\n        handleDateChange(moment(selectedTask.date, \"DD/MM/yyy\"));\n    }\n\n    const editModeOff = () => {\n        enterEditMode(false);\n        setTitle('');\n        setDesc('');\n        setWorkTime('');\n    }\n\n    // moves the menu below the select input\n    const menuProps = {\n        anchorOrigin: {\n        vertical: \"bottom\",\n            horizontal: \"left\"\n        },\n        transformOrigin: {\n        vertical: \"top\",\n            horizontal: \"left\"\n        },\n        getContentAnchorEl: null\n    };\n\n    async function updateTask() {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ \n                    token: user.uid,\n                    taskId: selectedTask.id,\n                    title: selectedTask.title,\n                    desc: selectedTask.desc,\n                    date: moment(selectedDate).format(\"DD/MM/yyy\"),\n                    status: selectedTask.status,\n                    address: selectedTask.address,\n                    startTime: selectedTask.startTime,\n                    endTime: selectedTask.endTime,\n                    category: \"\",\n                })\n            };\n            await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-meeting-task', requestOptions)\n            .then(response => response);\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setRefresh(selectedTask.id);\n        editModeOff();\n    };\n\n    async function deleteTask() {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ taskId: selectedTask.id, token: user.uid })\n            };\n            await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/delete-meeting-task', requestOptions)\n            .then(response => response);\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setRefresh(selectedTask.id);\n        handleClose();\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Dialog\n            onClose={handleClose}\n            open={open}\n            fullWidth={true}\n            maxWidth={'xs'}\n            PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', }, elevation: 0 }}\n            BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n        >\n            { editMode\n                ? <TextField style={{width: \"70%\"}} className={classes.taskTitleInput} value={selectedTask.title}/> \n                : <h1 className={classes.detailTitle}>{selectedTask.title}</h1>\n            }\n            { editMode \n                ?   <IconButton aria-label=\"edit\" className={classes.editButton} onClick={() => {deleteTask()}}>\n                        <DeleteIcon style={{color: '#c45a5a'}}/>\n                    </IconButton>\n                :   <IconButton aria-label=\"edit\" className={classes.editButton} onClick={() => {editModeOn()}}>\n                        <CreateIcon />\n                    </IconButton>\n            }\n            \n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                <CloseIcon />\n            </IconButton>\n\n            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                <FlagIcon style={{ paddingTop: '2px' }} />\n                <FormControl>\n                    <Select\n                        disableUnderline\n                        classes={{ root: classes.taskSelect }}\n                        MenuProps={menuProps}\n                        value={taskStatusData.id}\n                        onChange={handleStatusChange}\n                    >\n                        <MenuItem value={\"done\"}>{renderTaskStatusBubble(GetTaskStatusData('done'))}</MenuItem>\n                        <MenuItem value={\"in_progress\"}>{renderTaskStatusBubble(GetTaskStatusData('in_progress'))}</MenuItem>\n                        <MenuItem value={\"not_done\"}>{renderTaskStatusBubble(GetTaskStatusData('not_done'))}</MenuItem>\n                    </Select>\n                </FormControl>\n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <FormatAlignLeftIcon style={{ paddingTop: '2px' }} />\n                { editMode \n                    ?   <TextField multiline style={{width: \"70%\"}} className={classes.taskDescInput} value={descState} onChange={e => setDesc(e.target.value)}/> \n                    :   <h3 className={classes.detailText}>\n                            {selectedTask.desc}\n                        </h3>\n                }\n            </span>\n            \n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <PlaceIcon />\n                <h3 className={classes.detailText}>\n                    {selectedTask.address}\n                </h3>\n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <ScheduleIcon />\n                <h3 className={classes.detailText}>\n                    {selectedTask.startTime} - {selectedTask.endTime}\n                </h3>\n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <TimerIcon />\n                <h3 className={classes.detailText}>\n                    {parseInt(workTime.asHours())}h{parseInt(workTime.asMinutes())%60}m\n                </h3>\n            </span>\n            \n            { editMode \n                ?   <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                        <TodayIcon />\n                        <DatePicker\n                            autoOk\n                            disableToolbar\n                            variant=\"inline\"\n                            inputVariant=\"outlined\"\n                            style={{ width: 90, marginLeft: 10, background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px', border: 'none' }}\n                            format=\"D.M.YYYY\"\n                            value={selectedDate}\n                            onChange={date => handleDateChange(date)}\n                        />\n                    </span>\n                :   \"\"\n            }\n\n            { editMode\n                ?   <Button className={classes.updateTaskButton} onClick={() => {editModeOff();updateTask()}}>\n                        Aktualizovať\n                    </Button>\n                :   \"\"\n            }\n\n        </Dialog>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nMeetDetailDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedTask: PropTypes.object.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
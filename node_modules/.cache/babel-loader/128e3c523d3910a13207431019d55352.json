{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/WorkTaskBubble.js\";\nimport { useStyles } from \"../App\";\nimport \"../App.css\";\nimport React, { useContext, useState } from \"react\";\nimport { GetTaskStatusData } from \"./TaskStatusData\";\nimport { WorkDetailDialog } from \"../dialogWindows/WorkDetailDialog\";\nimport Box from \"@material-ui/core/Box\";\nimport moment from \"moment\";\nimport \"moment/locale/sk\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport { DataContext } from \"../providers/DataProvider\";\nexport function WorkTaskBubble(date) {\n  const classes = useStyles();\n  const {\n    taskData\n  } = useContext(DataContext);\n  let filteredData = [];\n  const [state, setState] = useState([]);\n\n  if (taskData.workTasks !== undefined) {\n    filteredData = taskData.workTasks.filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: \"-1\",\n    title: \"Test\",\n    desc: \"Test\",\n    workTime: \"100h\",\n    status: \"not_done\"\n  });\n\n  const handleClickOpen = task => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const getItemStyle = (isDragging, item) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    marginBottom: '1em',\n    backgroundColor: GetTaskStatusData(item.status).color,\n    // change background colour if dragging\n    boxShadow: isDragging ? '0px 0px 10px 0px rgba(0,0,0, 0.2)' : ''\n  });\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: moment(date).unix() + \"w\",\n      type: \"WORK\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Pr\\xE1zdne\"), provided.placeholder)));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: moment(date).unix() + \"w\",\n      type: \"WORK\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: { ...provided.draggableProps.style\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskBubble,\n      style: getItemStyle(snapshot.isDragging, item),\n      onClick: () => handleClickOpen(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n      style: {\n        marginRight: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, item.workTime))))), provided.placeholder)), /*#__PURE__*/React.createElement(WorkDetailDialog, {\n      onClose: handleClose,\n      open: open,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/WorkTaskBubble.js"],"names":["useStyles","React","useContext","useState","GetTaskStatusData","WorkDetailDialog","Box","moment","Droppable","Draggable","TimerIcon","DataContext","WorkTaskBubble","date","classes","taskData","filteredData","state","setState","workTasks","undefined","filter","task","includes","format","open","setOpen","selectedTask","setSelectedTask","id","title","desc","workTime","status","handleClickOpen","handleClose","getItemStyle","isDragging","item","userSelect","marginBottom","backgroundColor","color","boxShadow","length","justifyContent","height","unix","provided","droppableProps","innerRef","textAlign","paddingTop","fontFamily","fontSize","fontWeight","placeholder","map","index","snapshot","draggableProps","dragHandleProps","style","taskBubble","bubbleTitle","marginRight","bubbleWorkTime"],"mappings":"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","sourcesContent":["import { useStyles } from \"../App\";\nimport \"../App.css\";\nimport React, { useContext, useState } from \"react\";\nimport { GetTaskStatusData } from \"./TaskStatusData\";\nimport { WorkDetailDialog } from \"../dialogWindows/WorkDetailDialog\";\nimport Box from \"@material-ui/core/Box\";\nimport moment from \"moment\";\nimport \"moment/locale/sk\";\n\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\n\nimport { DataContext } from \"../providers/DataProvider\";\n\nexport function WorkTaskBubble(date) {\n  const classes = useStyles();\n\n  const { taskData } = useContext(DataContext);\n\n  let filteredData = [];\n\n  const [state, setState] = useState([]);\n\n  if (taskData.workTasks !== undefined) {\n    filteredData = taskData.workTasks.filter((task) =>\n      task.date.includes(moment(date).format(\"DD/MM/yyyy\"))\n    ); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: \"-1\",\n    title: \"Test\",\n    desc: \"Test\",\n    workTime: \"100h\",\n    status: \"not_done\",\n  });\n\n  const handleClickOpen = (task) => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const getItemStyle = (isDragging, item) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    marginBottom: '1em',\n    backgroundColor: GetTaskStatusData(item.status).color,\n  \n    // change background colour if dragging\n    boxShadow: isDragging ? '0px 0px 10px 0px rgba(0,0,0, 0.2)' : '',\n  });\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return (\n      <div style={{ justifyContent: \"center\", height: \"100%\" }}>\n        <Droppable droppableId={moment(date).unix() + \"w\"} type=\"WORK\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              <h3\n                style={{\n                  textAlign: \"center\",\n                  paddingTop: \"18px\",\n                  color: \"#bdbdbd\",\n                  fontFamily: \"Poppins\",\n                  fontSize: \"18px\",\n                  fontWeight: \"500\",\n                }}\n              >\n                Prázdne\n              </h3>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Droppable droppableId={moment(date).unix() + \"w\"} type=\"WORK\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {filteredData.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        ...provided.draggableProps.style\n                      }}\n                    >\n                      <div\n                        className={classes.taskBubble}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          item\n                        )}\n                        onClick={() => handleClickOpen(item)}\n                      >\n                        <Box flexGrow={1}>\n                          <h3 className={classes.bubbleTitle}>{item.title}</h3>\n                        </Box>\n                        <TimerIcon style={{ marginRight: \"5px\" }} />\n                        <h3 className={classes.bubbleWorkTime}>\n                          {item.workTime}\n                        </h3>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        <WorkDetailDialog\n          onClose={handleClose}\n          open={open}\n          selectedTask={selectedTask}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
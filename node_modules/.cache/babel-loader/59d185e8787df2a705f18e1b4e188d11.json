{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/WorkTaskBubble.js\";\nimport { useStyles } from \"../App\";\nimport \"../App.css\";\nimport React, { useContext, useState } from \"react\";\nimport { GetTaskStatusData } from \"./TaskStatusData\";\nimport { WorkDetailDialog } from \"../dialogWindows/WorkDetailDialog\";\nimport Box from \"@material-ui/core/Box\";\nimport moment from \"moment\";\nimport \"moment/locale/sk\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport { DataContext } from \"../providers/DataProvider\";\nexport function WorkTaskBubble(date) {\n  const classes = useStyles();\n  const {\n    taskData\n  } = useContext(DataContext);\n  let filteredData = [];\n  const [state, setState] = useState([]);\n\n  if (taskData.workTasks !== undefined) {\n    filteredData = taskData.workTasks.filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: \"-1\",\n    title: \"Test\",\n    desc: \"Test\",\n    workTime: \"100h\",\n    status: \"not_done\"\n  });\n\n  const handleClickOpen = task => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n  };\n\n  function onDragEnd(result) {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n    console.log(sInd);\n    console.log(dInd);\n\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n      setState(newState.filter(group => group.length));\n    }\n  }\n\n  ;\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Pr\\xE1zdne\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: `${moment(date).unix()}`,\n      type: \"work_task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 3\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: {\n        marginBottom: '1em',\n        ...provided.draggableProps.style\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskBubble,\n      style: {\n        backgroundColor: GetTaskStatusData(item.status).color\n      },\n      onClick: () => handleClickOpen(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 12\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n      style: {\n        marginRight: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, item.workTime))))), provided.placeholder)), /*#__PURE__*/React.createElement(WorkDetailDialog, {\n      onClose: handleClose,\n      open: open,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/WorkTaskBubble.js"],"names":["useStyles","React","useContext","useState","GetTaskStatusData","WorkDetailDialog","Box","moment","Droppable","Draggable","TimerIcon","DataContext","WorkTaskBubble","date","classes","taskData","filteredData","state","setState","workTasks","undefined","filter","task","includes","format","open","setOpen","selectedTask","setSelectedTask","id","title","desc","workTime","status","handleClickOpen","handleClose","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","onDragEnd","sInd","dInd","console","log","items","newState","group","length","justifyContent","height","textAlign","paddingTop","color","fontFamily","fontSize","fontWeight","unix","provided","droppableProps","innerRef","map","item","draggableProps","dragHandleProps","marginBottom","style","taskBubble","backgroundColor","bubbleTitle","marginRight","bubbleWorkTime","placeholder"],"mappings":"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","sourcesContent":["import { useStyles } from \"../App\";\nimport \"../App.css\";\nimport React, { useContext, useState } from \"react\";\nimport { GetTaskStatusData } from \"./TaskStatusData\";\nimport { WorkDetailDialog } from \"../dialogWindows/WorkDetailDialog\";\nimport Box from \"@material-ui/core/Box\";\nimport moment from \"moment\";\nimport \"moment/locale/sk\";\n\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\n\nimport { DataContext } from \"../providers/DataProvider\";\n\nexport function WorkTaskBubble(date) {\n  const classes = useStyles();\n\n  const { taskData } = useContext(DataContext);\n\n  let filteredData = [];\n\n  const [state, setState] = useState([]);\n\n  if (taskData.workTasks !== undefined) {\n    filteredData = taskData.workTasks.filter((task) => \n      task.date.includes(moment(date).format(\"DD/MM/yyyy\"))\n\t); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: \"-1\",\n    title: \"Test\",\n    desc: \"Test\",\n    workTime: \"100h\",\n    status: \"not_done\",\n  });\n\n  const handleClickOpen = (task) => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const reorder = (list, startIndex, endIndex) => {\n\tconst result = Array.from(list);\n\tconst [removed] = result.splice(startIndex, 1);\n\tresult.splice(endIndex, 0, removed);\n  \n\treturn result;\n  };\n  \n  const move = (source, destination, droppableSource, droppableDestination) => {\n\tconst sourceClone = Array.from(source);\n\tconst destClone = Array.from(destination);\n\tconst [removed] = sourceClone.splice(droppableSource.index, 1);\n  \n\tdestClone.splice(droppableDestination.index, 0, removed);\n  \n\tconst result = {};\n\tresult[droppableSource.droppableId] = sourceClone;\n\tresult[droppableDestination.droppableId] = destClone;\n  \n\treturn result;\n  };\n\n  function onDragEnd(result) {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n\tconsole.log(sInd)\n\tconsole.log(dInd)\n\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n\n      setState(newState.filter(group => group.length));\n    }\n  };\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return (\n      <div style={{ justifyContent: \"center\", height: \"100%\" }}>\n        <h3\n          style={{\n            textAlign: \"center\",\n            paddingTop: \"18px\",\n            color: \"#bdbdbd\",\n            fontFamily: \"Poppins\",\n            fontSize: \"18px\",\n            fontWeight: \"500\",\n          }}\n        >\n          Prázdne\n        </h3>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n\t\t<Droppable droppableId={`${moment(date).unix()}`} type='work_task'>\n\t\t\t{(provided) => (\n\t\t\t\t<div {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t{filteredData.map((item, index) => (\n\t\t\t\t\t\t<Draggable key={item.id} draggableId={item.id} index={index}>\n\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: '1em',\n\t\t\t\t\t\t\t\t\t...provided.draggableProps.style\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={classes.taskBubble}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: GetTaskStatusData(item.status).color,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClickOpen(item)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Box flexGrow={1}>\n\t\t\t\t\t\t\t\t\t\t\t<h3 className={classes.bubbleTitle}>\n\t\t\t\t\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t<TimerIcon style={{ marginRight: \"5px\" }} />\n\t\t\t\t\t\t\t\t\t\t<h3 className={classes.bubbleWorkTime}>\n\t\t\t\t\t\t\t\t\t\t\t{item.workTime}\n\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t))}\n\t\t\t\t\t{provided.placeholder}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Droppable>\n        <WorkDetailDialog\n          onClose={handleClose}\n          open={open}\n          selectedTask={selectedTask}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/DetailDialog.js\";\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FlagIcon from '@material-ui/icons/Flag';\nconst styles = makeStyles(theme => ({\n  detailTitle: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '700',\n    fontSize: '1.6em',\n    paddingBottom: '15px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0\n  },\n  detailText: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    paddingLeft: '20px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(2),\n    top: theme.spacing(3.5),\n    color: '#1f1f1d'\n  },\n  editButton: {\n    position: 'absolute',\n    right: theme.spacing(8),\n    top: theme.spacing(3.5),\n    color: '#2B2B28'\n  },\n  taskStatus: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    padding: '0.4em 0.7em',\n    borderRadius: '10px'\n  },\n  taskSelect: {\n    width: '90%',\n    background: '#FFEAC8',\n    borderStyle: 'none',\n    borderWidth: 2,\n    borderRadius: '10px',\n    marginLeft: 18,\n    padding: '10px 0px',\n    \"&:focus\": {\n      borderRadius: '10px',\n      background: 'transparent'\n    }\n  },\n  taskInput: {\n    paddingBottom: '10px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    \"& input\": {\n      fontFamily: 'Poppins',\n      color: '#2b2b2b',\n      fontWeight: '700',\n      fontSize: '1.6em'\n    }\n  }\n}));\n\nconst renderTaskStatusBubble = taskStatusData => {\n  const classes = styles();\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.taskStatus,\n    style: {\n      backgroundColor: taskStatusData.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, taskStatusData.title);\n};\n\nexport function DetailDialog(props) {\n  const classes = styles();\n  const {\n    onClose,\n    selectedTask,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedTask);\n  };\n\n  const taskStatusData = GetTaskStatusData(selectedTask.status);\n  const [editMode, enterEditMode] = useState(false);\n  const [val, setVal] = useState(taskStatusData.id);\n\n  const handleStatusChange = event => {\n    setVal(event.target.value);\n    selectedTask.status = event.target.value;\n  }; // moves the menu below the select input\n\n\n  const menuProps = {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"70%\"\n    },\n    className: classes.taskInput,\n    value: selectedTask.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.detailTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, selectedTask.title), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"edit\",\n    className: classes.editButton,\n    onClick: () => {\n      editMode ? enterEditMode(false) : enterEditMode(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CreateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disableUnderline: true,\n    classes: {\n      root: classes.taskSelect\n    },\n    MenuProps: menuProps,\n    value: taskStatusData.id,\n    onChange: handleStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('done'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"in_progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('in_progress'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"not_done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('not_done')))))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), editMode ? /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    style: {\n      width: \"70%\"\n    },\n    className: classes.taskInput,\n    value: selectedTask.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, selectedTask.desc)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, selectedTask.workTime)));\n}\nDetailDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedTask: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/DetailDialog.js"],"names":["React","useState","makeStyles","withStyles","GetTaskStatusData","PropTypes","Dialog","Select","MenuItem","FormControl","TextField","FormatAlignLeftIcon","TimerIcon","IconButton","CloseIcon","CreateIcon","FlagIcon","styles","theme","detailTitle","fontFamily","color","fontWeight","fontSize","paddingBottom","marginBlockStart","marginBlockEnd","detailText","paddingLeft","closeButton","position","right","spacing","top","editButton","taskStatus","padding","borderRadius","taskSelect","width","background","borderStyle","borderWidth","marginLeft","taskInput","renderTaskStatusBubble","taskStatusData","classes","backgroundColor","title","DetailDialog","props","onClose","selectedTask","open","handleClose","status","editMode","enterEditMode","val","setVal","id","handleStatusChange","event","target","value","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","style","boxShadow","elevation","display","alignItems","justifyContent","paddingTop","root","desc","workTime","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\n\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FlagIcon from '@material-ui/icons/Flag';\n\nconst styles = makeStyles((theme) => ({\n    detailTitle: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '700',\n        fontSize: '1.6em',\n        paddingBottom: '15px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n    },\n    detailText: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        paddingLeft: '20px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: theme.spacing(3.5),\n        color: '#1f1f1d',\n    },\n    editButton: {\n        position: 'absolute',\n        right: theme.spacing(8),\n        top: theme.spacing(3.5),\n        color: '#2B2B28',\n    },\n    taskStatus: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        padding: '0.4em 0.7em',\n        borderRadius: '10px',\n    },\n    taskSelect: {\n        width: '90%',\n        background: '#FFEAC8',\n        borderStyle:'none',\n        borderWidth: 2,\n        borderRadius: '10px',\n        marginLeft: 18,\n        padding: '10px 0px',\n        \"&:focus\":{\n            borderRadius: '10px',\n            background: 'transparent',\n        },\n    },\n    taskInput: {\n        paddingBottom: '10px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        \"& input\": {\n            fontFamily: 'Poppins',\n            color: '#2b2b2b',\n            fontWeight: '700',\n            fontSize: '1.6em',\n        }\n    },\n}));\n\nconst renderTaskStatusBubble = (taskStatusData) => {\n    const classes = styles();\n    return (\n        <span className={classes.taskStatus} style={{backgroundColor: taskStatusData.color}}>\n            {taskStatusData.title}\n        </span>\n    )\n}\n\nexport function DetailDialog(props) {\n    const classes = styles();\n\n    const { onClose, selectedTask, open } = props;\n\n    const handleClose = () => {\n        onClose(selectedTask);\n    };\n\n    const taskStatusData = GetTaskStatusData(selectedTask.status);\n\n    const [editMode, enterEditMode] = useState(false);\n\n    const [val,setVal] = useState(taskStatusData.id);\n\n    const handleStatusChange = (event) => {\n        setVal(event.target.value);\n        selectedTask.status = event.target.value;\n    };\n\n    // moves the menu below the select input\n    const menuProps = {\n        anchorOrigin: {\n        vertical: \"bottom\",\n            horizontal: \"left\"\n        },\n        transformOrigin: {\n        vertical: \"top\",\n            horizontal: \"left\"\n        },\n        getContentAnchorEl: null\n    };\n\n    return (\n        <Dialog\n            onClose={handleClose}\n            open={open}\n            fullWidth={true}\n            maxWidth={'xs'}\n            PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', }, elevation: 0 }}\n            BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n        >\n            { editMode\n                ? <TextField style={{width: \"70%\"}} className={classes.taskInput} value={selectedTask.title}/> \n                : <h1 className={classes.detailTitle}>{selectedTask.title}</h1>\n            }\n            <IconButton aria-label=\"edit\" className={classes.editButton} onClick={() => {editMode ? enterEditMode(false) : enterEditMode(true)}}>\n                <CreateIcon />\n            </IconButton>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                <CloseIcon />\n            </IconButton>\n\n            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                <FlagIcon style={{ paddingTop: '2px' }} />\n                <FormControl>\n                    <Select\n                        disableUnderline\n                        classes={{ root: classes.taskSelect }}\n                        MenuProps={menuProps}\n                        value={taskStatusData.id}\n                        onChange={handleStatusChange}\n                    >\n                        <MenuItem value={\"done\"}>{renderTaskStatusBubble(GetTaskStatusData('done'))}</MenuItem>\n                        <MenuItem value={\"in_progress\"}>{renderTaskStatusBubble(GetTaskStatusData('in_progress'))}</MenuItem>\n                        <MenuItem value={\"not_done\"}>{renderTaskStatusBubble(GetTaskStatusData('not_done'))}</MenuItem>\n                    </Select>\n                </FormControl>\n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <FormatAlignLeftIcon style={{ paddingTop: '2px' }} />\n                { editMode \n                    ?   <TextField multiline style={{width: \"70%\"}} className={classes.taskInput} value={selectedTask.title}/> \n                    :   <h3 className={classes.detailText}>\n                            {selectedTask.desc}\n                        </h3>\n                }\n                \n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <TimerIcon />\n                <h3 className={classes.detailText}>\n                    {selectedTask.workTime}\n                </h3>\n            </span>\n\n        </Dialog>\n    );\n}\n\nDetailDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedTask: PropTypes.object.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
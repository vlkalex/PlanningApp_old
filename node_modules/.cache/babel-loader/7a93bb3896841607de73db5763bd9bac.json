{"ast":null,"code":"import moment from 'moment';\nexport function getISOWeekDates(weekInYear = 1) {\n  const startOfWeek = moment().week(weekInYear).startOf('week');\n  const endOfWeek = moment().week(weekInYear).endOf('week');\n  const startMonth = startOfWeek.format('MMMM');\n  const endMonth = endOfWeek.format('MMMM');\n  let days = new Array();\n  let day = startOfWeek;\n\n  while (day <= endOfWeek) {\n    days.push(day.toDate().getTime());\n    day = day.clone().add(1, 'd');\n  }\n\n  if (endMonth !== startMonth) return {\n    timestamps: days,\n    month: `${startMonth} - ${endMonth} ${endOfWeek.year()}`\n  };\n  return {\n    timestamps: days,\n    month: `${startMonth} ${endOfWeek.year()}`\n  };\n}","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/helpers.ts"],"names":["moment","getISOWeekDates","weekInYear","startOfWeek","week","startOf","endOfWeek","endOf","startMonth","format","endMonth","days","Array","day","push","toDate","getTime","clone","add","timestamps","month","year"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAOA,OAAO,SAASC,eAAT,CAAyBC,UAAU,GAAG,CAAtC,EAA2D;AAChE,QAAMC,WAAW,GAAGH,MAAM,GAAGI,IAAT,CAAcF,UAAd,EAA0BG,OAA1B,CAAkC,MAAlC,CAApB;AACA,QAAMC,SAAS,GAAGN,MAAM,GAAGI,IAAT,CAAcF,UAAd,EAA0BK,KAA1B,CAAgC,MAAhC,CAAlB;AAEA,QAAMC,UAAU,GAAGL,WAAW,CAACM,MAAZ,CAAmB,MAAnB,CAAnB;AACA,QAAMC,QAAQ,GAAGJ,SAAS,CAACG,MAAV,CAAiB,MAAjB,CAAjB;AAEA,MAAIE,IAAI,GAAG,IAAIC,KAAJ,EAAX;AACA,MAAIC,GAAG,GAAGV,WAAV;;AAEA,SAAOU,GAAG,IAAIP,SAAd,EAAyB;AACvBK,IAAAA,IAAI,CAACG,IAAL,CAAUD,GAAG,CAACE,MAAJ,GAAaC,OAAb,EAAV;AACAH,IAAAA,GAAG,GAAGA,GAAG,CAACI,KAAJ,GAAYC,GAAZ,CAAgB,CAAhB,EAAmB,GAAnB,CAAN;AACD;;AAED,MAAIR,QAAQ,KAAKF,UAAjB,EACE,OAAO;AACLW,IAAAA,UAAU,EAAER,IADP;AAELS,IAAAA,KAAK,EAAG,GAAEZ,UAAW,MAAKE,QAAS,IAAGJ,SAAS,CAACe,IAAV,EAAiB;AAFlD,GAAP;AAKF,SAAO;AACLF,IAAAA,UAAU,EAAER,IADP;AAELS,IAAAA,KAAK,EAAG,GAAEZ,UAAW,IAAGF,SAAS,CAACe,IAAV,EAAiB;AAFpC,GAAP;AAID","sourcesContent":["import moment from 'moment';\n\ninterface CurrentWeekModel {\n  timestamps: number[];\n  month: string;\n}\n\nexport function getISOWeekDates(weekInYear = 1): CurrentWeekModel {\n  const startOfWeek = moment().week(weekInYear).startOf('week');\n  const endOfWeek = moment().week(weekInYear).endOf('week');\n\n  const startMonth = startOfWeek.format('MMMM');\n  const endMonth = endOfWeek.format('MMMM');\n\n  let days = new Array<number>();\n  let day = startOfWeek;\n\n  while (day <= endOfWeek) {\n    days.push(day.toDate().getTime());\n    day = day.clone().add(1, 'd');\n  }\n\n  if (endMonth !== startMonth)\n    return {\n      timestamps: days,\n      month: `${startMonth} - ${endMonth} ${endOfWeek.year()}`\n    };\n\n  return {\n    timestamps: days,\n    month: `${startMonth} ${endOfWeek.year()}`\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
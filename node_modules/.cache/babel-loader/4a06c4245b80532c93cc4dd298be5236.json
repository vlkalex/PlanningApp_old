{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js\";\nimport { useStyles } from '../App';\nimport React, { Component } from 'react';\nimport Box from '@material-ui/core/Box';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport data from '../MOCK_DATA.json';\nimport { SettingsPowerRounded } from '@material-ui/icons';\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Set backup account\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, emails.map(email => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: () => handleListItemClick(email),\n    key: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })))));\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport function TaskBubble(type) {\n  const classes = useStyles();\n  const filteredData = data.filter(task => task.type.includes(type)); //filter tasks by type specified\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, filteredData.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.taskBubble,\n    style: {\n      backgroundColor: item.state\n    },\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.bubbleTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n    style: {\n      marginRight: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.bubbleWorkTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, item.workTime)), /*#__PURE__*/React.createElement(SimpleDialog, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }))));\n}\n;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js"],"names":["useStyles","React","Component","Box","TimerIcon","Dialog","DialogTitle","List","ListItem","ListItemText","data","SettingsPowerRounded","SimpleDialog","props","classes","onClose","selectedValue","open","handleClose","handleListItemClick","value","emails","map","email","propTypes","PropTypes","func","isRequired","bool","string","TaskBubble","type","filteredData","filter","task","includes","setOpen","useState","handleClickOpen","item","index","id","taskBubble","backgroundColor","state","bubbleTitle","title","marginRight","bubbleWorkTime","workTime"],"mappings":"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","sourcesContent":["import { useStyles } from '../App';\nimport React, { Component } from 'react';\nimport Box from '@material-ui/core/Box';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport data from '../MOCK_DATA.json';\nimport { SettingsPowerRounded } from '@material-ui/icons';\n\nfunction SimpleDialog(props) {\n    const classes = useStyles();\n    const { onClose, selectedValue, open } = props;\n  \n    const handleClose = () => {\n      onClose(selectedValue);\n    };\n  \n    const handleListItemClick = (value) => {\n      onClose(value);\n    };\n  \n    return (\n      <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n        <List>\n          {emails.map((email) => (\n            <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n              <ListItemText primary={email} />\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n    );\n}\n\nSimpleDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n};\n\nexport function TaskBubble(type) {\n    const classes = useStyles();\n\n    const filteredData = data.filter((task) => task.type.includes(type)); //filter tasks by type specified\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            {filteredData.map((item, index) => (\n                <React.Fragment key={item.id} >\n                    <Box className={classes.taskBubble} style={{ backgroundColor: item.state }} onClick={handleClickOpen}>\n                        <Box flexGrow={1}>\n                            <h3 className={classes.bubbleTitle}>{item.title}</h3>\n                        </Box>\n                        \n                        <TimerIcon style={{marginRight:'5px'}}/>\n                        <h3 className={classes.bubbleWorkTime}>{item.workTime}</h3>\n                    </Box>\n\n                    <SimpleDialog open={open} onClose={handleClose} />\n                </React.Fragment>\n            ))}\n        </div>\n    )\n  };"]},"metadata":{},"sourceType":"module"}
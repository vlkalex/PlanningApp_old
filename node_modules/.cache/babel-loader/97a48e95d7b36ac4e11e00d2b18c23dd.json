{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js\";\nimport { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { DetailDialog } from '../dialogWindows/DetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from '@material-ui/icons/Timer'; //import data from '../MOCK_DATA.json';\n\nconst getItems = (count, offset = 0) => Array.from({\n  length: count\n}, (v, k) => k).map(k => ({\n  id: `item-${k + offset}-${new Date().getTime()}`,\n  content: `item ${k + offset}`\n}));\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n * Moves an item from one list to another list.\n */\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nlet place = {\n  address: \"\",\n  city: \"\",\n  country: \"\"\n};\nlet contact = {\n  email: \"\",\n  phoneNumber: \"\"\n};\nlet meet_task = {\n  id: \"\",\n  title: \"\",\n  token: \"\",\n  desc: \"\",\n  date: \"\",\n  workTime: \"\",\n  category: \"\",\n  place: place,\n  status: \"\"\n};\nlet work_task = {\n  id: \"\",\n  token: \"\",\n  title: \"\",\n  desc: \"\",\n  date: \"\",\n  workTime: \"\",\n  status: \"\"\n};\nlet comm_task = {\n  id: \"\",\n  token: \"\",\n  title: \"\",\n  desc: \"\",\n  date: \"\",\n  contact: contact,\n  workTime: \"\",\n  status: \"\"\n};\n\nfunction AllTasks() {\n  this.date = \"\";\n  this.meet = [meet_task];\n  this.work = [work_task];\n  this.comm = [comm_task];\n}\n\n;\nlet AllTasksList = [];\n\nfunction fetchWorkTasks() {\n  fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-work-tasks').then(res => res.json()).then(data => {\n    console.log(data);\n  });\n}\n\n;\n\nfunction fetchData(type) {\n  switch (type) {\n    case \"work\":\n      fetchWorkTasks();\n\n    case \"meet\":\n      return;\n\n    case \"comm\":\n      return;\n\n    default:\n      return;\n  }\n}\n\n;\n\nconst getTasks = (data, date) => {\n  let TaskObject = new AllTasks();\n  TaskObject.date = date;\n  TaskObject.meet = data.filter(task => task.type.includes('produc')).filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\")));\n  TaskObject.work = fetchWorkTasks(date);\n  TaskObject.comm = data.filter(task => task.type.includes('comm')).filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\")));\n  return TaskObject;\n};\n\nexport function TaskBubble(type, date) {\n  const classes = useStyles();\n  let filteredData = fetchData(type); //filter tasks by specified type\n  //const AllTasks = getTasks(data, date);\n\n  AllTasksList.push(AllTasks);\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: '-1',\n    title: 'Test',\n    desc: 'Test',\n    workTime: '100h',\n    status: 'not_done'\n  });\n\n  const handleClickOpen = task => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [state, setState] = useState(AllTasksList);\n\n  function onDragEnd(result) {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n      setState(newState.filter(group => group.length));\n    }\n  }\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, \"Pr\\xE1zdne\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: `${moment(date).unix()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      className: classes.taskBubble,\n      style: {\n        backgroundColor: GetTaskStatusData(item.status).color\n      },\n      onClick: () => handleClickOpen(item),\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n      style: {\n        marginRight: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 27\n      }\n    }, item.workTime))))), provided.placeholder))), /*#__PURE__*/React.createElement(DetailDialog, {\n      onClose: handleClose,\n      open: open,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js"],"names":["useStyles","React","useState","GetTaskStatusData","DetailDialog","Box","moment","DragDropContext","Droppable","Draggable","TimerIcon","getItems","count","offset","Array","from","length","v","k","map","id","Date","getTime","content","reorder","list","startIndex","endIndex","result","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","place","address","city","country","contact","email","phoneNumber","meet_task","title","token","desc","date","workTime","category","status","work_task","comm_task","AllTasks","meet","work","comm","AllTasksList","fetchWorkTasks","fetch","then","res","json","data","console","log","fetchData","type","getTasks","TaskObject","filter","task","includes","format","TaskBubble","classes","filteredData","push","open","setOpen","selectedTask","setSelectedTask","handleClickOpen","handleClose","state","setState","onDragEnd","sInd","dInd","items","newState","group","undefined","justifyContent","height","textAlign","paddingTop","color","fontFamily","fontSize","fontWeight","unix","provided","droppableProps","innerRef","item","draggableProps","dragHandleProps","taskBubble","backgroundColor","bubbleTitle","marginRight","bubbleWorkTime","placeholder"],"mappings":"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","sourcesContent":["import { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { DetailDialog } from '../dialogWindows/DetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\n\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from '@material-ui/icons/Timer';\n\n//import data from '../MOCK_DATA.json';\n\n\n\nconst getItems = (count, offset = 0) =>\n  Array.from({ length: count }, (v, k) => k).map(k => ({\n    id: `item-${k + offset}-${new Date().getTime()}`,\n    content: `item ${k + offset}`\n  }));\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\n\nlet place = {\n  address: \"\",\n  city: \"\",\n  country: \"\"\n};\nlet contact = {\n  email: \"\",\n  phoneNumber: \"\"\n};\n\nlet meet_task = {\n  id: \"\",\n  title: \"\",\n  token: \"\",\n  desc: \"\",\n  date: \"\",\n  workTime: \"\",\n  category: \"\",\n  place: place,\n  status: \"\",\n};\nlet work_task = {\n  id: \"\",\n  token: \"\",\n  title: \"\",\n  desc: \"\",\n  date: \"\",\n  workTime: \"\",\n  status: \"\"\n};\nlet comm_task = {\n  id: \"\",\n  token: \"\",\n  title: \"\",\n  desc: \"\",\n  date: \"\",\n  contact: contact,\n  workTime: \"\",\n  status: \"\"\n};\n\nfunction AllTasks() {\n  this.date = \"\";\n  this.meet = [meet_task];\n  this.work = [work_task];\n  this.comm = [comm_task];\n};\n\nlet AllTasksList = [];\n\nfunction fetchWorkTasks() {\n  fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-work-tasks')\n    .then(res => res.json())\n    .then((data) => {\n      console.log(data);\n    })\n};\n\nfunction fetchData(type) {\n  switch(type) {\n    case \"work\": fetchWorkTasks();\n    case \"meet\": return;\n    case \"comm\": return;\n    default: return;  \n  }\n};\n\nconst getTasks = (data, date) => {\n  let TaskObject = new AllTasks();\n  TaskObject.date = date;\n  TaskObject.meet = data.filter((task) => task.type.includes('produc')).filter((task) => task.date.includes(moment(date).format(\"DD/MM/yyyy\")));\n  TaskObject.work = fetchWorkTasks(date);\n  TaskObject.comm = data.filter((task) => task.type.includes('comm')).filter((task) => task.date.includes(moment(date).format(\"DD/MM/yyyy\")));\n\n  return TaskObject;\n};\n\nexport function TaskBubble(type, date) {\n  const classes = useStyles();\n\n  let filteredData = fetchData(type); //filter tasks by specified type\n\n  //const AllTasks = getTasks(data, date);\n  AllTasksList.push(AllTasks);\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({ id: '-1', title: 'Test', desc: 'Test', workTime: '100h', status: 'not_done' });\n\n  const handleClickOpen = (task) => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const [state, setState] = useState(AllTasksList);\n\n  function onDragEnd(result) {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n\n      setState(newState.filter(group => group.length));\n    }\n  }\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return (\n      <div style={{ justifyContent: \"center\", height: \"100%\" }}>\n        <h3 style={{ textAlign: \"center\", paddingTop: \"18px\", color: \"#bdbdbd\", fontFamily: \"Poppins\", fontSize: \"18px\", fontWeight: \"500\" }}>\n          Prázdne\n                </h3>\n      </div>\n    )\n\n  } else {\n    return (\n      <div>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId={`${moment(date).unix()}`}>\n            {(provided) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {filteredData.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index} >\n                    {(provided) => (\n                      <div {...provided.draggableProps} {...provided.dragHandleProps}>\n                        <Box className={classes.taskBubble} style={{ backgroundColor: GetTaskStatusData(item.status).color }} onClick={() => handleClickOpen(item)} ref={provided.innerRef}>\n                          <Box flexGrow={1}>\n                            <h3 className={classes.bubbleTitle}>{item.title}</h3>\n                          </Box>\n                          <TimerIcon style={{ marginRight: '5px' }} />\n                          <h3 className={classes.bubbleWorkTime}>{item.workTime}</h3>\n                        </Box>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <DetailDialog onClose={handleClose} open={open} selectedTask={selectedTask} />\n      </div>\n    )\n  }\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/sections/TopBar.js\";\nimport React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { DataContext } from \"../providers/DataProvider\";\nimport moment from 'moment';\nconst useStyles = makeStyles(theme => ({\n  monthTitle: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.4em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    textTransform: 'capitalize',\n    padding: '0px 30px'\n  },\n  taskTypeTitle: {\n    fontFamily: 'Poppins',\n    fontSize: '1.3em',\n    fontWeight: '600'\n  }\n}));\nexport function TopBar() {\n  const classes = useStyles();\n  const {\n    currWeek,\n    currMonth,\n    taskData\n  } = useContext(DataContext);\n  console.log(taskData.meetingTasks);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const findCurrDate = () => {\n    setWeek(moment().week());\n    setTimeout(() => {\n      let currDate = moment().startOf('day').valueOf();\n      document.getElementById(currDate).scrollIntoView({\n        block: 'center',\n        behavior: 'smooth'\n      });\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: \"center\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      margin: \"1em 0px\",\n      alignContent: \"center\",\n      width: \"95%\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Previous week\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    className: classes.chevronButtons,\n    onClick: () => setWeek(parseInt(weekState) - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      findCurrDate();\n    },\n    style: {\n      margin: \"0px 5px\",\n      color: \"rgba(43,43,43,1)\",\n      fontFamily: \"Poppins\",\n      fontSize: \"0.9em\",\n      fontWeight: \"600\",\n      border: \"solid 1px lightgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"DNES\"), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Next week\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    className: classes.chevronButtons,\n    onClick: () => setWeek(parseInt(weekState) + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.monthTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, month)), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    style: {\n      marginRight: \"2em\",\n      color: \"rgba(43,43,43,1)\",\n      fontFamily: \"Poppins\",\n      fontSize: \"0.9em\",\n      fontWeight: \"600\",\n      border: \"solid 1px lightgray\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"PRIDA\\u0164\"), /*#__PURE__*/React.createElement(Menu, {\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    getContentAnchorEl: null,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleClose,\n    style: {\n      fontFamily: \"Poppins\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Stretnutie\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleClose,\n    style: {\n      fontFamily: \"Poppins\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Pr\\xE1ca\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleClose,\n    style: {\n      fontFamily: \"Poppins\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Komunik\\xE1cia\")));\n}","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/sections/TopBar.js"],"names":["React","useContext","useState","makeStyles","Button","Tooltip","Menu","MenuItem","ChevronLeftIcon","ChevronRightIcon","DataContext","moment","useStyles","theme","monthTitle","fontFamily","color","fontWeight","fontSize","marginBlockStart","marginBlockEnd","textTransform","padding","taskTypeTitle","TopBar","classes","currWeek","currMonth","taskData","console","log","meetingTasks","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","findCurrDate","setWeek","week","setTimeout","currDate","startOf","valueOf","document","getElementById","scrollIntoView","block","behavior","alignItems","display","flexDirection","margin","alignContent","width","justifyContent","chevronButtons","parseInt","weekState","border","month","marginRight","float","vertical","horizontal","Boolean"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nimport { DataContext } from \"../providers/DataProvider\";\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  monthTitle: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.4em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    textTransform: 'capitalize',\n    padding: '0px 30px'\n  },\n  taskTypeTitle: {\n    fontFamily: 'Poppins',\n    fontSize: '1.3em',\n    fontWeight: '600',\n  },\n}))\n\nexport function TopBar() {\n  const classes = useStyles();\n  const { currWeek, currMonth, taskData } = useContext(DataContext);\n  console.log(taskData.meetingTasks);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n      setAnchorEl(null);\n  };\n\n  const findCurrDate = () => {\n    setWeek(moment().week());\n\n    setTimeout(() => {  \n      let currDate = moment().startOf('day').valueOf();\n      document.getElementById(currDate).scrollIntoView({\n        block: 'center',\n        behavior: 'smooth'\n      });\n    }, 1000);\n  };\n\n  return (\n    <div\n      style={{\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        margin: \"1em 0px\",\n        alignContent: \"center\",\n        width: \"95%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <div\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Tooltip title=\"Previous week\">\n            <ChevronLeftIcon\n              className={classes.chevronButtons}\n              onClick={() => setWeek(parseInt(weekState) - 1)}\n            />\n          </Tooltip>\n\n          <Button\n            onClick={() => {\n              findCurrDate();\n            }}\n            style={{\n              margin: \"0px 5px\",\n              color: \"rgba(43,43,43,1)\",\n              fontFamily: \"Poppins\",\n              fontSize: \"0.9em\",\n              fontWeight: \"600\",\n              border: \"solid 1px lightgray\",\n            }}\n          >\n            DNES\n          </Button>\n          <Tooltip title=\"Next week\">\n            <ChevronRightIcon\n              className={classes.chevronButtons}\n              onClick={() => setWeek(parseInt(weekState) + 1)}\n            />\n          </Tooltip>\n        </div>\n\n        <h2 className={classes.monthTitle}>{month}</h2>\n      </div>\n\n      <Button\n        onClick={handleClick}\n        style={{\n          marginRight: \"2em\",\n          color: \"rgba(43,43,43,1)\",\n          fontFamily: \"Poppins\",\n          fontSize: \"0.9em\",\n          fontWeight: \"600\",\n          border: \"solid 1px lightgray\",\n          float: \"right\",\n        }}\n      >\n        PRIDAŤ\n      </Button>\n\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        getContentAnchorEl={null}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose} style={{ fontFamily: \"Poppins\" }}>\n          Stretnutie\n        </MenuItem>\n        <MenuItem onClick={handleClose} style={{ fontFamily: \"Poppins\" }}>\n          Práca\n        </MenuItem>\n        <MenuItem onClick={handleClose} style={{ fontFamily: \"Poppins\" }}>\n          Komunikácia\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/pages/Teams/components/CreateTeam.tsx\";\nimport { gql, useApolloClient } from '@apollo/client';\nimport MomentUtils from '@date-io/moment';\nimport { Avatar, Paper, Tooltip, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { CheckCircle, Title, Warning } from '@material-ui/icons';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GroupIcon from '@material-ui/icons/Group';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { Field, Formik } from 'formik';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as yup from 'yup';\nimport '../../../App.css';\nimport { useCreateTeamMutation } from '../../../generated/graphql';\nimport { GET_USER_BY_EMAIL } from '../../../graphql/graphql';\nimport { AuthContext } from '../../../providers/UserProvider';\nconst useStyles = makeStyles(() => ({\n  addUsersField: {\n    margin: '1em',\n    borderRadius: '5px',\n    background: 'rgba(171, 171, 171, 0.15)',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    '& label': {\n      fontFamily: 'Poppins'\n    },\n    '& .MuiOutlinedInput-input': {\n      fontFamily: 'Poppins'\n    }\n  },\n  addUserButton: {\n    backgroundColor: '#2b2b28',\n    padding: '0.9em',\n    fontFamily: 'Poppins',\n    fontWeight: 400,\n    fontSize: '1em',\n    color: 'white',\n    borderRadius: '5px',\n    '&:hover': {\n      color: '#2b2b28'\n    },\n    marginLeft: '10px'\n  },\n  createTeamBtn: {\n    marginTop: '1em',\n    alignSelf: 'center',\n    width: '20em',\n    fontFamily: 'Poppins',\n    fontSize: '15px',\n    padding: '1em 0.8em',\n    fontWeight: 500,\n    color: 'white',\n    backgroundColor: '#E3B04B',\n    boxShadow: 'none',\n    borderRadius: '10px',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#ffc44f'\n    }\n  },\n  chipsWindow: {\n    listStyle: 'none',\n    padding: '0em',\n    margin: 0,\n    boxShadow: 'none',\n    height: '16em',\n    overflowY: 'auto',\n    width: '100%'\n  },\n  inputText: {\n    backgroundColor: 'rgba(171, 171, 171, 0.15)'\n  },\n  errorText: {\n    color: 'red',\n    fontWeight: 600,\n    position: 'absolute',\n    top: '4.5em'\n  }\n}));\nconst validationSchema = yup.object({\n  name: yup.string().min(1, 'Názov tímu nesmie byť prázdny !'),\n  email: yup.string().min(1, 'Email nesmie byť prázdny !').email('Neplatná emailová adresa !')\n});\nexport function CreateTeam({\n  onClose,\n  open\n}) {\n  const classes = useStyles();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const client = useApolloClient();\n\n  const handleClose = () => {\n    onClose();\n    setUserList([]);\n  };\n\n  const [userList, setUserList] = useState([]);\n\n  const handleUserAdd = async ({\n    isValid,\n    email,\n    name,\n    resetForm\n  }) => {\n    if (isValid) {\n      var _data$userByEmail;\n\n      const {\n        data\n      } = await client.query({\n        query: GET_USER_BY_EMAIL,\n        variables: {\n          email\n        }\n      });\n      const updatedUser = email === (data === null || data === void 0 ? void 0 : (_data$userByEmail = data.userByEmail) === null || _data$userByEmail === void 0 ? void 0 : _data$userByEmail.email) ? {\n        email,\n        name: data.userByEmail.name,\n        id: data.userByEmail.id,\n        isValid: true\n      } : {\n        email,\n        isValid: false\n      };\n      setUserList([...userList, updatedUser]);\n      resetForm({\n        values: {\n          email: '',\n          name\n        }\n      });\n    }\n  };\n\n  const [createTeam] = useCreateTeamMutation();\n\n  const handleUserDelete = userToDelete => () => {\n    setUserList(users => users.filter(({\n      email\n    }) => email !== userToDelete));\n  };\n\n  function validateEmailExists(value) {\n    if (userList.some(({\n      email\n    }) => email === value.toLowerCase())) {\n      return 'Duplicitný email !';\n    }\n\n    if (currentUser.email === value) {\n      return 'Nemôžeš pridať sám seba !';\n    }\n  }\n\n  const variantsEmail = {\n    open: {\n      x: ['-100%', '0%'],\n      transition: {\n        duration: 0.15\n      }\n    },\n    close: {\n      x: ['0%', '-100%'],\n      transition: {\n        duration: 0.15\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AnimatePresence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#fff',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)',\n        width: '100%'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      name: ''\n    },\n    onSubmit: values => {\n      const id = uuidv4();\n      const memberIds = userList.filter(user => user.isValid === true).map(({\n        id\n      }) => id !== null && id !== void 0 ? id : '');\n      const members = userList.filter(user => user.isValid === true).map(({\n        id,\n        name,\n        email\n      }) => ({\n        id: id !== null && id !== void 0 ? id : '',\n        name: name !== null && name !== void 0 ? name : '',\n        email\n      }));\n      const owner = {\n        email: currentUser.email,\n        name: currentUser.displayName,\n        id: currentUser.uid\n      };\n      createTeam({\n        variables: {\n          description: '',\n          members: [...memberIds, currentUser.uid],\n          name: values.name,\n          ownerId: currentUser.uid,\n          id\n        },\n        optimisticResponse: {\n          createTeam: {\n            id,\n            description: '',\n            members: [...members, owner],\n            name: values.name,\n            owner\n          }\n        },\n        update: (store, {\n          data\n        }) => {\n          try {\n            if (data == null) return;\n            store.modify({\n              id: 'ROOT_QUERY',\n              fields: {\n                teamMany(existingTeamManyRef, {\n                  readField\n                }) {\n                  const newTeamRef = store.writeFragment({\n                    data: data.createTeam,\n                    fragment: gql`\n                              fragment NewTeam on Team {\n                                id\n                                owner {\n                                  id\n                                  name\n                                  email\n                                }\n                                members {\n                                  id\n                                  name\n                                  email\n                                }\n                                name\n                                description\n                              }\n                            `\n                  });\n                  return {\n                    items: [...existingTeamManyRef.items, newTeamRef]\n                  };\n                }\n\n              }\n            });\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      });\n      handleClose();\n    },\n    validationSchema: validationSchema,\n    isInitialValid: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleSubmit,\n      isValid,\n      resetForm\n    } = props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"detail-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    }, \"Vytvori\\u0165 t\\xEDm\"), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      className: \"close-button\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n        width: '100%',\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      id: \"name\",\n      name: \"name\",\n      label: \"N\\xE1zov t\\xEDmu\",\n      variant: \"outlined\",\n      value: values.name,\n      onChange: handleChange,\n      error: touched.name && Boolean(errors.name),\n      helperText: errors.name,\n      className: \"add-task-input\",\n      InputProps: {\n        className: classes.inputText\n      },\n      FormHelperTextProps: {\n        className: classes.errorText\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n        width: '100%',\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(GroupIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      component: TextField,\n      fullWidth: true,\n      id: \"email\",\n      name: \"email\",\n      label: \"Email \\u010Dlena\",\n      variant: \"outlined\",\n      value: values.email,\n      onChange: handleChange,\n      validate: validateEmailExists,\n      error: touched.email && Boolean(errors.email),\n      helperText: errors.email,\n      className: \"add-task-input\",\n      InputProps: {\n        className: classes.inputText\n      },\n      FormHelperTextProps: {\n        className: classes.errorText\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: classes.addUserButton,\n      onClick: () => {\n        if (values.email.length === 0) return;\n        return handleUserAdd({\n          resetForm,\n          isValid,\n          email: values.email,\n          name: values.name\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    }, \"Prida\\u0165\")), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontFamily: 'Poppins',\n        marginTop: '1em',\n        marginBottom: '0.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }, \"Emaily\"), /*#__PURE__*/React.createElement(AnimatePresence, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      component: \"ul\",\n      className: classes.chipsWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, userList.map(emailChip => {\n      return /*#__PURE__*/React.createElement(motion.div, {\n        key: emailChip.email,\n        variants: variantsEmail,\n        animate: variantsEmail.open,\n        exit: variantsEmail.close,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        style: {\n          boxSizing: 'border-box',\n          width: '100%',\n          height: '4em',\n          display: 'flex',\n          alignItems: 'center',\n          paddingLeft: '3em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 29\n        }\n      }, emailChip.isValid === true && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Avatar, {\n        alt: emailChip.name,\n        src: \"/static/images/avatar/1.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          marginLeft: '1em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        style: {\n          fontFamily: 'Poppins',\n          fontWeight: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 37\n        }\n      }, emailChip.name), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        style: {\n          fontFamily: 'Poppins',\n          fontSize: '0.8em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 37\n        }\n      }, emailChip.email))), emailChip.isValid === false && /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        style: {\n          fontFamily: 'Poppins'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 33\n        }\n      }, emailChip.email), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: 'auto',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 31\n        }\n      }, emailChip.isValid === true && /*#__PURE__*/React.createElement(CheckCircle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 64\n        }\n      }), emailChip.isValid === false && /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Dan\\xFD email neexistuje v na\\u0161ej datab\\xE1ze\",\n        placement: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Warning, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"deleteEmail\",\n        style: {\n          color: '#2B2B28',\n          marginRight: 0\n        },\n        onClick: handleUserDelete(emailChip.email),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 35\n        }\n      })))));\n    }))), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: classes.createTeamBtn,\n      disabled: values.name === '' || userList.length === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 21\n      }\n    }, \"Vytvori\\u0165\")));\n  }))));\n}","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/pages/Teams/components/CreateTeam.tsx"],"names":["gql","useApolloClient","MomentUtils","Avatar","Paper","Tooltip","Typography","Button","Dialog","IconButton","makeStyles","TextField","CheckCircle","Title","Warning","CloseIcon","GroupIcon","MuiPickersUtilsProvider","Field","Formik","AnimatePresence","motion","React","useContext","useState","v4","uuidv4","yup","useCreateTeamMutation","GET_USER_BY_EMAIL","AuthContext","useStyles","addUsersField","margin","borderRadius","background","marginBlockStart","marginBlockEnd","fontFamily","addUserButton","backgroundColor","padding","fontWeight","fontSize","color","marginLeft","createTeamBtn","marginTop","alignSelf","width","boxShadow","textTransform","chipsWindow","listStyle","height","overflowY","inputText","errorText","position","top","validationSchema","object","name","string","min","email","CreateTeam","onClose","open","classes","currentUser","client","handleClose","setUserList","userList","handleUserAdd","isValid","resetForm","data","query","variables","updatedUser","userByEmail","id","values","createTeam","handleUserDelete","userToDelete","users","filter","validateEmailExists","value","some","toLowerCase","variantsEmail","x","transition","duration","close","style","elevation","memberIds","user","map","members","owner","displayName","uid","description","ownerId","optimisticResponse","update","store","modify","fields","teamMany","existingTeamManyRef","readField","newTeamRef","writeFragment","fragment","items","e","console","error","props","touched","errors","handleChange","handleSubmit","boxSizing","display","alignItems","justifyContent","Boolean","className","length","marginBottom","emailChip","paddingLeft","flexDirection","marginRight"],"mappings":"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","sourcesContent":["import { gql, useApolloClient } from '@apollo/client';\nimport MomentUtils from '@date-io/moment';\nimport { Avatar, Paper, Tooltip, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { CheckCircle, Title, Warning } from '@material-ui/icons';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GroupIcon from '@material-ui/icons/Group';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { Field, Formik, FormikState } from 'formik';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as yup from 'yup';\nimport '../../../App.css';\nimport { useCreateTeamMutation } from '../../../generated/graphql';\nimport { GET_USER_BY_EMAIL } from '../../../graphql/graphql';\nimport { AuthContext } from '../../../providers/UserProvider';\n\nconst useStyles = makeStyles(() => ({\n  addUsersField: {\n    margin: '1em',\n    borderRadius: '5px',\n    background: 'rgba(171, 171, 171, 0.15)',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    '& label': {\n      fontFamily: 'Poppins'\n    },\n    '& .MuiOutlinedInput-input': {\n      fontFamily: 'Poppins'\n    }\n  },\n\n  addUserButton: {\n    backgroundColor: '#2b2b28',\n    padding: '0.9em',\n    fontFamily: 'Poppins',\n    fontWeight: 400,\n    fontSize: '1em',\n    color: 'white',\n    borderRadius: '5px',\n    '&:hover': {\n      color: '#2b2b28'\n    },\n    marginLeft: '10px'\n  },\n\n  createTeamBtn: {\n    marginTop: '1em',\n    alignSelf: 'center',\n    width: '20em',\n    fontFamily: 'Poppins',\n    fontSize: '15px',\n    padding: '1em 0.8em',\n    fontWeight: 500,\n    color: 'white',\n    backgroundColor: '#E3B04B',\n    boxShadow: 'none',\n    borderRadius: '10px',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#ffc44f'\n    }\n  },\n\n  chipsWindow: {\n    listStyle: 'none',\n    padding: '0em',\n    margin: 0,\n    boxShadow: 'none',\n    height: '16em',\n    overflowY: 'auto',\n    width: '100%'\n  },\n  inputText: {\n    backgroundColor: 'rgba(171, 171, 171, 0.15)'\n  },\n  errorText: {\n    color: 'red',\n    fontWeight: 600,\n    position: 'absolute',\n    top: '4.5em'\n  }\n}));\n\ninterface InputProps {\n  onClose: () => void;\n  open: boolean;\n}\n\ntype ResetForm = (\n  nextState?:\n    | Partial<\n        FormikState<{\n          email: string;\n          name: string;\n        }>\n      >\n    | undefined\n) => void;\n\nconst validationSchema = yup.object({\n  name: yup.string().min(1, 'Názov tímu nesmie byť prázdny !'),\n  email: yup\n    .string()\n    .min(1, 'Email nesmie byť prázdny !')\n    .email('Neplatná emailová adresa !')\n});\n\ninterface EmailChip {\n  email: string;\n  name?: string;\n  id?: string;\n  isValid: boolean;\n}\n\nexport function CreateTeam({ onClose, open }: InputProps) {\n  const classes = useStyles();\n\n  const { currentUser } = useContext(AuthContext);\n\n  const client = useApolloClient();\n\n  const handleClose = () => {\n    onClose();\n    setUserList([]);\n  };\n\n  const [userList, setUserList] = useState<EmailChip[]>([]);\n\n  const handleUserAdd = async ({\n    isValid,\n    email,\n    name,\n    resetForm\n  }: {\n    isValid: boolean;\n    resetForm: ResetForm;\n    email: string;\n    name: string;\n  }) => {\n    if (isValid) {\n      const { data } = await client.query({\n        query: GET_USER_BY_EMAIL,\n        variables: {\n          email\n        }\n      });\n\n      const updatedUser =\n        email === data?.userByEmail?.email\n          ? {\n              email,\n              name: data.userByEmail.name,\n              id: data.userByEmail.id,\n              isValid: true\n            }\n          : { email, isValid: false };\n\n      setUserList([...userList, updatedUser]);\n\n      resetForm({ values: { email: '', name } });\n    }\n  };\n\n  const [createTeam] = useCreateTeamMutation();\n\n  const handleUserDelete = (userToDelete: string) => () => {\n    setUserList((users) => users.filter(({ email }) => email !== userToDelete));\n  };\n\n  function validateEmailExists(value: string) {\n    if (userList.some(({ email }) => email === value.toLowerCase())) {\n      return 'Duplicitný email !';\n    }\n    if (currentUser.email === value) {\n      return 'Nemôžeš pridať sám seba !';\n    }\n  }\n\n  const variantsEmail = {\n    open: {\n      x: ['-100%', '0%'],\n      transition: {\n        duration: 0.15\n      }\n    },\n    close: {\n      x: ['0%', '-100%'],\n      transition: {\n        duration: 0.15\n      }\n    }\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <AnimatePresence>\n        <Dialog\n          onClose={handleClose}\n          open={open}\n          fullWidth={true}\n          maxWidth={'xs'}\n          PaperProps={{\n            style: {\n              backgroundColor: '#fff',\n              color: 'black',\n              borderRadius: '30px',\n              padding: '35px',\n              boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)',\n              width: '100%'\n            },\n            elevation: 0\n          }}\n          BackdropProps={{ style: { backgroundColor: 'rgba(0, 0, 0, 0.25)' } }}\n        >\n          <Formik\n            initialValues={{\n              email: '',\n              name: ''\n            }}\n            onSubmit={(values) => {\n              const id = uuidv4();\n              const memberIds = userList\n                .filter((user) => user.isValid === true)\n                .map(({ id }) => id ?? '');\n\n              const members = userList\n                .filter((user) => user.isValid === true)\n                .map(({ id, name, email }) => ({\n                  id: id ?? '',\n                  name: name ?? '',\n                  email\n                }));\n\n              const owner = {\n                email: currentUser.email,\n                name: currentUser.displayName,\n                id: currentUser.uid\n              };\n\n              createTeam({\n                variables: {\n                  description: '',\n                  members: [...memberIds, currentUser.uid],\n                  name: values.name,\n                  ownerId: currentUser.uid,\n                  id\n                },\n                optimisticResponse: {\n                  createTeam: {\n                    id,\n                    description: '',\n                    members: [...members, owner],\n                    name: values.name,\n                    owner\n                  }\n                },\n                update: (store, { data }) => {\n                  try {\n                    if (data == null) return;\n\n                    store.modify({\n                      id: 'ROOT_QUERY',\n                      fields: {\n                        teamMany(existingTeamManyRef, { readField }) {\n                          const newTeamRef = store.writeFragment({\n                            data: data.createTeam,\n                            fragment: gql`\n                              fragment NewTeam on Team {\n                                id\n                                owner {\n                                  id\n                                  name\n                                  email\n                                }\n                                members {\n                                  id\n                                  name\n                                  email\n                                }\n                                name\n                                description\n                              }\n                            `\n                          });\n\n                          return {\n                            items: [...existingTeamManyRef.items, newTeamRef]\n                          };\n                        }\n                      }\n                    });\n                  } catch (e) {\n                    console.error(e);\n                  }\n                }\n              });\n\n              handleClose();\n            }}\n            validationSchema={validationSchema}\n            isInitialValid={false}\n          >\n            {(props) => {\n              const {\n                values,\n                touched,\n                errors,\n                handleChange,\n                handleSubmit,\n                isValid,\n                resetForm\n              } = props;\n              return (\n                <form onSubmit={handleSubmit} style={{ width: '100%' }}>\n                  <h1 className=\"detail-title\">Vytvoriť tím</h1>\n                  <IconButton\n                    aria-label=\"close\"\n                    className=\"close-button\"\n                    onClick={handleClose}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                  <span\n                    style={{\n                      boxSizing: 'border-box',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-evenly',\n                      width: '100%',\n                      padding: '10px'\n                    }}\n                  >\n                    <Title />\n                    <TextField\n                      fullWidth\n                      id=\"name\"\n                      name=\"name\"\n                      label=\"Názov tímu\"\n                      variant=\"outlined\"\n                      value={values.name}\n                      onChange={handleChange}\n                      error={touched.name && Boolean(errors.name)}\n                      helperText={errors.name}\n                      className=\"add-task-input\"\n                      InputProps={{\n                        className: classes.inputText\n                      }}\n                      FormHelperTextProps={{ className: classes.errorText }}\n                    />\n                  </span>\n                  <span\n                    style={{\n                      boxSizing: 'border-box',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-evenly',\n                      width: '100%',\n                      padding: '10px'\n                    }}\n                  >\n                    <GroupIcon />\n\n                    <Field\n                      component={TextField}\n                      fullWidth\n                      id=\"email\"\n                      name=\"email\"\n                      label=\"Email člena\"\n                      variant=\"outlined\"\n                      value={values.email}\n                      onChange={handleChange}\n                      validate={validateEmailExists}\n                      error={touched.email && Boolean(errors.email)}\n                      helperText={errors.email}\n                      className=\"add-task-input\"\n                      InputProps={{\n                        className: classes.inputText\n                      }}\n                      FormHelperTextProps={{ className: classes.errorText }}\n                    />\n\n                    <Button\n                      className={classes.addUserButton}\n                      onClick={() => {\n                        if (values.email.length === 0) return;\n                        return handleUserAdd({\n                          resetForm,\n                          isValid,\n                          email: values.email,\n                          name: values.name\n                        });\n                      }}\n                    >\n                      Pridať\n                    </Button>\n                  </span>\n                  <h3\n                    style={{\n                      fontFamily: 'Poppins',\n                      marginTop: '1em',\n                      marginBottom: '0.5em'\n                    }}\n                  >\n                    Emaily\n                  </h3>\n                  <AnimatePresence>\n                    <Paper component=\"ul\" className={classes.chipsWindow}>\n                      {userList.map((emailChip) => {\n                        return (\n                          <motion.div\n                            key={emailChip.email}\n                            variants={variantsEmail}\n                            animate={variantsEmail.open}\n                            exit={variantsEmail.close}\n                          >\n                            <li\n                              style={{\n                                boxSizing: 'border-box',\n                                width: '100%',\n                                height: '4em',\n                                display: 'flex',\n                                alignItems: 'center',\n                                paddingLeft: '3em'\n                              }}\n                            >\n                              {emailChip.isValid === true && (\n                                <>\n                                  <Avatar\n                                    alt={emailChip.name}\n                                    src=\"/static/images/avatar/1.jpg\"\n                                  />\n                                  <div\n                                    style={{\n                                      height: '100%',\n                                      display: 'flex',\n                                      flexDirection: 'column',\n                                      justifyContent: 'center',\n                                      marginLeft: '1em'\n                                    }}\n                                  >\n                                    <Typography\n                                      variant=\"body1\"\n                                      style={{\n                                        fontFamily: 'Poppins',\n                                        fontWeight: 600\n                                      }}\n                                    >\n                                      {emailChip.name}\n                                    </Typography>\n                                    <Typography\n                                      variant=\"body2\"\n                                      style={{\n                                        fontFamily: 'Poppins',\n                                        fontSize: '0.8em'\n                                      }}\n                                    >\n                                      {emailChip.email}\n                                    </Typography>\n                                  </div>\n                                </>\n                              )}\n                              {emailChip.isValid === false && (\n                                <Typography\n                                  variant=\"body1\"\n                                  style={{ fontFamily: 'Poppins' }}\n                                >\n                                  {emailChip.email}\n                                </Typography>\n                              )}\n                              <div\n                                style={{\n                                  marginLeft: 'auto',\n                                  display: 'flex',\n                                  alignItems: 'center'\n                                }}\n                              >\n                                {emailChip.isValid === true && <CheckCircle />}\n                                {emailChip.isValid === false && (\n                                  <Tooltip\n                                    title=\"Daný email neexistuje v našej databáze\"\n                                    placement=\"top\"\n                                  >\n                                    <Warning />\n                                  </Tooltip>\n                                )}\n                                <IconButton\n                                  aria-label=\"deleteEmail\"\n                                  style={{\n                                    color: '#2B2B28',\n                                    marginRight: 0\n                                  }}\n                                  onClick={handleUserDelete(emailChip.email)}\n                                >\n                                  <CloseIcon />\n                                </IconButton>\n                              </div>\n                            </li>\n                          </motion.div>\n                        );\n                      })}\n                    </Paper>\n                  </AnimatePresence>\n                  <span\n                    style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      width: '100%'\n                    }}\n                  >\n                    <Button\n                      type=\"submit\"\n                      className={classes.createTeamBtn}\n                      disabled={values.name === '' || userList.length === 0}\n                    >\n                      Vytvoriť\n                    </Button>\n                  </span>\n                </form>\n              );\n            }}\n          </Formik>\n        </Dialog>\n      </AnimatePresence>\n    </MuiPickersUtilsProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
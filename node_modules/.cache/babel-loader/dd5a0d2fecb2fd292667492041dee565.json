{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/DataProvider.js\";\nimport React, { useState, createContext, useEffect, useContext } from \"react\";\nimport * as firebase from \"firebase\";\nimport moment from \"moment\";\nimport { getISOWeekDates } from \"../DateCalc\";\nimport { UserContext } from \"./UserProvider\";\nexport const DataContext = createContext({\n  weekState: null,\n  setWeek: null,\n  currWeek: [],\n  currMonth: null,\n  taskData: [],\n  setRefresh: null\n});\n\nfunction DataProvider(props) {\n  const user = useContext(UserContext);\n  const [weekState, setWeek] = useState(moment().week());\n  const [taskData, setTaskData] = useState([]);\n  const [refresh, setRefresh] = useState(0);\n  let ISOWeekDates = getISOWeekDates(weekState);\n  let currWeek = ISOWeekDates[0];\n  let currMonth = ISOWeekDates[1];\n  let modWeek = [];\n  useEffect(() => {\n    ISOWeekDates = getISOWeekDates(weekState);\n    currWeek = ISOWeekDates[0];\n    currMonth = ISOWeekDates[1];\n\n    for (const i of currWeek) {\n      modWeek.push(moment(i).format(\"DD/MM/yyyy\"));\n    }\n\n    async function fetchData(userToken = user.uid) {\n      if (user.email != undefined) {\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': '*/*',\n            'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n          },\n          body: JSON.stringify({\n            date: modWeek,\n            token: userToken\n          })\n        };\n        await fetch(\"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-all-tasks\", requestOptions).then(response => response.json()).then(data => {\n          setTaskData(data);\n        });\n      }\n    }\n\n    fetchData();\n  }, [weekState, refresh, user]);\n\n  async function fetchMeetData(dates) {\n    if (user.email != undefined) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          date: dates,\n          token: user.uid\n        })\n      };\n      await fetch(\"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-meeting-tasks\", requestOptions).then(response => response.json()).then(data => {\n        setTaskData(data);\n      });\n    }\n  }\n\n  async function fetchWorkData(dates) {\n    if (user.email != undefined) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          date: dates,\n          token: user.uid\n        })\n      };\n      await fetch(\"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-meeting-tasks\", requestOptions).then(response => response.json()).then(data => {\n        setTaskData(data);\n      });\n    }\n  }\n\n  async function fetchCommData(dates) {\n    if (user.email != undefined) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          date: dates,\n          token: user.uid\n        })\n      };\n      await fetch(\"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-meeting-tasks\", requestOptions).then(response => response.json()).then(data => {\n        setTaskData(data);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(DataContext.Provider, {\n    value: {\n      weekState: weekState,\n      setWeek: setWeek,\n      currWeek: currWeek,\n      currMonth: currMonth,\n      taskData: taskData,\n      setRefresh: setRefresh\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nexport default DataProvider;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/DataProvider.js"],"names":["React","useState","createContext","useEffect","useContext","firebase","moment","getISOWeekDates","UserContext","DataContext","weekState","setWeek","currWeek","currMonth","taskData","setRefresh","DataProvider","props","user","week","setTaskData","refresh","ISOWeekDates","modWeek","i","push","format","fetchData","userToken","uid","email","undefined","requestOptions","method","headers","localStorage","getItem","body","JSON","stringify","date","token","fetch","then","response","json","data","fetchMeetData","dates","fetchWorkData","fetchCommData","children"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect, useContext } from \"react\";\nimport * as firebase from \"firebase\";\nimport moment from \"moment\";\n\nimport { getISOWeekDates } from \"../DateCalc\";\nimport { UserContext } from \"./UserProvider\";\n\nexport const DataContext = createContext({ weekState: null, setWeek: null, currWeek: [], currMonth: null, taskData: [], setRefresh: null });\n\nfunction DataProvider(props) {\n  const user = useContext(UserContext);\n  const [weekState, setWeek] = useState(moment().week());\n  const [taskData, setTaskData] = useState([]);\n  const [refresh, setRefresh] = useState(0);\n\n  let ISOWeekDates = getISOWeekDates(weekState);\n  let currWeek = ISOWeekDates[0];\n  let currMonth = ISOWeekDates[1];\n\n  let modWeek = [];\n\n  useEffect(() => {\n\n    ISOWeekDates = getISOWeekDates(weekState);\n    currWeek = ISOWeekDates[0];\n    currMonth = ISOWeekDates[1];\n\n    for (const i of currWeek) {\n      modWeek.push(moment(i).format(\"DD/MM/yyyy\"));\n    }\n    \n    async function fetchData(userToken = user.uid) {\n      if(user.email != undefined) {\n        const requestOptions = {\n          method: \"POST\",\n          headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n          body: JSON.stringify({ date: modWeek, token: userToken}),\n        };\n        await fetch(\n          \"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-all-tasks\",\n          requestOptions\n        )\n          .then((response) => response.json())\n          .then((data) => {\n            setTaskData(data);\n          });\n      }\n    }\n    fetchData();\n      \n  }, [weekState, refresh, user]);\n\n  async function fetchMeetData(dates) {\n    if(user.email != undefined) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n        body: JSON.stringify({ date: dates, token: user.uid}),\n      };\n      await fetch(\n        \"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-meeting-tasks\",\n        requestOptions\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setTaskData(data);\n        });\n    }\n  }\n\n  async function fetchWorkData(dates) {\n    if(user.email != undefined) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n        body: JSON.stringify({ date: dates, token: user.uid}),\n      };\n      await fetch(\n        \"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-meeting-tasks\",\n        requestOptions\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setTaskData(data);\n        });\n    }\n  }\n\n  async function fetchCommData(dates) {\n    if(user.email != undefined) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n        body: JSON.stringify({ date: dates, token: user.uid}),\n      };\n      await fetch(\n        \"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-meeting-tasks\",\n        requestOptions\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setTaskData(data);\n        });\n    }\n  }\n\n  return (\n    <DataContext.Provider value={{ weekState: weekState, setWeek: setWeek, currWeek: currWeek, currMonth: currMonth, taskData: taskData, setRefresh: setRefresh}}>\n      {props.children}\n    </DataContext.Provider>\n  );\n}\n\nexport default DataProvider;\n"]},"metadata":{},"sourceType":"module"}
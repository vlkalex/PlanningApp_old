{"ast":null,"code":"import React from 'react';\nimport moment from 'moment';\nexport let getISOWeekDates = function (isoWeekNum = 1, year = new Date().getFullYear()) {\n  let d = moment().isoWeek(1).startOf('isoWeek').add(isoWeekNum - 1, 'weeks');\n  let finalMonth = d.format('MMMM');\n  let tempMonth = '';\n\n  for (var dates = [], i = 0; i < 7; i++) {\n    if (d.format('MMMM') !== finalMonth) {\n      tempMonth = d.format('MMMM');\n    }\n\n    dates.push(d.valueOf());\n    d.add(1, 'day');\n  }\n\n  if (tempMonth !== '') {\n    return [dates, finalMonth + ' - ' + tempMonth + d.format(' YYYY')];\n  }\n\n  return [dates, finalMonth + d.format(' YYYY')];\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/DateCalc.js"],"names":["React","moment","getISOWeekDates","isoWeekNum","year","Date","getFullYear","d","isoWeek","startOf","add","finalMonth","format","tempMonth","dates","i","push","valueOf"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,IAAIC,eAAe,GAAG,UAASC,UAAU,GAAG,CAAtB,EAAyBC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAhC,EAA0D;AACnF,MAAIC,CAAC,GAAGN,MAAM,GAAGO,OAAT,CAAiB,CAAjB,EAAoBC,OAApB,CAA4B,SAA5B,EAAuCC,GAAvC,CAA2CP,UAAU,GAAG,CAAxD,EAA2D,OAA3D,CAAR;AACA,MAAIQ,UAAU,GAAGJ,CAAC,CAACK,MAAF,CAAS,MAAT,CAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAK,IAAIC,KAAK,GAAC,EAAV,EAAcC,CAAC,GAAC,CAArB,EAAwBA,CAAC,GAAG,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;AAChC,QAAIR,CAAC,CAACK,MAAF,CAAS,MAAT,MAAqBD,UAAzB,EAAqC;AACjCE,MAAAA,SAAS,GAAGN,CAAC,CAACK,MAAF,CAAS,MAAT,CAAZ;AACH;;AAEDE,IAAAA,KAAK,CAACE,IAAN,CAAWT,CAAC,CAACU,OAAF,EAAX;AACAV,IAAAA,CAAC,CAACG,GAAF,CAAM,CAAN,EAAS,KAAT;AACH;;AAED,MAAIG,SAAS,KAAK,EAAlB,EAAsB;AAClB,WAAO,CAACC,KAAD,EAAQH,UAAU,GAAG,KAAb,GAAqBE,SAArB,GAAiCN,CAAC,CAACK,MAAF,CAAS,OAAT,CAAzC,CAAP;AACH;;AAED,SAAO,CAACE,KAAD,EAAQH,UAAU,GAAGJ,CAAC,CAACK,MAAF,CAAS,OAAT,CAArB,CAAP;AAEH,CApBM","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nexport let getISOWeekDates = function(isoWeekNum = 1, year = new Date().getFullYear()) {\n    let d = moment().isoWeek(1).startOf('isoWeek').add(isoWeekNum - 1, 'weeks');\n    let finalMonth = d.format('MMMM');\n    let tempMonth = '';\n\n    for (var dates=[], i=0; i < 7; i++) {\n        if (d.format('MMMM') !== finalMonth) {\n            tempMonth = d.format('MMMM');\n        }\n\n        dates.push(d.valueOf());\n        d.add(1, 'day');\n    }\n\n    if (tempMonth !== '') {\n        return [dates, finalMonth + ' - ' + tempMonth + d.format(' YYYY')];\n    }\n\n    return [dates, finalMonth + d.format(' YYYY')];\n    \n};"]},"metadata":{},"sourceType":"module"}
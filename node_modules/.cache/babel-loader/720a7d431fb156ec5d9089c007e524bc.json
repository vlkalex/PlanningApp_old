{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/pages/Teams/components/Timeline.tsx\";\nimport React from 'react';\nimport Timeline from 'react-calendar-timeline'; // make sure you include the timeline stylesheet or the timeline will not be styled\n\nimport './Timeline.scss';\nimport moment from 'moment';\nimport { useUsersTeamMeetingManyQuery } from '../../../generated/graphql';\nimport { Avatar, Badge, makeStyles, Typography } from '@material-ui/core';\nimport { Check } from '@material-ui/icons';\nconst useStyles = makeStyles(theme => ({\n  customBadge: {\n    backgroundColor: '#4ABF56',\n    color: 'white'\n  }\n}));\nexport function TimelineRender({\n  userIds,\n  dateFrom,\n  dateTo\n}) {\n  var _data$usersMeetingTas, _data$usersMeetingTas2;\n\n  const classes = useStyles();\n  const {\n    data,\n    loading\n  } = useUsersTeamMeetingManyQuery({\n    variables: {\n      dateFrom,\n      dateTo,\n      userIds\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading...\");\n  console.log(data);\n  const groups = (_data$usersMeetingTas = data === null || data === void 0 ? void 0 : data.usersMeetingTaskMany.items.map(({\n    user\n  }, index) => {\n    return {\n      id: index,\n      title: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          margin: 0,\n          height: '100%',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Badge, {\n        overlap: \"circle\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        variant: \"standard\",\n        classes: {\n          badge: classes.customBadge\n        },\n        badgeContent: /*#__PURE__*/React.createElement(Check, {\n          style: {\n            position: 'absolute',\n            zIndex: 99,\n            width: '16px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        alt: user.name,\n        src: \"/static/images/avatar/1.jpg\",\n        style: {\n          border: '3px solid #4ABF56',\n          width: '48px',\n          height: '48px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        style: {\n          fontFamily: 'Poppins',\n          marginLeft: '1em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, user.name))\n    };\n  })) !== null && _data$usersMeetingTas !== void 0 ? _data$usersMeetingTas : [];\n  const items = (_data$usersMeetingTas2 = data === null || data === void 0 ? void 0 : data.usersMeetingTaskMany.items.map((user, index) => {\n    return user.meetingTasks.items.map((task, taskIndex) => {\n      return {\n        id: taskIndex,\n        group: index,\n        title: task.title,\n        start_time: moment(task.startTime, 'HH:mm'),\n        end_time: moment(task.endTime, 'HH:mm')\n      };\n    }).flat();\n  }).flat()) !== null && _data$usersMeetingTas2 !== void 0 ? _data$usersMeetingTas2 : [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '60%',\n      height: '30em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Timeline, {\n    groups: groups,\n    items: items,\n    visibleTimeStart: moment().startOf('day').valueOf(),\n    visibleTimeEnd: moment().startOf('day').add(1, 'day').valueOf(),\n    canResize: false,\n    canMove: false,\n    lineHeight: 60,\n    sidebarWidth: 300,\n    minZoom: 1,\n    maxZoom: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/pages/Teams/components/Timeline.tsx"],"names":["React","Timeline","moment","useUsersTeamMeetingManyQuery","Avatar","Badge","makeStyles","Typography","Check","useStyles","theme","customBadge","backgroundColor","color","TimelineRender","userIds","dateFrom","dateTo","classes","data","loading","variables","console","log","groups","usersMeetingTaskMany","items","map","user","index","id","title","display","alignItems","margin","height","width","vertical","horizontal","badge","position","zIndex","name","border","fontFamily","marginLeft","meetingTasks","task","taskIndex","group","start_time","startTime","end_time","endTime","flat","startOf","valueOf","add"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Timeline from 'react-calendar-timeline';\n// make sure you include the timeline stylesheet or the timeline will not be styled\nimport './Timeline.scss';\nimport moment from 'moment';\nimport { useUsersTeamMeetingManyQuery } from '../../../generated/graphql';\nimport { Avatar, Badge, makeStyles, Typography } from '@material-ui/core';\nimport { Check } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  customBadge: {\n    backgroundColor: '#4ABF56',\n    color: 'white'\n  }\n}));\n\nexport function TimelineRender({\n  userIds,\n  dateFrom,\n  dateTo\n}: {\n  userIds: string[];\n  dateFrom: Date;\n  dateTo: Date;\n}) {\n  const classes = useStyles();\n\n  const { data, loading } = useUsersTeamMeetingManyQuery({\n    variables: {\n      dateFrom,\n      dateTo,\n      userIds\n    }\n  });\n\n  if (loading) return <>Loading...</>;\n  console.log(data);\n  const groups =\n    data?.usersMeetingTaskMany.items.map(({ user }, index) => {\n      return {\n        id: index,\n        title: (\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              height: '100%',\n              width: '100%'\n            }}\n          >\n            <Badge\n              overlap=\"circle\"\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n              variant=\"standard\"\n              classes={{ badge: classes.customBadge }}\n              badgeContent={\n                <Check\n                  style={{ position: 'absolute', zIndex: 99, width: '16px' }}\n                />\n              }\n            >\n              <Avatar\n                alt={user.name}\n                src=\"/static/images/avatar/1.jpg\"\n                style={{\n                  border: '3px solid #4ABF56',\n                  width: '48px',\n                  height: '48px'\n                }}\n              ></Avatar>\n            </Badge>\n            <Typography\n              variant=\"body1\"\n              style={{ fontFamily: 'Poppins', marginLeft: '1em' }}\n            >\n              {user.name}\n            </Typography>\n          </div>\n        )\n      };\n    }) ?? [];\n\n  const items =\n    data?.usersMeetingTaskMany.items\n      .map((user, index) => {\n        return user.meetingTasks.items\n          .map((task, taskIndex) => {\n            return {\n              id: taskIndex,\n              group: index,\n              title: task.title,\n              start_time: moment(task.startTime, 'HH:mm'),\n              end_time: moment(task.endTime, 'HH:mm')\n            };\n          })\n          .flat();\n      })\n      .flat() ?? [];\n\n  return (\n    <div\n      style={{\n        width: '60%',\n        height: '30em'\n      }}\n    >\n      <Timeline\n        groups={groups}\n        items={items}\n        visibleTimeStart={moment().startOf('day').valueOf()}\n        visibleTimeEnd={moment().startOf('day').add(1, 'day').valueOf()}\n        canResize={false}\n        canMove={false}\n        lineHeight={60}\n        sidebarWidth={300}\n        minZoom={1}\n        maxZoom={1}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
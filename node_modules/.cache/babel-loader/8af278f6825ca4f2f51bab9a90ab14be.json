{"ast":null,"code":"import gql from 'graphql-tag';\nexport const GET_MEETING_TASKS = gql`\n  query meetingTasks($dateFrom: DateTime!, $dateTo: DateTime!, $userId: ID!) {\n    meetingTaskMany(\n      input: { userId: $userId, dateFrom: $dateFrom, dateTo: $dateTo }\n    ) {\n      items {\n        id\n        user {\n          id\n        }\n        pending\n        date\n        description\n        index\n        title\n        status\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\nexport const GET_WORK_TASKS = gql`\n  query workTasks($dateFrom: DateTime!, $dateTo: DateTime!, $userId: ID!) {\n    workTaskMany(\n      input: { userId: $userId, dateFrom: $dateFrom, dateTo: $dateTo }\n    ) {\n      items {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\nexport const GET_COMM_TASKS = gql`\n  query commTasks($dateFrom: DateTime!, $dateTo: DateTime!, $userId: ID!) {\n    communicationTaskMany(\n      input: { userId: $userId, dateFrom: $dateFrom, dateTo: $dateTo }\n    ) {\n      items {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n        email\n        phoneNumber\n      }\n    }\n  }\n`;\nexport const EDIT_MEETING_TASK_DATE = gql`\n  mutation EditMeetingTaskDate(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $index: Float!\n  ) {\n    editTask(input: { id: $id, userId: $userId, date: $date, index: $index }) {\n      ... on MeetingTask {\n        id\n        user {\n          id\n        }\n        pending\n        date\n        description\n        index\n        title\n        status\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\nexport const EDIT_COMM_TASK_DATE = gql`\n  mutation EditCommTaskDate(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $index: Float!\n  ) {\n    editTask(input: { id: $id, userId: $userId, date: $date, index: $index }) {\n      ... on CommunicationTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n        email\n        phoneNumber\n      }\n    }\n  }\n`;\nexport const EDIT_WORK_TASK_DATE = gql`\n  mutation EditWorkTaskDate(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $index: Float!\n  ) {\n    editTask(input: { id: $id, userId: $userId, date: $date, index: $index }) {\n      ... on WorkTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\nexport const EDIT_WORK_TASK_STATUS = gql`\n  mutation EditWorkTaskStatus(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $status: Status!\n  ) {\n    editTask(\n      input: { id: $id, userId: $userId, date: $date, status: $status }\n    ) {\n      ... on WorkTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\nexport const EDIT_WORK_TASK = gql`\n  mutation EditWorkTask(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $workTime: String!\n    $pending: Boolean!\n  ) {\n    editTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        pending: $pending\n        workTask: { workTime: $workTime }\n      }\n    ) {\n      ... on WorkTask {\n        id\n        date\n        description\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\nexport const EDIT_MEETING_TASK = gql`\n  mutation EditMeetingTask(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $endTime: String!\n    $startTime: String!\n    $address: String!\n    $category: String!\n    $pending: Boolean!\n  ) {\n    editTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        pending: $pending\n        meetingTask: {\n          endTime: $endTime\n          startTime: $startTime\n          address: $address\n          category: $category\n        }\n      }\n    ) {\n      ... on MeetingTask {\n        id\n        date\n        description\n        title\n        status\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\nexport const DELETE_MEETING_TASK = gql`\n  mutation DeleteMeetingTask($id: ID!) {\n    deleteTask(id: $id)\n  }\n`;\nexport const DELETE_WORK_TASK = gql`\n  mutation DeleteWorkTask($id: ID!) {\n    deleteTask(id: $id)\n  }\n`;\nexport const EDIT_COMM_TASK = gql`\n  mutation EditCommTask(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $workTime: String!\n    $phoneNumber: String!\n    $email: String!\n    $pending: Boolean!\n  ) {\n    editTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        pending: $pending\n        communicationTask: {\n          workTime: $workTime\n          phoneNumber: $phoneNumber\n          email: $email\n        }\n      }\n    ) {\n      ... on CommunicationTask {\n        id\n        date\n        description\n        title\n        status\n        workTime\n        phoneNumber\n        email\n      }\n    }\n  }\n`;\nexport const DELETE_COMM_TASK = gql`\n  mutation DeleteCommTask($id: ID!) {\n    deleteTask(id: $id)\n  }\n`;\nexport const EDIT_MEETING_TASK_STATUS = gql`\n  mutation EditMeetingTaskStatus(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $status: Status!\n  ) {\n    editTask(\n      input: { id: $id, userId: $userId, date: $date, status: $status }\n    ) {\n      ... on MeetingTask {\n        id\n        date\n        status\n      }\n    }\n  }\n`;\nexport const EDIT_COMM_TASK_STATUS = gql`\n  mutation EditCommTaskStatus(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $status: Status!\n  ) {\n    editTask(\n      input: { id: $id, userId: $userId, date: $date, status: $status }\n    ) {\n      ... on CommunicationTask {\n        id\n        date\n        status\n      }\n    }\n  }\n`;\nexport const GET_TEAM_MANY = gql`\n  query TeamMany($userId: ID!) {\n    teamMany(ownerId: $userId) {\n      total\n      items {\n        id\n        owner {\n          id\n          name\n          email\n        }\n        members {\n          id\n          name\n          email\n        }\n        name\n        description\n      }\n    }\n  }\n`;\nexport const ADD_COMMUNICATION_TASK = gql`\n  mutation AddCommunicationTask(\n    $id: ID!\n    $userId: ID!\n    $date: String!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $index: Float!\n    $workTime: String!\n    $email: String!\n    $phoneNumber: String!\n  ) {\n    createTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        index: $index\n        communicationTask: {\n          workTime: $workTime\n          email: $email\n          phoneNumber: $phoneNumber\n        }\n      }\n    ) {\n      ... on CommunicationTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n        email\n        phoneNumber\n      }\n    }\n  }\n`;\nexport const ADD_MEETING_TASK = gql`\n  mutation AddMeetingTask(\n    $id: ID!\n    $userId: ID!\n    $date: String!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $index: Float!\n    $endTime: String!\n    $startTime: String!\n    $address: String!\n    $category: String!\n  ) {\n    createTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        index: $index\n        meetingTask: {\n          endTime: $endTime\n          startTime: $startTime\n          address: $address\n          category: $category\n        }\n      }\n    ) {\n      ... on MeetingTask {\n        id\n        user {\n          id\n        }\n        pending\n        date\n        description\n        index\n        title\n        status\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\nexport const ADD_WORK_TASK = gql`\n  mutation AddWorkTask(\n    $id: ID!\n    $userId: ID!\n    $date: String!\n    $title: String!\n    $index: Float!\n    $status: Status!\n    $description: String!\n    $workTime: String!\n  ) {\n    createTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        index: $index\n        workTask: { workTime: $workTime }\n      }\n    ) {\n      ... on WorkTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\nexport const CREATE_TEAM = gql`\n  mutation CreateTeam(\n    $id: ID!\n    $ownerId: ID!\n    $members: [ID!]!\n    $name: String!\n    $description: String!\n  ) {\n    createTeam(\n      input: {\n        id: $id\n        ownerId: $ownerId\n        members: $members\n        name: $name\n        description: $description\n      }\n    ) {\n      id\n      owner {\n        id\n        name\n        email\n      }\n      members {\n        id\n        name\n        email\n      }\n      name\n      description\n    }\n  }\n`;\nexport const GET_USER = gql`\n  query User($id: ID!) {\n    user(id: $id) {\n      id\n      name\n      email\n    }\n  }\n`;\nexport const GET_USER_BY_EMAIL = gql`\n  query UserByEmail($email: String!) {\n    userByEmail(email: $email) {\n      id\n      name\n      email\n    }\n  }\n`;\nexport const GET_TEAM_MEETING_TASK_MANY = gql`\n  query TeamMeetingTaskMany(\n    $teamId: ID!\n    $dateFrom: DateTime!\n    $dateTo: DateTime!\n  ) {\n    teamMeetingTaskMany(\n      input: {\n        filter: { teamId: $teamId, dateFrom: $dateFrom, dateTo: $dateTo }\n      }\n    ) {\n      total\n      items {\n        date\n        title\n        description\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\nexport const NOTIFICATION_SUBSCRIPTION = gql`\n  subscription Notification($userId: ID!) {\n    notification(userId: $userId) {\n      id\n      fromUser {\n        name\n      }\n      type\n      date\n      acknowledged\n      team {\n        id\n        name\n      }\n    }\n  }\n`;\nexport const GET_NOTIFICATION_MANY = gql`\n  query GetNotificationMany($userId: ID!, $limit: Int!) {\n    userNotificationMany(input: { userId: $userId, limit: $limit }) {\n      total\n      items {\n        id\n        fromUser {\n          name\n        }\n        type\n        date\n        acknowledged\n        team {\n          name\n        }\n      }\n    }\n  }\n`;\nexport const GET_USERS_MEETING_TASK_MANY = gql`\n  query UsersTeamMeetingMany(\n    $userIds: [String!]!\n    $dateFrom: DateTime!\n    $dateTo: DateTime!\n  ) {\n    usersMeetingTaskMany(\n      input: { userIds: $userIds, dateFrom: $dateFrom, dateTo: $dateTo }\n    ) {\n      total\n      items {\n        user {\n          name\n        }\n        meetingTasks {\n          total\n          items {\n            id\n            date\n            title\n            startTime\n            endTime\n          }\n        }\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/graphql/graphql.ts"],"names":["gql","GET_MEETING_TASKS","GET_WORK_TASKS","GET_COMM_TASKS","EDIT_MEETING_TASK_DATE","EDIT_COMM_TASK_DATE","EDIT_WORK_TASK_DATE","EDIT_WORK_TASK_STATUS","EDIT_WORK_TASK","EDIT_MEETING_TASK","DELETE_MEETING_TASK","DELETE_WORK_TASK","EDIT_COMM_TASK","DELETE_COMM_TASK","EDIT_MEETING_TASK_STATUS","EDIT_COMM_TASK_STATUS","GET_TEAM_MANY","ADD_COMMUNICATION_TASK","ADD_MEETING_TASK","ADD_WORK_TASK","CREATE_TEAM","GET_USER","GET_USER_BY_EMAIL","GET_TEAM_MEETING_TASK_MANY","NOTIFICATION_SUBSCRIPTION","GET_NOTIFICATION_MANY","GET_USERS_MEETING_TASK_MANY"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,iBAAiB,GAAGD,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBO;AAyBP,OAAO,MAAME,cAAc,GAAGF,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBO;AAsBP,OAAO,MAAMG,cAAc,GAAGH,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO;AAwBP,OAAO,MAAMI,sBAAsB,GAAGJ,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BO;AA4BP,OAAO,MAAMK,mBAAmB,GAAGL,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBO;AA2BP,OAAO,MAAMM,mBAAmB,GAAGN,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBO;AAyBP,OAAO,MAAMO,qBAAqB,GAAGP,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBO;AA0BP,OAAO,MAAMQ,cAAc,GAAGR,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjCO;AAmCP,OAAO,MAAMS,iBAAiB,GAAGT,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5CO;AA8CP,OAAO,MAAMU,mBAAmB,GAAGV,GAAI;AACvC;AACA;AACA;AACA,CAJO;AAMP,OAAO,MAAMW,gBAAgB,GAAGX,GAAI;AACpC;AACA;AACA;AACA,CAJO;AAMP,OAAO,MAAMY,cAAc,GAAGZ,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzCO;AA2CP,OAAO,MAAMa,gBAAgB,GAAGb,GAAI;AACpC;AACA;AACA;AACA,CAJO;AAMP,OAAO,MAAMc,wBAAwB,GAAGd,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBO;AAmBP,OAAO,MAAMe,qBAAqB,GAAGf,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBO;AAmBP,OAAO,MAAMgB,aAAa,GAAGhB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBO;AAuBP,OAAO,MAAMiB,sBAAsB,GAAGjB,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9CO;AAgDP,OAAO,MAAMkB,gBAAgB,GAAGlB,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjDO;AAmDP,OAAO,MAAMmB,aAAa,GAAGnB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtCO;AAwCP,OAAO,MAAMoB,WAAW,GAAGpB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhCO;AAkCP,OAAO,MAAMqB,QAAQ,GAAGrB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AAUP,OAAO,MAAMsB,iBAAiB,GAAGtB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;AAUP,OAAO,MAAMuB,0BAA0B,GAAGvB,GAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBO;AAyBP,OAAO,MAAMwB,yBAAyB,GAAGxB,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBO;AAkBP,OAAO,MAAMyB,qBAAqB,GAAGzB,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAoBP,OAAO,MAAM0B,2BAA2B,GAAG1B,GAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO","sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_MEETING_TASKS = gql`\n  query meetingTasks($dateFrom: DateTime!, $dateTo: DateTime!, $userId: ID!) {\n    meetingTaskMany(\n      input: { userId: $userId, dateFrom: $dateFrom, dateTo: $dateTo }\n    ) {\n      items {\n        id\n        user {\n          id\n        }\n        pending\n        date\n        description\n        index\n        title\n        status\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\n\nexport const GET_WORK_TASKS = gql`\n  query workTasks($dateFrom: DateTime!, $dateTo: DateTime!, $userId: ID!) {\n    workTaskMany(\n      input: { userId: $userId, dateFrom: $dateFrom, dateTo: $dateTo }\n    ) {\n      items {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\n\nexport const GET_COMM_TASKS = gql`\n  query commTasks($dateFrom: DateTime!, $dateTo: DateTime!, $userId: ID!) {\n    communicationTaskMany(\n      input: { userId: $userId, dateFrom: $dateFrom, dateTo: $dateTo }\n    ) {\n      items {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n        email\n        phoneNumber\n      }\n    }\n  }\n`;\n\nexport const EDIT_MEETING_TASK_DATE = gql`\n  mutation EditMeetingTaskDate(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $index: Float!\n  ) {\n    editTask(input: { id: $id, userId: $userId, date: $date, index: $index }) {\n      ... on MeetingTask {\n        id\n        user {\n          id\n        }\n        pending\n        date\n        description\n        index\n        title\n        status\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\n\nexport const EDIT_COMM_TASK_DATE = gql`\n  mutation EditCommTaskDate(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $index: Float!\n  ) {\n    editTask(input: { id: $id, userId: $userId, date: $date, index: $index }) {\n      ... on CommunicationTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n        email\n        phoneNumber\n      }\n    }\n  }\n`;\n\nexport const EDIT_WORK_TASK_DATE = gql`\n  mutation EditWorkTaskDate(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $index: Float!\n  ) {\n    editTask(input: { id: $id, userId: $userId, date: $date, index: $index }) {\n      ... on WorkTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\n\nexport const EDIT_WORK_TASK_STATUS = gql`\n  mutation EditWorkTaskStatus(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $status: Status!\n  ) {\n    editTask(\n      input: { id: $id, userId: $userId, date: $date, status: $status }\n    ) {\n      ... on WorkTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\n\nexport const EDIT_WORK_TASK = gql`\n  mutation EditWorkTask(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $workTime: String!\n    $pending: Boolean!\n  ) {\n    editTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        pending: $pending\n        workTask: { workTime: $workTime }\n      }\n    ) {\n      ... on WorkTask {\n        id\n        date\n        description\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\n\nexport const EDIT_MEETING_TASK = gql`\n  mutation EditMeetingTask(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $endTime: String!\n    $startTime: String!\n    $address: String!\n    $category: String!\n    $pending: Boolean!\n  ) {\n    editTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        pending: $pending\n        meetingTask: {\n          endTime: $endTime\n          startTime: $startTime\n          address: $address\n          category: $category\n        }\n      }\n    ) {\n      ... on MeetingTask {\n        id\n        date\n        description\n        title\n        status\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\n\nexport const DELETE_MEETING_TASK = gql`\n  mutation DeleteMeetingTask($id: ID!) {\n    deleteTask(id: $id)\n  }\n`;\n\nexport const DELETE_WORK_TASK = gql`\n  mutation DeleteWorkTask($id: ID!) {\n    deleteTask(id: $id)\n  }\n`;\n\nexport const EDIT_COMM_TASK = gql`\n  mutation EditCommTask(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $workTime: String!\n    $phoneNumber: String!\n    $email: String!\n    $pending: Boolean!\n  ) {\n    editTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        pending: $pending\n        communicationTask: {\n          workTime: $workTime\n          phoneNumber: $phoneNumber\n          email: $email\n        }\n      }\n    ) {\n      ... on CommunicationTask {\n        id\n        date\n        description\n        title\n        status\n        workTime\n        phoneNumber\n        email\n      }\n    }\n  }\n`;\n\nexport const DELETE_COMM_TASK = gql`\n  mutation DeleteCommTask($id: ID!) {\n    deleteTask(id: $id)\n  }\n`;\n\nexport const EDIT_MEETING_TASK_STATUS = gql`\n  mutation EditMeetingTaskStatus(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $status: Status!\n  ) {\n    editTask(\n      input: { id: $id, userId: $userId, date: $date, status: $status }\n    ) {\n      ... on MeetingTask {\n        id\n        date\n        status\n      }\n    }\n  }\n`;\n\nexport const EDIT_COMM_TASK_STATUS = gql`\n  mutation EditCommTaskStatus(\n    $id: ID!\n    $userId: ID!\n    $date: DateTime!\n    $status: Status!\n  ) {\n    editTask(\n      input: { id: $id, userId: $userId, date: $date, status: $status }\n    ) {\n      ... on CommunicationTask {\n        id\n        date\n        status\n      }\n    }\n  }\n`;\n\nexport const GET_TEAM_MANY = gql`\n  query TeamMany($userId: ID!) {\n    teamMany(ownerId: $userId) {\n      total\n      items {\n        id\n        owner {\n          id\n          name\n          email\n        }\n        members {\n          id\n          name\n          email\n        }\n        name\n        description\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMUNICATION_TASK = gql`\n  mutation AddCommunicationTask(\n    $id: ID!\n    $userId: ID!\n    $date: String!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $index: Float!\n    $workTime: String!\n    $email: String!\n    $phoneNumber: String!\n  ) {\n    createTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        index: $index\n        communicationTask: {\n          workTime: $workTime\n          email: $email\n          phoneNumber: $phoneNumber\n        }\n      }\n    ) {\n      ... on CommunicationTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n        email\n        phoneNumber\n      }\n    }\n  }\n`;\n\nexport const ADD_MEETING_TASK = gql`\n  mutation AddMeetingTask(\n    $id: ID!\n    $userId: ID!\n    $date: String!\n    $title: String!\n    $status: Status!\n    $description: String!\n    $index: Float!\n    $endTime: String!\n    $startTime: String!\n    $address: String!\n    $category: String!\n  ) {\n    createTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        index: $index\n        meetingTask: {\n          endTime: $endTime\n          startTime: $startTime\n          address: $address\n          category: $category\n        }\n      }\n    ) {\n      ... on MeetingTask {\n        id\n        user {\n          id\n        }\n        pending\n        date\n        description\n        index\n        title\n        status\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\n\nexport const ADD_WORK_TASK = gql`\n  mutation AddWorkTask(\n    $id: ID!\n    $userId: ID!\n    $date: String!\n    $title: String!\n    $index: Float!\n    $status: Status!\n    $description: String!\n    $workTime: String!\n  ) {\n    createTask(\n      input: {\n        id: $id\n        userId: $userId\n        date: $date\n        title: $title\n        status: $status\n        description: $description\n        index: $index\n        workTask: { workTime: $workTime }\n      }\n    ) {\n      ... on WorkTask {\n        id\n        pending\n        user {\n          id\n        }\n        date\n        description\n        index\n        title\n        status\n        workTime\n      }\n    }\n  }\n`;\n\nexport const CREATE_TEAM = gql`\n  mutation CreateTeam(\n    $id: ID!\n    $ownerId: ID!\n    $members: [ID!]!\n    $name: String!\n    $description: String!\n  ) {\n    createTeam(\n      input: {\n        id: $id\n        ownerId: $ownerId\n        members: $members\n        name: $name\n        description: $description\n      }\n    ) {\n      id\n      owner {\n        id\n        name\n        email\n      }\n      members {\n        id\n        name\n        email\n      }\n      name\n      description\n    }\n  }\n`;\n\nexport const GET_USER = gql`\n  query User($id: ID!) {\n    user(id: $id) {\n      id\n      name\n      email\n    }\n  }\n`;\n\nexport const GET_USER_BY_EMAIL = gql`\n  query UserByEmail($email: String!) {\n    userByEmail(email: $email) {\n      id\n      name\n      email\n    }\n  }\n`;\n\nexport const GET_TEAM_MEETING_TASK_MANY = gql`\n  query TeamMeetingTaskMany(\n    $teamId: ID!\n    $dateFrom: DateTime!\n    $dateTo: DateTime!\n  ) {\n    teamMeetingTaskMany(\n      input: {\n        filter: { teamId: $teamId, dateFrom: $dateFrom, dateTo: $dateTo }\n      }\n    ) {\n      total\n      items {\n        date\n        title\n        description\n        endTime\n        startTime\n        address\n        category\n      }\n    }\n  }\n`;\n\nexport const NOTIFICATION_SUBSCRIPTION = gql`\n  subscription Notification($userId: ID!) {\n    notification(userId: $userId) {\n      id\n      fromUser {\n        name\n      }\n      type\n      date\n      acknowledged\n      team {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const GET_NOTIFICATION_MANY = gql`\n  query GetNotificationMany($userId: ID!, $limit: Int!) {\n    userNotificationMany(input: { userId: $userId, limit: $limit }) {\n      total\n      items {\n        id\n        fromUser {\n          name\n        }\n        type\n        date\n        acknowledged\n        team {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_USERS_MEETING_TASK_MANY = gql`\n  query UsersTeamMeetingMany(\n    $userIds: [String!]!\n    $dateFrom: DateTime!\n    $dateTo: DateTime!\n  ) {\n    usersMeetingTaskMany(\n      input: { userIds: $userIds, dateFrom: $dateFrom, dateTo: $dateTo }\n    ) {\n      total\n      items {\n        user {\n          name\n        }\n        meetingTasks {\n          total\n          items {\n            id\n            date\n            title\n            startTime\n            endTime\n          }\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}
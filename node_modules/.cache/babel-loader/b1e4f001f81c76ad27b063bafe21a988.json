{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/addTaskDialogs/WorkAddTaskDialog.js\";\nimport '../../App.css';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FlagIcon from '@material-ui/icons/Flag';\nconst styles = makeStyles(theme => ({\n  detailTitle: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '700',\n    fontSize: '1.6em',\n    paddingBottom: '15px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0\n  },\n  detailText: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    paddingLeft: '20px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(2),\n    top: theme.spacing(3.5),\n    color: '#1f1f1d'\n  },\n  editButton: {\n    position: 'absolute',\n    right: theme.spacing(8),\n    top: theme.spacing(3.5),\n    color: '#2B2B28'\n  },\n  taskStatus: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    padding: '0.4em 0.7em',\n    borderRadius: '10px'\n  },\n  taskSelect: {\n    width: '90%',\n    background: '#FFEAC8',\n    borderStyle: 'none',\n    borderWidth: 2,\n    borderRadius: '10px',\n    marginLeft: 18,\n    padding: '10px 0px',\n    \"&:focus\": {\n      borderRadius: '10px',\n      background: 'transparent'\n    }\n  },\n  addTaskInput: {\n    margin: '10px',\n    \"& input::placeholder\": {\n      fontFamily: 'Poppins',\n      color: 'red'\n    },\n    \"& input\": {\n      fontFamily: 'Poppins'\n    }\n  }\n}));\nexport function WorkAddTaskDialog(props) {\n  const classes = styles();\n  const {\n    onClose,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [val, setVal] = useState(null);\n\n  const handleStatusChange = event => {\n    setVal(event.target.value);\n  };\n\n  const [selectedDate, handleDateChange] = useState(\"2021-01-01T01:00:00.000Z\"); // moves the menu below the select input\n\n  const menuProps = {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.detailTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Vytvori\\u0165 \\xFAlohu\"), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"N\\xE1zov\",\n    variant: \"outlined\",\n    className: classes.addTaskInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Popis\",\n    multiline: true,\n    rows: 3,\n    variant: \"outlined\",\n    className: classes.addTaskInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TimePicker, {\n    autoOk: true,\n    ampm: false,\n    openTo: \"hours\",\n    views: [\"hours\", \"minutes\"],\n    format: \"hh:mm\",\n    minutesStep: 5,\n    value: selectedDate,\n    onChange: handleDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"disabled-options-demo\",\n    options: timeSlots,\n    style: {\n      width: 100\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }))));\n}\nWorkAddTaskDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\nconst timeSlots = Array.from(new Array(24 * 4)).map((_, index) => `${index < 20 ? '0' : ''}${Math.floor(index / 4)}:${index % 3 === 0 ? '00' : '45'}`);","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/addTaskDialogs/WorkAddTaskDialog.js"],"names":["React","useState","makeStyles","PropTypes","Dialog","Select","MenuItem","FormControl","TextField","TimePicker","MuiPickersUtilsProvider","MomentUtils","Autocomplete","FormatAlignLeftIcon","TimerIcon","IconButton","CloseIcon","FlagIcon","styles","theme","detailTitle","fontFamily","color","fontWeight","fontSize","paddingBottom","marginBlockStart","marginBlockEnd","detailText","paddingLeft","closeButton","position","right","spacing","top","editButton","taskStatus","padding","borderRadius","taskSelect","width","background","borderStyle","borderWidth","marginLeft","addTaskInput","margin","WorkAddTaskDialog","props","classes","onClose","open","handleClose","val","setVal","handleStatusChange","event","target","value","selectedDate","handleDateChange","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","style","backgroundColor","boxShadow","elevation","display","alignItems","justifyContent","paddingTop","timeSlots","params","propTypes","func","isRequired","bool","Array","from","map","_","index","Math","floor"],"mappings":"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","sourcesContent":["import '../../App.css';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FlagIcon from '@material-ui/icons/Flag';\n\nconst styles = makeStyles((theme) => ({\n    detailTitle: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '700',\n        fontSize: '1.6em',\n        paddingBottom: '15px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n    },\n    detailText: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        paddingLeft: '20px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: theme.spacing(3.5),\n        color: '#1f1f1d',\n    },\n    editButton: {\n        position: 'absolute',\n        right: theme.spacing(8),\n        top: theme.spacing(3.5),\n        color: '#2B2B28',\n    },\n    taskStatus: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        padding: '0.4em 0.7em',\n        borderRadius: '10px',\n    },\n    taskSelect: {\n        width: '90%',\n        background: '#FFEAC8',\n        borderStyle:'none',\n        borderWidth: 2,\n        borderRadius: '10px',\n        marginLeft: 18,\n        padding: '10px 0px',\n        \"&:focus\":{\n            borderRadius: '10px',\n            background: 'transparent',\n        },\n    },\n    addTaskInput: {\n        margin: '10px',\n        \"& input::placeholder\": {\n            fontFamily: 'Poppins',\n            color: 'red',\n        },\n        \"& input\": {\n            fontFamily: 'Poppins',\n        }\n    }\n}));\n\nexport function WorkAddTaskDialog(props) {\n    const classes = styles();\n\n    const { onClose, open } = props;\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const [val,setVal] = useState(null);\n\n    const handleStatusChange = (event) => {\n        setVal(event.target.value);\n    };\n\n    const [selectedDate, handleDateChange] = useState(\"2021-01-01T01:00:00.000Z\");\n\n    // moves the menu below the select input\n    const menuProps = {\n        anchorOrigin: {\n        vertical: \"bottom\",\n            horizontal: \"left\"\n        },\n        transformOrigin: {\n        vertical: \"top\",\n            horizontal: \"left\"\n        },\n        getContentAnchorEl: null\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n            <Dialog\n            onClose={handleClose}\n            open={open}\n            fullWidth={true}\n            maxWidth={'xs'}\n            PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', }, elevation: 0 }}\n            BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n            >\n                <h1 className={classes.detailTitle}>Vytvoriť úlohu</h1>\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Názov\"\n                    variant=\"outlined\"\n                    className={classes.addTaskInput}\n                />\n\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Popis\"\n                    multiline\n                    rows={3}\n                    variant=\"outlined\"\n                    className={classes.addTaskInput}\n                />\n\n                <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                    <FormatAlignLeftIcon style={{ paddingTop: '2px' }} />\n                    <h3 className={classes.detailText}>\n                        {}\n                    </h3>\n                </span>\n\n                <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                    <TimerIcon />\n                    <TimePicker\n                        autoOk\n                        ampm={false}\n                        openTo=\"hours\"\n                        views={[\"hours\", \"minutes\"]}\n                        format=\"hh:mm\"\n                        minutesStep={5}\n                        value={selectedDate}\n                        onChange={handleDateChange}\n                    />\n                    <Autocomplete\n                        id=\"disabled-options-demo\"\n                        options={timeSlots}\n                        style={{ width: 100 }}\n                        renderInput={(params) => (\n                            <TextField {...params} variant=\"filled\" />\n                        )}\n                    />\n                </span>\n\n            </Dialog>\n        </MuiPickersUtilsProvider>\n        \n    );\n}\n\nWorkAddTaskDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};\n\nconst timeSlots = Array.from(new Array(24 * 4)).map(\n    (_, index) => `${index < 20 ? '0' : ''}${Math.floor(index / 4)}:${index % 3 === 0 ? '00' : '45'}`,\n  );"]},"metadata":{},"sourceType":"module"}
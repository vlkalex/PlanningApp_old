{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/addTaskDialogs/MeetAddTaskDialog.js\";\nimport '../../App.css';\nimport '../css/dialog.sass';\nimport React, { useState, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport { DataContext } from \"../../providers/DataProvider\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport { startTimeSlots, endTimeSlots } from '../../const/dialogConsts';\nconst CssTextField = withStyles({\n  root: {\n    '& .MuiFilledInput-root': {\n      fontFamily: 'Poppins',\n      paddingTop: 0,\n      background: 'rgba(171, 171, 171, 0.15)'\n    }\n  }\n})(TextField);\nexport function MeetAddTaskDialog(props) {\n  const {\n    onClose,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskDesc, setTaskDesc] = useState(\"\");\n  const [taskAddress, setAddress] = useState(\"\");\n  const [selectedStartTime, handleStartTimeChange] = useState(\"13:00\");\n  const [selectedEndTime, handleEndTimeChange] = useState(\"14:00\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const {\n    setRefresh\n  } = useContext(DataContext);\n  const user = useContext(UserContext); // moves the menu below the select input\n\n  const menuProps = {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const handleForm = e => {\n    e.preventDefault();\n\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          token: user.uid,\n          title: taskTitle,\n          desc: taskDesc,\n          date: moment(selectedDate).format(\"DD/MM/yyyy\"),\n          address: taskAddress.value == undefined ? \"\" : taskAddress.value.description,\n          startTime: selectedStartTime,\n          endTime: selectedEndTime,\n          category: \"\"\n        })\n      };\n      fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/create-meeting-task', requestOptions).then(response => response.json()).then(data => setRefresh(data.taskId));\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setTaskTitle(\"\");\n    setTaskDesc(\"\");\n    handleStartTimeChange(\"13:00\");\n    handleEndTimeChange(\"14:00\");\n    setAddress(\"\");\n    handleDateChange(new Date());\n    handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleForm(e),\n    style: {\n      display: 'contents'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"detail-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Vytvori\\u0165 \\xFAlohu\"), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: \"close-button\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    label: \"N\\xE1zov\",\n    variant: \"outlined\",\n    value: taskTitle,\n    onChange: e => setTaskTitle(e.target.value),\n    className: \"add-task-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Popis\",\n    multiline: true,\n    rows: 3,\n    variant: \"outlined\",\n    value: taskDesc,\n    onChange: e => setTaskDesc(e.target.value),\n    className: \"add-task-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px',\n      paddingLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PlaceIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n    selectProps: {\n      styles: {\n        control: (provider, state) => ({ ...provider,\n          background: 'none',\n          fontFamily: 'Poppins',\n          width: '97.8%',\n          height: '3.8em',\n          borderColor: 'rgba(0, 0, 0, 0.23)',\n          \"&:hover\": {\n            borderColor: state.isFocused ? \"-webkit-focus-ring-color\" : \"black\"\n          }\n        }),\n        container: provided => ({ ...provided,\n          width: '100%',\n          marginLeft: '10px'\n        }),\n        input: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        option: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        menu: provided => ({ ...provided,\n          width: '97.8%'\n        }),\n        singleValue: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        dropdownIndicator: provider => ({ ...provider,\n          color: 'rgba(0, 0, 0, 0.23)'\n        }),\n        indicatorSeparator: provider => ({ ...provider,\n          color: 'rgba(0, 0, 0, 0.23)'\n        })\n      },\n      taskAddress,\n      onChange: setAddress\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingLeft: '10px',\n      paddingRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TodayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    style: {\n      width: 90,\n      marginLeft: 10,\n      background: 'rgba(171, 171, 171, 0.15)',\n      borderRadius: '5px',\n      border: 'none'\n    },\n    format: \"D.M.YYYY\",\n    value: selectedDate,\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"time-picker\",\n    options: startTimeSlots,\n    style: {\n      width: 90,\n      marginLeft: 10\n    },\n    disableClearable: true,\n    freeSolo: true,\n    value: selectedStartTime,\n    inputValue: selectedStartTime,\n    onInputChange: (event, newInputValue) => {\n      handleStartTimeChange(newInputValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(CssTextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      style: {\n        background: 'rgba(171, 171, 171, 0.15)',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginLeft: '8px',\n      marginRight: '8px',\n      fontSize: '20px',\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"time-picker\",\n    options: endTimeSlots,\n    style: {\n      width: 90\n    },\n    disableClearable: true,\n    freeSolo: true,\n    value: selectedEndTime,\n    inputValue: selectedEndTime,\n    onInputChange: (event, newInputValue) => {\n      handleEndTimeChange(newInputValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(CssTextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      style: {\n        background: 'rgba(171, 171, 171, 0.15)',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"create-task-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, \"Vytvori\\u0165\"))));\n}\nMeetAddTaskDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/addTaskDialogs/MeetAddTaskDialog.js"],"names":["React","useState","useContext","withStyles","moment","PropTypes","Dialog","Button","TextField","DatePicker","MuiPickersUtilsProvider","MomentUtils","Autocomplete","GooglePlacesAutocomplete","TimerIcon","IconButton","CloseIcon","TodayIcon","PlaceIcon","DataContext","UserContext","startTimeSlots","endTimeSlots","CssTextField","root","fontFamily","paddingTop","background","MeetAddTaskDialog","props","onClose","open","handleClose","taskTitle","setTaskTitle","taskDesc","setTaskDesc","taskAddress","setAddress","selectedStartTime","handleStartTimeChange","selectedEndTime","handleEndTimeChange","selectedDate","handleDateChange","Date","setRefresh","user","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","handleForm","e","preventDefault","requestOptions","method","headers","localStorage","getItem","body","JSON","stringify","token","uid","title","desc","date","format","address","value","undefined","description","startTime","endTime","category","fetch","then","response","json","data","taskId","error","console","log","alert","style","backgroundColor","color","borderRadius","padding","boxShadow","elevation","display","target","alignItems","justifyContent","paddingLeft","styles","control","provider","state","width","height","borderColor","isFocused","container","provided","marginLeft","input","option","menu","singleValue","dropdownIndicator","indicatorSeparator","onChange","flexDirection","paddingRight","border","event","newInputValue","params","marginRight","fontSize","fontWeight","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import '../../App.css';\nimport '../css/dialog.sass';\nimport React, { useState, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\n\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\nimport PlaceIcon from '@material-ui/icons/Place';\n\nimport { DataContext } from \"../../providers/DataProvider\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport { startTimeSlots, endTimeSlots } from '../../const/dialogConsts';\n\nconst CssTextField = withStyles({\n    root: {\n      '& .MuiFilledInput-root': {\n        fontFamily: 'Poppins',\n        paddingTop: 0,\n        background: 'rgba(171, 171, 171, 0.15)'\n      },\n    },\n})(TextField);\n\nexport function MeetAddTaskDialog(props) {\n\n    const { onClose, open } = props;\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const [taskTitle, setTaskTitle] = useState(\"\");\n    const [taskDesc, setTaskDesc] = useState(\"\");\n    const [taskAddress, setAddress] = useState(\"\");\n    const [selectedStartTime, handleStartTimeChange] = useState(\"13:00\");\n    const [selectedEndTime, handleEndTimeChange] = useState(\"14:00\")\n    const [selectedDate, handleDateChange] = useState(new Date());\n\n    const { setRefresh } = useContext(DataContext);\n    const user = useContext(UserContext);\n\n    // moves the menu below the select input\n    const menuProps = {\n        anchorOrigin: {\n        vertical: \"bottom\",\n            horizontal: \"left\"\n        },\n        transformOrigin: {\n        vertical: \"top\",\n            horizontal: \"left\"\n        },\n        getContentAnchorEl: null\n    };\n\n    const handleForm = e => {\n        e.preventDefault();\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ \n                    token: user.uid,\n                    title: taskTitle,\n                    desc: taskDesc,\n                    date: moment(selectedDate).format(\"DD/MM/yyyy\"),\n                    address: taskAddress.value == undefined ? \"\" : taskAddress.value.description,\n                    startTime: selectedStartTime,\n                    endTime: selectedEndTime,\n                    category: \"\",\n                    })\n            };\n            fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/create-meeting-task', requestOptions)\n                .then(response => response.json())\n                .then(data => setRefresh(data.taskId));\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setTaskTitle(\"\");\n        setTaskDesc(\"\");\n        handleStartTimeChange(\"13:00\");\n        handleEndTimeChange(\"14:00\");\n        setAddress(\"\");\n        handleDateChange(new Date());\n        handleClose();\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n            \n            <Dialog\n            onClose={handleClose}\n            open={open}\n            fullWidth={true}\n            maxWidth={'xs'}\n            PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', }, elevation: 0 }}\n            BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n            >\n                <form onSubmit={e => handleForm(e)} style={{display: 'contents'}}>\n                    <h1 className=\"detail-title\">Vytvoriť úlohu</h1>\n                    <IconButton aria-label=\"close\" className=\"close-button\" onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n\n                    <TextField\n                        label=\"Názov\"\n                        variant=\"outlined\"\n                        value={taskTitle}\n                        onChange={e => setTaskTitle(e.target.value)}\n                        className=\"add-task-input\"\n                    />\n\n                    <TextField\n                        label=\"Popis\"\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        value={taskDesc}\n                        onChange={e => setTaskDesc(e.target.value)}\n                        className=\"add-task-input\"\n                    />\n\n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px', paddingLeft: '10px' }}>\n                        <PlaceIcon />\n\n                        <GooglePlacesAutocomplete\n                            selectProps={{\n                                styles: {\n                                    control: (provider, state) => ({\n                                        ...provider,\n                                        background: 'none',\n                                        fontFamily: 'Poppins',\n                                        width: '97.8%',\n                                        height: '3.8em',\n                                        borderColor: 'rgba(0, 0, 0, 0.23)',\n                                        \"&:hover\": {\n                                            borderColor: state.isFocused ? \"-webkit-focus-ring-color\" : \"black\"\n                                        }\n                                    }),\n                                    container: (provided) => ({\n                                        ...provided,\n                                        width: '100%',\n                                        marginLeft: '10px',\n                                    }),\n                                    input: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    option: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    menu: (provided) => ({\n                                        ...provided,\n                                        width: '97.8%',\n                                    }),\n                                    singleValue: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    dropdownIndicator: (provider) => ({\n                                        ...provider,\n                                        color: 'rgba(0, 0, 0, 0.23)',\n                                    }),\n                                    indicatorSeparator: (provider) => ({\n                                        ...provider,\n                                        color: 'rgba(0, 0, 0, 0.23)',\n                                    }),\n                                },\n                                taskAddress,\n                                onChange: setAddress,\n                            }}\n                        />\n                    </span>\n\n                    <div style={{alignItems:'center', display: 'flex', flexDirection:'row', justifyContent: 'space-between', paddingLeft: '10px', paddingRight: '10px'}}>\n                        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                            <TodayIcon />\n                            <DatePicker\n                                autoOk\n                                disableToolbar\n                                variant=\"inline\"\n                                inputVariant=\"outlined\"\n                                style={{ width: 90, marginLeft: 10, background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px', border: 'none' }}\n                                format=\"D.M.YYYY\"\n                                value={selectedDate}\n                                onChange={date => handleDateChange(date)}\n                            />\n                        </span>\n\n                        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                            <TimerIcon />\n                            <Autocomplete\n                                id=\"time-picker\"\n                                options={startTimeSlots}\n                                style={{ width: 90, marginLeft: 10 }}\n                                disableClearable\n                                freeSolo\n                                value={selectedStartTime}\n                                inputValue={selectedStartTime}\n                                onInputChange={(event, newInputValue) => {\n                                    handleStartTimeChange(newInputValue);\n                                }}\n                                renderInput={(params) => (\n                                    <CssTextField {...params} variant=\"outlined\" style={{background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px'}} />\n                                )}\n                            />\n                            <h3 style={{marginLeft:'8px', marginRight:'8px', fontSize:'20px', fontWeight:400}}>-</h3>\n                            <Autocomplete\n                                id=\"time-picker\"\n                                options={endTimeSlots}\n                                style={{ width: 90 }}\n                                disableClearable\n                                freeSolo\n                                value={selectedEndTime}\n                                inputValue={selectedEndTime}\n                                onInputChange={(event, newInputValue) => {\n                                    handleEndTimeChange(newInputValue);\n                                }}\n                                renderInput={(params) => (\n                                    <CssTextField {...params} variant=\"outlined\" style={{background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px'}} />\n                                )}\n                            />\n                        </span>\n                    </div>\n\n                    <Button type=\"submit\" className=\"create-task-button\">\n                        Vytvoriť\n                    </Button>\n                \n                </form>\n            </Dialog>\n            \n        </MuiPickersUtilsProvider>\n        \n    );\n}\n\nMeetAddTaskDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
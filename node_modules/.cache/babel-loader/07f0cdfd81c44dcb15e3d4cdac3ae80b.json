{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/UserProvider.js\";\nimport React, { useState, createContext, useEffect, useContext } from \"react\";\nimport * as firebase from 'firebase';\nexport const UserContext = createContext({\n  user: null\n});\n\nfunction UserProvider(props) {\n  const [user, setUser] = useState([]);\n  const [authUser, setAuthUser] = useState();\n  firebase.auth().onAuthStateChanged(user => {\n    setAuthUser(user.uid);\n  });\n  useEffect(() => {\n    var firebaseUser = firebase.auth().currentUser;\n    var name, email, photoUrl, uid, emailVerified;\n\n    if (firebaseUser != null) {\n      name = firebaseUser.displayName;\n      email = firebaseUser.email;\n      photoUrl = firebaseUser.photoURL;\n      emailVerified = firebaseUser.emailVerified;\n      uid = firebaseUser.uid;\n    }\n\n    firebase.auth().currentUser.getIdToken(true).then(async function (idToken) {\n      localStorage.setItem(\"@token\", idToken);\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          token: uid\n        })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-user-data', requestOptions).then(response => response.json()).then(data => setUser({ ...data,\n        ['uid']: uid\n      }));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, console.log(user), props.children);\n}\n\nexport default UserProvider;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/UserProvider.js"],"names":["React","useState","createContext","useEffect","useContext","firebase","UserContext","user","UserProvider","props","setUser","authUser","setAuthUser","auth","onAuthStateChanged","uid","firebaseUser","currentUser","name","email","photoUrl","emailVerified","displayName","photoURL","getIdToken","then","idToken","localStorage","setItem","requestOptions","method","headers","getItem","body","JSON","stringify","token","fetch","response","json","data","catch","error","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,CAAC;AAAEK,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAjC;;AAEP,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAE3B,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AAGAI,EAAAA,QAAQ,CAACQ,IAAT,GAAgBC,kBAAhB,CAAoCP,IAAD,IAAU;AAC3CK,IAAAA,WAAW,CAACL,IAAI,CAACQ,GAAN,CAAX;AACD,GAFD;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,YAAY,GAAGX,QAAQ,CAACQ,IAAT,GAAgBI,WAAnC;AACA,QAAIC,IAAJ,EAAUC,KAAV,EAAiBC,QAAjB,EAA2BL,GAA3B,EAAgCM,aAAhC;;AAEA,QAAIL,YAAY,IAAI,IAApB,EAA0B;AACxBE,MAAAA,IAAI,GAAGF,YAAY,CAACM,WAApB;AACAH,MAAAA,KAAK,GAAGH,YAAY,CAACG,KAArB;AACAC,MAAAA,QAAQ,GAAGJ,YAAY,CAACO,QAAxB;AACAF,MAAAA,aAAa,GAAGL,YAAY,CAACK,aAA7B;AACAN,MAAAA,GAAG,GAAGC,YAAY,CAACD,GAAnB;AACD;;AAEDV,IAAAA,QAAQ,CAACQ,IAAT,GAAgBI,WAAhB,CAA4BO,UAA5B,CAAuC,IAAvC,EAA6CC,IAA7C,CAAkD,gBAAeC,OAAf,EAAwB;AACxEC,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BF,OAA/B;AAEA,YAAMG,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,MADa;AAErBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB,kBAAlB;AAAsC,oBAAU,KAAhD;AAAuD,2BAAiB,YAAYJ,YAAY,CAACK,OAAb,CAAqB,QAArB;AAApF,SAFY;AAGrBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,KAAK,EAAErB;AAAT,SAAf;AAHe,OAAvB;AAKA,YAAMsB,KAAK,CAAC,gFAAD,EAAmFR,cAAnF,CAAL,CACDJ,IADC,CACIa,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADhB,EAEDd,IAFC,CAEIe,IAAI,IAAI9B,OAAO,CAAC,EAAE,GAAG8B,IAAL;AAAW,SAAC,KAAD,GAAUzB;AAArB,OAAD,CAFnB,CAAN;AAGD,KAXD,EAWG0B,KAXH,CAWS,UAASC,KAAT,EAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAbD;AAeD,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEnC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoC,OAAO,CAACC,GAAR,CAAYrC,IAAZ,CADH,EAEGE,KAAK,CAACoC,QAFT,CADF;AAMD;;AAED,eAAerC,YAAf","sourcesContent":["import React, { useState, createContext, useEffect, useContext } from \"react\";\nimport * as firebase from 'firebase';\n\nexport const UserContext = createContext({ user: null });\n\nfunction UserProvider(props) {\n\n  const [user, setUser] = useState([]);\n  const [authUser, setAuthUser] = useState();\n\n\n  firebase.auth().onAuthStateChanged((user) => {\n    setAuthUser(user.uid);\n  })\n  useEffect(() => {\n    var firebaseUser = firebase.auth().currentUser;\n    var name, email, photoUrl, uid, emailVerified;\n\n    if (firebaseUser != null) {\n      name = firebaseUser.displayName;\n      email = firebaseUser.email;\n      photoUrl = firebaseUser.photoURL;\n      emailVerified = firebaseUser.emailVerified;\n      uid = firebaseUser.uid;\n    }\n\n    firebase.auth().currentUser.getIdToken(true).then(async function(idToken) {\n      localStorage.setItem(\"@token\", idToken)\n\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n        body: JSON.stringify({ token: uid })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-user-data', requestOptions)\n          .then(response => response.json())\n          .then(data => setUser({ ...data, ['uid'] : uid  }));\n    }).catch(function(error) {\n      console.log(error);\n    });\n    \n  }, []);\n\n  return (\n    <UserContext.Provider value={user}>\n      {console.log(user)}\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserProvider;\n"]},"metadata":{},"sourceType":"module"}
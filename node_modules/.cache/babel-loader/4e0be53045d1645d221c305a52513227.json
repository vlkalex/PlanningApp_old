{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/addTaskDialogs/CommAddTaskDialog.js\";\nimport '../../App.css';\nimport React, { useState, useContext } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport { DataContext } from \"../../providers/DataProvider\";\nconst CssTextField = withStyles({\n  root: {\n    '& .MuiFilledInput-root': {\n      fontFamily: 'Poppins',\n      paddingTop: 0,\n      background: 'rgba(171, 171, 171, 0.15)'\n    }\n  }\n})(TextField);\nconst styles = makeStyles(theme => ({\n  detailTitle: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '700',\n    fontSize: '1.6em',\n    paddingBottom: '15px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0\n  },\n  detailText: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    paddingLeft: '20px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(2),\n    top: theme.spacing(3.5),\n    color: '#1f1f1d'\n  },\n  editButton: {\n    position: 'absolute',\n    right: theme.spacing(8),\n    top: theme.spacing(3.5),\n    color: '#2B2B28'\n  },\n  taskSelect: {\n    width: '90%',\n    background: '#FFEAC8',\n    borderStyle: 'none',\n    borderWidth: 2,\n    borderRadius: '10px',\n    marginLeft: 18,\n    padding: '10px 0px',\n    \"&:focus\": {\n      borderRadius: '10px',\n      background: 'transparent'\n    }\n  },\n  addTaskInput: {\n    fontFamily: 'Poppins',\n    margin: '10px',\n    \"& label\": {\n      fontFamily: 'Poppins'\n    },\n    \"& input\": {\n      fontFamily: 'Poppins'\n    }\n  },\n  createTaskButton: {\n    width: '60%',\n    alignSelf: 'center',\n    margin: '20px',\n    fontFamily: 'Poppins',\n    fontSize: '14px',\n    fontWeight: '600',\n    color: 'white',\n    background: '#E3B04B',\n    '&:hover': {\n      background: '#ffc44f'\n    }\n  }\n}));\nexport function CommAddTaskDialog(props) {\n  const classes = styles();\n  const {\n    onClose,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [val, setVal] = useState(null);\n\n  const handleStatusChange = event => {\n    setVal(event.target.value);\n  };\n\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskDesc, setTaskDesc] = useState(\"\");\n  const [contactPhoneNumber, setPhoneNumber] = useState(\"\");\n  const [contactEmail, setEmail] = useState(\"\");\n  const [selectedTime, handleTimeChange] = useState(\"1h30m\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const {\n    taskData,\n    weekState,\n    setRefresh\n  } = useContext(DataContext); // moves the menu below the select input\n\n  const menuProps = {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const handleForm = e => {\n    e.preventDefault();\n\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*'\n        },\n        body: JSON.stringify({\n          title: taskTitle,\n          desc: taskDesc,\n          date: moment(selectedDate).format(\"DD/MM/yyyy\"),\n          email: contactEmail,\n          phoneNumber: contactPhoneNumber,\n          workTime: selectedTime\n        })\n      };\n      fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/create-comm-task', requestOptions).then(response => response.json()).then(data => setRefresh(data.taskId));\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setTaskTitle(\"\");\n    setTaskDesc(\"\");\n    handleTimeChange(\"1h30m\");\n    handleDateChange(new Date());\n    handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleForm(e),\n    style: {\n      display: 'contents'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.detailTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, \"Vytvori\\u0165 \\xFAlohu\"), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    label: \"N\\xE1zov\",\n    variant: \"outlined\",\n    value: taskTitle,\n    onChange: e => setTaskTitle(e.target.value),\n    className: classes.addTaskInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Popis\",\n    multiline: true,\n    rows: 3,\n    variant: \"outlined\",\n    value: taskDesc,\n    onChange: e => setTaskDesc(e.target.value),\n    className: classes.addTaskInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PhoneIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Tel. \\u010D\\xEDslo\",\n    variant: \"outlined\",\n    value: contactPhoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    className: classes.addTaskInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(EmailIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    variant: \"outlined\",\n    value: contactEmail,\n    onChange: e => setEmail(e.target.value),\n    className: classes.addTaskInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginLeft: '30px',\n      marginRight: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TodayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    style: {\n      width: 90,\n      marginLeft: 15,\n      background: 'rgba(171, 171, 171, 0.15)',\n      borderRadius: '5px',\n      border: 'none'\n    },\n    format: \"D.M.YYYY\",\n    value: selectedDate,\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"time-picker\",\n    options: timeSlots,\n    style: {\n      width: 90,\n      marginLeft: 15\n    },\n    disableClearable: true,\n    freeSolo: true,\n    value: selectedTime,\n    inputValue: selectedTime,\n    onInputChange: (event, newInputValue) => {\n      handleTimeChange(newInputValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(CssTextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      style: {\n        background: 'rgba(171, 171, 171, 0.15)',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.createTaskButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, \"Vytvori\\u0165\"))));\n}\nCommAddTaskDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\n\nconst getMinutes = index => {\n  if (index % 4 === 0) {\n    return '00';\n  } else if (index % 2 === 0) {\n    return '30';\n  } else if (index % 4 === 1) {\n    return '15';\n  } else {\n    return '45';\n  }\n};\n\nconst timeSlots = Array.from(new Array(10 * 4)).map((_, index) => index > 0 ? `${Math.floor(index / 4)}h${getMinutes(index)}m` : '');","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/addTaskDialogs/CommAddTaskDialog.js"],"names":["React","useState","useContext","makeStyles","withStyles","moment","PropTypes","Dialog","Button","TextField","DatePicker","MuiPickersUtilsProvider","MomentUtils","Autocomplete","TimerIcon","IconButton","CloseIcon","TodayIcon","PhoneIcon","EmailIcon","DataContext","CssTextField","root","fontFamily","paddingTop","background","styles","theme","detailTitle","color","fontWeight","fontSize","paddingBottom","marginBlockStart","marginBlockEnd","detailText","paddingLeft","closeButton","position","right","spacing","top","editButton","taskSelect","width","borderStyle","borderWidth","borderRadius","marginLeft","padding","addTaskInput","margin","createTaskButton","alignSelf","CommAddTaskDialog","props","classes","onClose","open","handleClose","val","setVal","handleStatusChange","event","target","value","taskTitle","setTaskTitle","taskDesc","setTaskDesc","contactPhoneNumber","setPhoneNumber","contactEmail","setEmail","selectedTime","handleTimeChange","selectedDate","handleDateChange","Date","taskData","weekState","setRefresh","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","handleForm","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","title","desc","date","format","email","phoneNumber","workTime","fetch","then","response","json","data","taskId","error","console","log","alert","style","backgroundColor","boxShadow","elevation","display","alignItems","flexDirection","justifyContent","marginRight","border","timeSlots","newInputValue","params","propTypes","func","isRequired","bool","getMinutes","index","Array","from","map","_","Math","floor"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,EAAqBC,uBAArB,QAAoD,sBAApD;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,SAASC,WAAT,QAA4B,8BAA5B;AAEA,MAAMC,YAAY,GAAGjB,UAAU,CAAC;AAC5BkB,EAAAA,IAAI,EAAE;AACJ,8BAA0B;AACxBC,MAAAA,UAAU,EAAE,SADY;AAExBC,MAAAA,UAAU,EAAE,CAFY;AAGxBC,MAAAA,UAAU,EAAE;AAHY;AADtB;AADsB,CAAD,CAAV,CAQlBhB,SARkB,CAArB;AAUA,MAAMiB,MAAM,GAAGvB,UAAU,CAAEwB,KAAD,KAAY;AAClCC,EAAAA,WAAW,EAAE;AACTL,IAAAA,UAAU,EAAE,SADH;AAETM,IAAAA,KAAK,EAAE,SAFE;AAGTC,IAAAA,UAAU,EAAE,KAHH;AAITC,IAAAA,QAAQ,EAAE,OAJD;AAKTC,IAAAA,aAAa,EAAE,MALN;AAMTC,IAAAA,gBAAgB,EAAE,CANT;AAOTC,IAAAA,cAAc,EAAE;AAPP,GADqB;AAUlCC,EAAAA,UAAU,EAAE;AACRZ,IAAAA,UAAU,EAAE,SADJ;AAERM,IAAAA,KAAK,EAAE,SAFC;AAGRC,IAAAA,UAAU,EAAE,KAHJ;AAIRC,IAAAA,QAAQ,EAAE,OAJF;AAKRE,IAAAA,gBAAgB,EAAE,CALV;AAMRC,IAAAA,cAAc,EAAE,CANR;AAORE,IAAAA,WAAW,EAAE;AAPL,GAVsB;AAmBlCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,CAFE;AAGTC,IAAAA,GAAG,EAAEd,KAAK,CAACa,OAAN,CAAc,GAAd,CAHI;AAITX,IAAAA,KAAK,EAAE;AAJE,GAnBqB;AAyBlCa,EAAAA,UAAU,EAAE;AACRJ,IAAAA,QAAQ,EAAE,UADF;AAERC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,CAFC;AAGRC,IAAAA,GAAG,EAAEd,KAAK,CAACa,OAAN,CAAc,GAAd,CAHG;AAIRX,IAAAA,KAAK,EAAE;AAJC,GAzBsB;AA+BlCc,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE,KADC;AAERnB,IAAAA,UAAU,EAAE,SAFJ;AAGRoB,IAAAA,WAAW,EAAC,MAHJ;AAIRC,IAAAA,WAAW,EAAE,CAJL;AAKRC,IAAAA,YAAY,EAAE,MALN;AAMRC,IAAAA,UAAU,EAAE,EANJ;AAORC,IAAAA,OAAO,EAAE,UAPD;AAQR,eAAU;AACNF,MAAAA,YAAY,EAAE,MADR;AAENtB,MAAAA,UAAU,EAAE;AAFN;AARF,GA/BsB;AA4ClCyB,EAAAA,YAAY,EAAE;AACV3B,IAAAA,UAAU,EAAE,SADF;AAEV4B,IAAAA,MAAM,EAAE,MAFE;AAGV,eAAW;AACP5B,MAAAA,UAAU,EAAE;AADL,KAHD;AAMV,eAAW;AACPA,MAAAA,UAAU,EAAE;AADL;AAND,GA5CoB;AAsDlC6B,EAAAA,gBAAgB,EAAE;AACdR,IAAAA,KAAK,EAAE,KADO;AAEdS,IAAAA,SAAS,EAAE,QAFG;AAGdF,IAAAA,MAAM,EAAE,MAHM;AAId5B,IAAAA,UAAU,EAAE,SAJE;AAKdQ,IAAAA,QAAQ,EAAE,MALI;AAMdD,IAAAA,UAAU,EAAE,KANE;AAOdD,IAAAA,KAAK,EAAE,OAPO;AAQdJ,IAAAA,UAAU,EAAE,SARE;AASd,eAAW;AACPA,MAAAA,UAAU,EAAE;AADL;AATG;AAtDgB,CAAZ,CAAD,CAAzB;AAqEA,OAAO,SAAS6B,iBAAT,CAA2BC,KAA3B,EAAkC;AACrC,QAAMC,OAAO,GAAG9B,MAAM,EAAtB;AAEA,QAAM;AAAE+B,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBH,KAA1B;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACtBF,IAAAA,OAAO;AACV,GAFD;;AAIA,QAAM,CAACG,GAAD,EAAKC,MAAL,IAAe5D,QAAQ,CAAC,IAAD,CAA7B;;AAEA,QAAM6D,kBAAkB,GAAIC,KAAD,IAAW;AAClCF,IAAAA,MAAM,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACH,GAFD;;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlE,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmE,QAAD,EAAWC,WAAX,IAA0BpE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqE,kBAAD,EAAqBC,cAArB,IAAuCtE,QAAQ,CAAC,EAAD,CAArD;AACA,QAAM,CAACuE,YAAD,EAAeC,QAAf,IAA2BxE,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACyE,YAAD,EAAeC,gBAAf,IAAmC1E,QAAQ,CAAC,OAAD,CAAjD;AACA,QAAM,CAAC2E,YAAD,EAAeC,gBAAf,IAAmC5E,QAAQ,CAAC,IAAI6E,IAAJ,EAAD,CAAjD;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAsC/E,UAAU,CAACkB,WAAD,CAAtD,CAtBqC,CAwBrC;;AACA,QAAM8D,SAAS,GAAG;AACdC,IAAAA,YAAY,EAAE;AACdC,MAAAA,QAAQ,EAAE,QADI;AAEVC,MAAAA,UAAU,EAAE;AAFF,KADA;AAKdC,IAAAA,eAAe,EAAE;AACjBF,MAAAA,QAAQ,EAAE,KADO;AAEbC,MAAAA,UAAU,EAAE;AAFC,KALH;AASdE,IAAAA,kBAAkB,EAAE;AATN,GAAlB;;AAYA,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,YAAMC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB,kBAAlB;AAAsC,oBAAU;AAAhD,SAFU;AAGnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAE/B,SADU;AAEjBgC,UAAAA,IAAI,EAAE9B,QAFW;AAGjB+B,UAAAA,IAAI,EAAE9F,MAAM,CAACuE,YAAD,CAAN,CAAqBwB,MAArB,CAA4B,YAA5B,CAHW;AAIjBC,UAAAA,KAAK,EAAE7B,YAJU;AAKjB8B,UAAAA,WAAW,EAAEhC,kBALI;AAMjBiC,UAAAA,QAAQ,EAAE7B;AANO,SAAf;AAHa,OAAvB;AAYA8B,MAAAA,KAAK,CAAC,mFAAD,EAAsFb,cAAtF,CAAL,CACKc,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI3B,UAAU,CAAC2B,IAAI,CAACC,MAAN,CAF5B;AAGH,KAhBD,CAgBE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACH;;AAED9C,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAM,IAAAA,gBAAgB,CAAC,OAAD,CAAhB;AACAE,IAAAA,gBAAgB,CAAC,IAAIC,IAAJ,EAAD,CAAhB;AACAnB,IAAAA,WAAW;AACd,GA5BD;;AA8BA,sBACI,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAE/C,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AACA,IAAA,OAAO,EAAE+C,WADT;AAEA,IAAA,IAAI,EAAED,IAFN;AAGA,IAAA,SAAS,EAAE,IAHX;AAIA,IAAA,QAAQ,EAAE,IAJV;AAKA,IAAA,UAAU,EAAE;AAAEwD,MAAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,SAAnB;AAA8BtF,QAAAA,KAAK,EAAE,OAArC;AAA8CkB,QAAAA,YAAY,EAAE,MAA5D;AAAoEE,QAAAA,OAAO,EAAE,MAA7E;AAAqFmE,QAAAA,SAAS,EAAE;AAAhG,OAAT;AAAiJC,MAAAA,SAAS,EAAE;AAA5J,KALZ;AAMA,IAAA,aAAa,EAAE;AAAEH,MAAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB;AAAT,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI;AAAM,IAAA,QAAQ,EAAE1B,CAAC,IAAID,UAAU,CAACC,CAAD,CAA/B;AAAoC,IAAA,KAAK,EAAE;AAAC6B,MAAAA,OAAO,EAAE;AAAV,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAE9D,OAAO,CAAC5B,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI,oBAAC,UAAD;AAAY,kBAAW,OAAvB;AAA+B,IAAA,SAAS,EAAE4B,OAAO,CAACnB,WAAlD;AAA+D,IAAA,OAAO,EAAEoB,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAMI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAES,SAHX;AAII,IAAA,QAAQ,EAAEuB,CAAC,IAAItB,YAAY,CAACsB,CAAC,CAACzB,MAAF,CAASC,KAAV,CAJ/B;AAKI,IAAA,SAAS,EAAET,OAAO,CAACN,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAcI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,IAAI,EAAE,CAHV;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,KAAK,EAAEkB,QALX;AAMI,IAAA,QAAQ,EAAEqB,CAAC,IAAIpB,WAAW,CAACoB,CAAC,CAACzB,MAAF,CAASC,KAAV,CAN9B;AAOI,IAAA,SAAS,EAAET,OAAO,CAACN,YAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAwBI;AAAK,IAAA,KAAK,EAAE;AAACqE,MAAAA,UAAU,EAAC,QAAZ;AAAsBD,MAAAA,OAAO,EAAE,MAA/B;AAAuCE,MAAAA,aAAa,EAAC,KAArD;AAA4DC,MAAAA,cAAc,EAAE;AAA5E,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyCE,MAAAA,cAAc,EAAE,OAAzD;AAAkExE,MAAAA,OAAO,EAAE;AAA3E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,oBADV;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAEqB,kBAHX;AAII,IAAA,QAAQ,EAAEmB,CAAC,IAAIlB,cAAc,CAACkB,CAAC,CAACzB,MAAF,CAASC,KAAV,CAJjC;AAKI,IAAA,SAAS,EAAET,OAAO,CAACN,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAYI;AAAM,IAAA,KAAK,EAAE;AAAEoE,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyCE,MAAAA,cAAc,EAAE,OAAzD;AAAkExE,MAAAA,OAAO,EAAE;AAA3E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAEuB,YAHX;AAII,IAAA,QAAQ,EAAEiB,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACzB,MAAF,CAASC,KAAV,CAJ3B;AAKI,IAAA,SAAS,EAAET,OAAO,CAACN,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAZJ,CAxBJ,eAgDI;AAAK,IAAA,KAAK,EAAE;AAACqE,MAAAA,UAAU,EAAC,QAAZ;AAAsBD,MAAAA,OAAO,EAAE,MAA/B;AAAuCE,MAAAA,aAAa,EAAC,KAArD;AAA4DC,MAAAA,cAAc,EAAE,eAA5E;AAA6FzE,MAAAA,UAAU,EAAE,MAAzG;AAAiH0E,MAAAA,WAAW,EAAE;AAA9H,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAAEJ,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyCE,MAAAA,cAAc,EAAE,OAAzD;AAAkExE,MAAAA,OAAO,EAAE;AAA3E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,cAAc,MAFlB;AAGI,IAAA,OAAO,EAAC,QAHZ;AAII,IAAA,YAAY,EAAC,UAJjB;AAKI,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAE,EAAT;AAAaI,MAAAA,UAAU,EAAE,EAAzB;AAA6BvB,MAAAA,UAAU,EAAE,2BAAzC;AAAsEsB,MAAAA,YAAY,EAAE,KAApF;AAA2F4E,MAAAA,MAAM,EAAE;AAAnG,KALX;AAMI,IAAA,MAAM,EAAC,UANX;AAOI,IAAA,KAAK,EAAE/C,YAPX;AAQI,IAAA,QAAQ,EAAEuB,IAAI,IAAItB,gBAAgB,CAACsB,IAAD,CARtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAeI;AAAM,IAAA,KAAK,EAAE;AAAEmB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyCE,MAAAA,cAAc,EAAE,OAAzD;AAAkExE,MAAAA,OAAO,EAAE;AAA3E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,YAAD;AACI,IAAA,EAAE,EAAC,aADP;AAEI,IAAA,OAAO,EAAE2E,SAFb;AAGI,IAAA,KAAK,EAAE;AAAEhF,MAAAA,KAAK,EAAE,EAAT;AAAaI,MAAAA,UAAU,EAAE;AAAzB,KAHX;AAII,IAAA,gBAAgB,MAJpB;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,KAAK,EAAE0B,YANX;AAOI,IAAA,UAAU,EAAEA,YAPhB;AAQI,IAAA,aAAa,EAAE,CAACX,KAAD,EAAQ8D,aAAR,KAA0B;AACrClD,MAAAA,gBAAgB,CAACkD,aAAD,CAAhB;AACH,KAVL;AAWI,IAAA,WAAW,EAAGC,MAAD,iBACT,oBAAC,YAAD,oBAAkBA,MAAlB;AAA0B,MAAA,OAAO,EAAC,UAAlC;AAA6C,MAAA,KAAK,EAAE;AAACrG,QAAAA,UAAU,EAAE,2BAAb;AAA0CsB,QAAAA,YAAY,EAAE;AAAxD,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAfJ,CAhDJ,eAmFI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAES,OAAO,CAACJ,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnFJ,CARJ,CAFJ,CADJ;AAwGH;AAEDE,iBAAiB,CAACyE,SAAlB,GAA8B;AAC1BtE,EAAAA,OAAO,EAAEnD,SAAS,CAAC0H,IAAV,CAAeC,UADE;AAE1BvE,EAAAA,IAAI,EAAEpD,SAAS,CAAC4H,IAAV,CAAeD;AAFK,CAA9B;;AAMA,MAAME,UAAU,GAAIC,KAAD,IAAW;AAC1B,MAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACjB,WAAO,IAAP;AACH,GAFD,MAEO,IAAKA,KAAK,GAAG,CAAR,KAAc,CAAnB,EAAuB;AAC1B,WAAO,IAAP;AACH,GAFM,MAEA,IAAKA,KAAK,GAAG,CAAR,KAAc,CAAnB,EAAuB;AAC1B,WAAO,IAAP;AACH,GAFM,MAEA;AACH,WAAO,IAAP;AACH;AACJ,CAVD;;AAYA,MAAMR,SAAS,GAAGS,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAU,KAAK,CAAf,CAAX,EAA8BE,GAA9B,CACb,CAACC,CAAD,EAAIJ,KAAJ,KAAcA,KAAK,GAAG,CAAR,GAAa,GAAEK,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAG,CAAnB,CAAsB,IAAGD,UAAU,CAACC,KAAD,CAAQ,GAA1D,GAA+D,EADhE,CAAlB","sourcesContent":["import '../../App.css';\nimport React, { useState, useContext } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\n\nimport { DataContext } from \"../../providers/DataProvider\";\n\nconst CssTextField = withStyles({\n    root: {\n      '& .MuiFilledInput-root': {\n        fontFamily: 'Poppins',\n        paddingTop: 0,\n        background: 'rgba(171, 171, 171, 0.15)'\n      },\n    },\n})(TextField);\n\nconst styles = makeStyles((theme) => ({\n    detailTitle: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '700',\n        fontSize: '1.6em',\n        paddingBottom: '15px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n    },\n    detailText: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        paddingLeft: '20px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: theme.spacing(3.5),\n        color: '#1f1f1d',\n    },\n    editButton: {\n        position: 'absolute',\n        right: theme.spacing(8),\n        top: theme.spacing(3.5),\n        color: '#2B2B28',\n    },\n    taskSelect: {\n        width: '90%',\n        background: '#FFEAC8',\n        borderStyle:'none',\n        borderWidth: 2,\n        borderRadius: '10px',\n        marginLeft: 18,\n        padding: '10px 0px',\n        \"&:focus\":{\n            borderRadius: '10px',\n            background: 'transparent',\n        },\n    },\n    addTaskInput: {\n        fontFamily: 'Poppins',\n        margin: '10px',\n        \"& label\": {\n            fontFamily: 'Poppins',\n        },\n        \"& input\": {\n            fontFamily: 'Poppins',\n        }\n    },\n    createTaskButton: {\n        width: '60%',\n        alignSelf: 'center',\n        margin: '20px',\n        fontFamily: 'Poppins',\n        fontSize: '14px',\n        fontWeight: '600',\n        color: 'white',\n        background: '#E3B04B',\n        '&:hover': {\n            background: '#ffc44f',\n        }\n    }\n}));\n\nexport function CommAddTaskDialog(props) {\n    const classes = styles();\n\n    const { onClose, open } = props;\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const [val,setVal] = useState(null);\n\n    const handleStatusChange = (event) => {\n        setVal(event.target.value);\n    };\n\n    const [taskTitle, setTaskTitle] = useState(\"\");\n    const [taskDesc, setTaskDesc] = useState(\"\");\n    const [contactPhoneNumber, setPhoneNumber] = useState(\"\");\n    const [contactEmail, setEmail] = useState(\"\");\n    const [selectedTime, handleTimeChange] = useState(\"1h30m\");\n    const [selectedDate, handleDateChange] = useState(new Date());\n\n    const { taskData, weekState, setRefresh } = useContext(DataContext);\n\n    // moves the menu below the select input\n    const menuProps = {\n        anchorOrigin: {\n        vertical: \"bottom\",\n            horizontal: \"left\"\n        },\n        transformOrigin: {\n        vertical: \"top\",\n            horizontal: \"left\"\n        },\n        getContentAnchorEl: null\n    };\n\n    const handleForm = e => {\n        e.preventDefault();\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*' },\n                body: JSON.stringify({ \n                    title: taskTitle,\n                    desc: taskDesc,\n                    date: moment(selectedDate).format(\"DD/MM/yyyy\"),\n                    email: contactEmail,\n                    phoneNumber: contactPhoneNumber,\n                    workTime: selectedTime\n                    })\n            };\n            fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/create-comm-task', requestOptions)\n                .then(response => response.json())\n                .then(data => setRefresh(data.taskId));\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setTaskTitle(\"\");\n        setTaskDesc(\"\");\n        handleTimeChange(\"1h30m\");\n        handleDateChange(new Date());\n        handleClose();\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n            \n            <Dialog\n            onClose={handleClose}\n            open={open}\n            fullWidth={true}\n            maxWidth={'xs'}\n            PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', }, elevation: 0 }}\n            BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n            >\n                <form onSubmit={e => handleForm(e)} style={{display: 'contents'}}>\n                    <h1 className={classes.detailTitle}>Vytvoriť úlohu</h1>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n\n                    <TextField\n                        label=\"Názov\"\n                        variant=\"outlined\"\n                        value={taskTitle}\n                        onChange={e => setTaskTitle(e.target.value)}\n                        className={classes.addTaskInput}\n                    />\n\n                    <TextField\n                        label=\"Popis\"\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        value={taskDesc}\n                        onChange={e => setTaskDesc(e.target.value)}\n                        className={classes.addTaskInput}\n                    />\n\n                    <div style={{alignItems:'center', display: 'flex', flexDirection:'row', justifyContent: 'space-between'}}>\n                        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                            <PhoneIcon />\n                            <TextField\n                                label=\"Tel. číslo\"\n                                variant=\"outlined\"\n                                value={contactPhoneNumber}\n                                onChange={e => setPhoneNumber(e.target.value)}\n                                className={classes.addTaskInput}\n                            />\n                        </span>\n\n                        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                            <EmailIcon />\n                            <TextField\n                                label=\"Email\"\n                                variant=\"outlined\"\n                                value={contactEmail}\n                                onChange={e => setEmail(e.target.value)}\n                                className={classes.addTaskInput}\n                            />\n                        </span>\n                    </div>\n\n                    <div style={{alignItems:'center', display: 'flex', flexDirection:'row', justifyContent: 'space-between', marginLeft: '30px', marginRight: '30px'}}>\n                        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                            <TodayIcon />\n                            <DatePicker\n                                autoOk\n                                disableToolbar\n                                variant=\"inline\"\n                                inputVariant=\"outlined\"\n                                style={{ width: 90, marginLeft: 15, background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px', border: 'none' }}\n                                format=\"D.M.YYYY\"\n                                value={selectedDate}\n                                onChange={date => handleDateChange(date)}\n                            />\n                        </span>\n\n                        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                            <TimerIcon />\n                            <Autocomplete\n                                id=\"time-picker\"\n                                options={timeSlots}\n                                style={{ width: 90, marginLeft: 15 }}\n                                disableClearable\n                                freeSolo\n                                value={selectedTime}\n                                inputValue={selectedTime}\n                                onInputChange={(event, newInputValue) => {\n                                    handleTimeChange(newInputValue);\n                                }}\n                                renderInput={(params) => (\n                                    <CssTextField {...params} variant=\"outlined\" style={{background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px'}} />\n                                )}\n                            />\n                        </span>\n                    </div>\n\n                    <Button type=\"submit\" className={classes.createTaskButton}>\n                        Vytvoriť\n                    </Button>\n                \n                </form>\n            </Dialog>\n            \n        </MuiPickersUtilsProvider>\n        \n    );\n}\n\nCommAddTaskDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};\n\n\nconst getMinutes = (index) => {\n    if (index % 4 === 0) {\n        return '00'\n    } else if ( index % 2 === 0 ) {\n        return '30'\n    } else if ( index % 4 === 1 ) {\n        return '15'\n    } else {\n        return '45'\n    }\n}\n\nconst timeSlots = Array.from(new Array(10 * 4)).map(\n     (_, index) => index > 0 ? `${Math.floor(index / 4)}h${getMinutes(index)}m` : ''\n  );"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/editModeDialogs/MeetEditDialog.js\";\nimport '../../App.css';\nimport React, { useState, useContext } from 'react';\nimport { styles } from '../css/dialog.sass';\nimport { GetTaskStatusData } from '../../taskBubble/TaskStatusData';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { FormatAlignLeftIcon, IconButton, CloseIcon, FlagIcon, PlaceIcon, ScheduleIcon, TimerIcon, DeleteIcon, TodayIcon } from '../../imports/icons';\nimport { DataContext } from \"../../providers/DataProvider\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport { renderTaskStatusBubble, menuProps } from '../../const/dialogConsts';\nexport function MeetEditDialog(props) {\n  const classes = styles();\n  const {\n    onClose,\n    selectedTask,\n    open\n  } = props;\n  const {\n    setRefresh\n  } = useContext(DataContext);\n  const user = useContext(UserContext);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const taskStatusData = GetTaskStatusData(selectedTask.status);\n\n  const handleStatusChange = event => {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          token: user.uid,\n          collection: \"meeting_tasks\",\n          taskId: selectedTask.id,\n          status: event.target.value\n        })\n      };\n      fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions).then(response => response.json()).then(data => setRefresh(data.taskId));\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    selectedTask.status = event.target.value;\n  };\n\n  const [titleState, setTitle] = useState('');\n  const [descState, setDesc] = useState('');\n  const [workTimeState, setWorkTime] = useState('');\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [taskAddress, setAddress] = useState(\"\");\n  var workTime = moment.duration(moment(selectedTask.endTime, \"HH:mm\").diff(moment(selectedTask.startTime, \"HH:mm\")));\n\n  async function updateTask() {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          token: user.uid,\n          taskId: selectedTask.id,\n          title: selectedTask.title,\n          desc: selectedTask.desc,\n          date: moment(selectedDate).format(\"DD/MM/yyy\"),\n          status: selectedTask.status,\n          address: selectedTask.address,\n          startTime: selectedTask.startTime,\n          endTime: selectedTask.endTime,\n          category: \"\"\n        })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-meeting-task', requestOptions).then(response => response);\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setRefresh(selectedTask.id);\n    handleClose();\n  }\n\n  ;\n\n  async function deleteTask() {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          taskId: selectedTask.id,\n          token: user.uid\n        })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/delete-meeting-task', requestOptions).then(response => response);\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setRefresh(selectedTask.id);\n    handleClose();\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)',\n        transition: 'all 1s'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"70%\"\n    },\n    className: classes.taskTitleInput,\n    value: selectedTask.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"edit\",\n    className: classes.editButton,\n    onClick: () => {\n      deleteTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    style: {\n      color: '#c45a5a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disableUnderline: true,\n    classes: {\n      root: classes.taskSelect\n    },\n    MenuProps: menuProps,\n    value: taskStatusData.id,\n    onChange: handleStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('done'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"in_progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('in_progress'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"not_done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('not_done')))))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    style: {\n      width: \"70%\"\n    },\n    className: classes.taskDescInput,\n    value: descState,\n    onChange: e => setDesc(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PlaceIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n    selectProps: {\n      styles: {\n        control: (provider, state) => ({ ...provider,\n          background: 'none',\n          fontFamily: 'Poppins',\n          width: '97.8%',\n          height: '3.8em',\n          borderColor: 'rgba(0, 0, 0, 0.23)',\n          \"&:hover\": {\n            borderColor: state.isFocused ? \"-webkit-focus-ring-color\" : \"black\"\n          }\n        }),\n        container: provided => ({ ...provided,\n          width: '100%',\n          marginLeft: '10px'\n        }),\n        input: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        option: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        menu: provided => ({ ...provided,\n          width: '97.8%'\n        }),\n        singleValue: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        dropdownIndicator: provider => ({ ...provider,\n          color: 'rgba(0, 0, 0, 0.23)'\n        }),\n        indicatorSeparator: provider => ({ ...provider,\n          color: 'rgba(0, 0, 0, 0.23)'\n        })\n      },\n      taskAddress,\n      onChange: setAddress\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ScheduleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, selectedTask.startTime, \" - \", selectedTask.endTime)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, parseInt(workTime.asHours()), \"h\", parseInt(workTime.asMinutes()) % 60, \"m\")), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TodayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    style: {\n      width: 90,\n      marginLeft: 10,\n      background: 'rgba(171, 171, 171, 0.15)',\n      borderRadius: '5px',\n      border: 'none'\n    },\n    format: \"D.M.YYYY\",\n    value: selectedDate,\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.updateTaskButton,\n    onClick: () => {\n      updateTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, \"Aktualizova\\u0165\")));\n}\nMeetEditDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedTask: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/editModeDialogs/MeetEditDialog.js"],"names":["React","useState","useContext","styles","GetTaskStatusData","moment","PropTypes","Button","Select","MenuItem","FormControl","TextField","DatePicker","GooglePlacesAutocomplete","FormatAlignLeftIcon","IconButton","CloseIcon","FlagIcon","PlaceIcon","ScheduleIcon","TimerIcon","DeleteIcon","TodayIcon","DataContext","UserContext","renderTaskStatusBubble","menuProps","MeetEditDialog","props","classes","onClose","selectedTask","open","setRefresh","user","handleClose","taskStatusData","status","handleStatusChange","event","requestOptions","method","headers","localStorage","getItem","body","JSON","stringify","token","uid","collection","taskId","id","target","value","fetch","then","response","json","data","error","console","log","alert","titleState","setTitle","descState","setDesc","workTimeState","setWorkTime","selectedDate","handleDateChange","Date","taskAddress","setAddress","workTime","duration","endTime","diff","startTime","updateTask","title","desc","date","format","address","category","deleteTask","style","backgroundColor","color","borderRadius","padding","boxShadow","transition","elevation","width","taskTitleInput","editButton","closeButton","display","alignItems","justifyContent","paddingTop","root","taskSelect","taskDescInput","e","control","provider","state","background","fontFamily","height","borderColor","isFocused","container","provided","marginLeft","input","option","menu","singleValue","dropdownIndicator","indicatorSeparator","onChange","detailText","parseInt","asHours","asMinutes","border","updateTaskButton","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["import '../../App.css';\nimport React, { useState, useContext } from 'react';\nimport { styles } from '../css/dialog.sass';\nimport { GetTaskStatusData } from '../../taskBubble/TaskStatusData';\nimport moment from 'moment';\n\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\n\nimport { \n    FormatAlignLeftIcon,\n    IconButton,\n    CloseIcon,\n    FlagIcon,\n    PlaceIcon,\n    ScheduleIcon,\n    TimerIcon,\n    DeleteIcon,\n    TodayIcon\n} from '../../imports/icons';\n\nimport { DataContext } from \"../../providers/DataProvider\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport { renderTaskStatusBubble, menuProps } from '../../const/dialogConsts';\n\nexport function MeetEditDialog(props) {\n\n    const classes = styles();\n\n    const { onClose, selectedTask, open } = props;\n    const { setRefresh } = useContext(DataContext);\n    const user = useContext(UserContext);\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const taskStatusData = GetTaskStatusData(selectedTask.status);\n\n    const handleStatusChange = (event) => {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ \n                    token: user.uid,\n                    collection: \"meeting_tasks\",\n                    taskId: selectedTask.id,\n                    status: event.target.value,\n                    })\n            };\n            fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions)\n                .then(response => response.json())\n                .then(data => setRefresh(data.taskId));\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n        selectedTask.status = event.target.value;\n    };\n\n    const [titleState, setTitle] = useState('');\n    const [descState, setDesc] = useState('');\n    const [workTimeState, setWorkTime] = useState('');\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [taskAddress, setAddress] = useState(\"\");\n    \n    var workTime = moment.duration(moment(selectedTask.endTime, \"HH:mm\").diff(moment(selectedTask.startTime, \"HH:mm\")));\n\n    async function updateTask() {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ \n                    token: user.uid,\n                    taskId: selectedTask.id,\n                    title: selectedTask.title,\n                    desc: selectedTask.desc,\n                    date: moment(selectedDate).format(\"DD/MM/yyy\"),\n                    status: selectedTask.status,\n                    address: selectedTask.address,\n                    startTime: selectedTask.startTime,\n                    endTime: selectedTask.endTime,\n                    category: \"\",\n                })\n            };\n            await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-meeting-task', requestOptions)\n            .then(response => response);\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setRefresh(selectedTask.id);\n        handleClose();\n    };\n\n    async function deleteTask() {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ taskId: selectedTask.id, token: user.uid })\n            };\n            await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/delete-meeting-task', requestOptions)\n            .then(response => response);\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setRefresh(selectedTask.id);\n        handleClose();\n    };\n\n    return (\n            <Dialog\n                onClose={handleClose}\n                open={open}\n                fullWidth={true}\n                maxWidth={'xs'}\n                PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', transition: 'all 1s'}, elevation: 0 }}\n                BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n            >\n                <div>\n                    <TextField style={{width: \"70%\"}} className={classes.taskTitleInput} value={selectedTask.title}/>\n\n                    <IconButton aria-label=\"edit\" className={classes.editButton} onClick={() => {deleteTask()}}>\n                        <DeleteIcon style={{color: '#c45a5a'}}/>\n                    </IconButton>\n                    \n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n\n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                        <FlagIcon style={{ paddingTop: '2px' }} />\n                        <FormControl>\n                            <Select\n                                disableUnderline\n                                classes={{ root: classes.taskSelect }}\n                                MenuProps={menuProps}\n                                value={taskStatusData.id}\n                                onChange={handleStatusChange}\n                            >\n                                <MenuItem value={\"done\"}>{renderTaskStatusBubble(GetTaskStatusData('done'))}</MenuItem>\n                                <MenuItem value={\"in_progress\"}>{renderTaskStatusBubble(GetTaskStatusData('in_progress'))}</MenuItem>\n                                <MenuItem value={\"not_done\"}>{renderTaskStatusBubble(GetTaskStatusData('not_done'))}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </span>\n\n                    <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                        <FormatAlignLeftIcon style={{ paddingTop: '2px' }} />\n                        <TextField multiline style={{width: \"70%\"}} className={classes.taskDescInput} value={descState} onChange={e => setDesc(e.target.value)}/>\n                    </span>\n                    \n                    <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                        <PlaceIcon />\n                        <GooglePlacesAutocomplete\n                            selectProps={{\n                                styles: {\n                                    control: (provider, state) => ({\n                                        ...provider,\n                                        background: 'none',\n                                        fontFamily: 'Poppins',\n                                        width: '97.8%',\n                                        height: '3.8em',\n                                        borderColor: 'rgba(0, 0, 0, 0.23)',\n                                        \"&:hover\": {\n                                            borderColor: state.isFocused ? \"-webkit-focus-ring-color\" : \"black\"\n                                        }\n                                    }),\n                                    container: (provided) => ({\n                                        ...provided,\n                                        width: '100%',\n                                        marginLeft: '10px',\n                                    }),\n                                    input: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    option: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    menu: (provided) => ({\n                                        ...provided,\n                                        width: '97.8%',\n                                    }),\n                                    singleValue: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    dropdownIndicator: (provider) => ({\n                                        ...provider,\n                                        color: 'rgba(0, 0, 0, 0.23)',\n                                    }),\n                                    indicatorSeparator: (provider) => ({\n                                        ...provider,\n                                        color: 'rgba(0, 0, 0, 0.23)',\n                                    }),\n                                },\n                                taskAddress,\n                                onChange: setAddress,\n                            }}\n                        />\n                    </span>\n\n                    <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                        <ScheduleIcon />\n                        <h3 className={classes.detailText}>\n                            {selectedTask.startTime} - {selectedTask.endTime}\n                        </h3>\n                    </span>\n\n                    <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                        <TimerIcon />\n                        <h3 className={classes.detailText}>\n                            {parseInt(workTime.asHours())}h{parseInt(workTime.asMinutes())%60}m\n                        </h3>\n                    </span>\n                    \n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                        <TodayIcon />\n                        <DatePicker\n                            autoOk\n                            disableToolbar\n                            variant=\"inline\"\n                            inputVariant=\"outlined\"\n                            style={{ width: 90, marginLeft: 10, background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px', border: 'none' }}\n                            format=\"D.M.YYYY\"\n                            value={selectedDate}\n                            onChange={date => handleDateChange(date)}\n                        />\n                    </span>\n\n                    <Button className={classes.updateTaskButton} onClick={() => {updateTask()}}>\n                        Aktualizovať\n                    </Button>\n                </div>\n            </Dialog>\n        \n    );\n}\n\nMeetEditDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedTask: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/WorkTaskBubble.js\";\nimport { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { DetailDialog } from '../dialogWindows/DetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from '@material-ui/icons/Timer';\nexport function WorkTaskBubble(date) {\n  const classes = useStyles();\n  let filteredData = []; //filter tasks by specified type\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: '-1',\n    title: 'Test',\n    desc: 'Test',\n    workTime: '100h',\n    status: 'not_done'\n  });\n\n  const handleClickOpen = task => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Pr\\xE1zdne\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: `${moment(date).unix()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      className: classes.taskBubble,\n      style: {\n        backgroundColor: GetTaskStatusData(item.status).color\n      },\n      onClick: () => handleClickOpen(item),\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n      style: {\n        marginRight: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }\n    }, item.workTime))))), provided.placeholder))), /*#__PURE__*/React.createElement(DetailDialog, {\n      onClose: handleClose,\n      open: open,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/WorkTaskBubble.js"],"names":["useStyles","React","useState","GetTaskStatusData","DetailDialog","Box","moment","DragDropContext","Droppable","Draggable","TimerIcon","WorkTaskBubble","date","classes","filteredData","open","setOpen","selectedTask","setSelectedTask","id","title","desc","workTime","status","handleClickOpen","task","handleClose","undefined","length","justifyContent","height","textAlign","paddingTop","color","fontFamily","fontSize","fontWeight","unix","provided","droppableProps","innerRef","map","item","index","draggableProps","dragHandleProps","taskBubble","backgroundColor","bubbleTitle","marginRight","bubbleWorkTime","placeholder"],"mappings":"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","sourcesContent":["import { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { DetailDialog } from '../dialogWindows/DetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\n\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from '@material-ui/icons/Timer';\n\n\nexport function WorkTaskBubble(date) {\n  const classes = useStyles();\n\n  let filteredData = []; //filter tasks by specified type\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({ id: '-1', title: 'Test', desc: 'Test', workTime: '100h', status: 'not_done' });\n\n  const handleClickOpen = (task) => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return (\n      <div style={{ justifyContent: \"center\", height: \"100%\" }}>\n        <h3 style={{ textAlign: \"center\", paddingTop: \"18px\", color: \"#bdbdbd\", fontFamily: \"Poppins\", fontSize: \"18px\", fontWeight: \"500\" }}>\n          PrÃ¡zdne\n        </h3>\n      </div>\n    )\n\n  } else {\n    return (\n      <div>\n        <DragDropContext>\n          <Droppable droppableId={`${moment(date).unix()}`}>\n            {(provided) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {filteredData.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index} >\n                    {(provided) => (\n                      <div {...provided.draggableProps} {...provided.dragHandleProps}>\n                        <Box className={classes.taskBubble} style={{ backgroundColor: GetTaskStatusData(item.status).color }} onClick={() => handleClickOpen(item)} ref={provided.innerRef}>\n                          <Box flexGrow={1}>\n                            <h3 className={classes.bubbleTitle}>{item.title}</h3>\n                          </Box>\n                          <TimerIcon style={{ marginRight: '5px' }} />\n                          <h3 className={classes.bubbleWorkTime}>{item.workTime}</h3>\n                        </Box>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <DetailDialog onClose={handleClose} open={open} selectedTask={selectedTask} />\n      </div>\n    )\n  }\n};"]},"metadata":{},"sourceType":"module"}
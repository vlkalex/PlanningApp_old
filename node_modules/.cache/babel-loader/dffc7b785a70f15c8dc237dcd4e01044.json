{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/WorkDetailDialog.js\";\nimport '../App.css';\nimport React, { useState, useContext } from 'react';\nimport './css/dialog.sass';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\nimport moment from 'moment';\nimport { WorkEditDialog } from './editModeDialogs/WorkEditDialog';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport { renderTaskStatusBubble, menuProps } from '../const/dialogConsts';\nimport { FormatAlignLeftIcon, IconButton, DeleteIcon, CreateIcon, CloseIcon, FlagIcon, TimerIcon, TodayIcon } from '../imports/icons';\nimport { DataContext } from \"../providers/DataProvider\";\nimport { UserContext } from \"../providers/UserProvider\";\nexport function WorkDetailDialog(props) {\n  const {\n    onClose,\n    selectedTask,\n    open\n  } = props;\n  const {\n    setRefresh\n  } = useContext(DataContext);\n  const user = useContext(UserContext);\n  const taskStatusData = GetTaskStatusData(selectedTask.status);\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleClickOpenEdit = () => {\n    setOpenEdit(true);\n  };\n\n  const handleCloseEdit = () => {\n    setOpenEdit(false);\n  };\n\n  const handleStatusChange = event => {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          collection: \"work_tasks\",\n          token: user.uid,\n          taskId: selectedTask.id,\n          status: event.target.value\n        })\n      };\n      fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions).then(response => response.json()).then(data => setRefresh(data.taskId));\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    selectedTask.status = event.target.value;\n  };\n\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"detail-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, selectedTask.title), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"edit\",\n    className: \"edit-button\",\n    onClick: () => {\n      handleClose();\n      handleClickOpenEdit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CreateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: \"close-button\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disableUnderline: true,\n    classes: {\n      root: \"task-select\"\n    },\n    MenuProps: menuProps,\n    value: taskStatusData.id,\n    onChange: handleStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('done'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"in_progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('in_progress'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"not_done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('not_done')))))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"detail-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, selectedTask.desc)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"detail-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, selectedTask.workTime))), /*#__PURE__*/React.createElement(WorkEditDialog, {\n    onClose: handleCloseEdit,\n    open: openEdit,\n    selectedTask: selectedTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }));\n}\nWorkDetailDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedTask: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/WorkDetailDialog.js"],"names":["React","useState","useContext","GetTaskStatusData","moment","WorkEditDialog","PropTypes","Dialog","Button","Select","MenuItem","FormControl","TextField","DatePicker","MuiPickersUtilsProvider","MomentUtils","renderTaskStatusBubble","menuProps","FormatAlignLeftIcon","IconButton","DeleteIcon","CreateIcon","CloseIcon","FlagIcon","TimerIcon","TodayIcon","DataContext","UserContext","WorkDetailDialog","props","onClose","selectedTask","open","setRefresh","user","taskStatusData","status","openEdit","setOpenEdit","handleClose","handleClickOpenEdit","handleCloseEdit","handleStatusChange","event","requestOptions","method","headers","localStorage","getItem","body","JSON","stringify","collection","token","uid","taskId","id","target","value","fetch","then","response","json","data","error","console","log","alert","style","backgroundColor","color","borderRadius","padding","boxShadow","elevation","title","display","alignItems","justifyContent","paddingTop","root","desc","workTime","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React, { useState, useContext } from 'react';\nimport './css/dialog.sass';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\nimport moment from 'moment';\n\nimport { WorkEditDialog } from './editModeDialogs/WorkEditDialog';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button'\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport { renderTaskStatusBubble, menuProps } from '../const/dialogConsts';\n\nimport { \n    FormatAlignLeftIcon,\n    IconButton,\n    DeleteIcon,\n    CreateIcon,\n    CloseIcon,\n    FlagIcon,\n    TimerIcon,\n    TodayIcon\n} from '../imports/icons';\n\nimport { DataContext } from \"../providers/DataProvider\";\nimport { UserContext } from \"../providers/UserProvider\";\n\n\nexport function WorkDetailDialog(props) {\n    const { onClose, selectedTask, open } = props;\n    const { setRefresh } = useContext(DataContext);\n    const user = useContext(UserContext);\n\n    const taskStatusData = GetTaskStatusData(selectedTask.status);\n\n    const [openEdit, setOpenEdit] = useState(false);\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const handleClickOpenEdit = () => {\n        setOpenEdit(true);\n    };\n\n    const handleCloseEdit = () => {\n        setOpenEdit(false);\n    };\n\n    const handleStatusChange = (event) => {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ \n                    collection: \"work_tasks\",\n                    token: user.uid,\n                    taskId: selectedTask.id,\n                    status: event.target.value,\n                    })\n            };\n            fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions)\n                .then(response => response.json())\n                .then(data => setRefresh(data.taskId));\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n        selectedTask.status = event.target.value;\n    };\n\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n            <Dialog\n                onClose={handleClose}\n                open={open}\n                fullWidth={true}\n                maxWidth={'xs'}\n                PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', }, elevation: 0 }}\n                BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n            >\n                <h1 className=\"detail-title\">{selectedTask.title}</h1>\n                \n                <IconButton aria-label=\"edit\" className=\"edit-button\" onClick={() => {handleClose();handleClickOpenEdit()}}>\n                    <CreateIcon />\n                </IconButton>\n            \n                <IconButton aria-label=\"close\" className=\"close-button\" onClick={handleClose}>\n                    <CloseIcon />\n                </IconButton>\n\n                <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                    <FlagIcon style={{ paddingTop: '2px' }} />\n                    <FormControl>\n                        <Select\n                            disableUnderline\n                            classes={{ root: \"task-select\" }}\n                            MenuProps={menuProps}\n                            value={taskStatusData.id}\n                            onChange={handleStatusChange}\n                        >\n                            <MenuItem value={\"done\"}>{renderTaskStatusBubble(GetTaskStatusData('done'))}</MenuItem>\n                            <MenuItem value={\"in_progress\"}>{renderTaskStatusBubble(GetTaskStatusData('in_progress'))}</MenuItem>\n                            <MenuItem value={\"not_done\"}>{renderTaskStatusBubble(GetTaskStatusData('not_done'))}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </span>\n\n                <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                    <FormatAlignLeftIcon style={{ paddingTop: '2px' }} />\n                    <h3 className=\"detail-text\">\n                        {selectedTask.desc}\n                    </h3>\n                </span>\n\n                <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                    <TimerIcon />\n                    <h3 className=\"detail-text\">\n                        {selectedTask.workTime}\n                    </h3>\n                </span>\n            </Dialog>\n            <WorkEditDialog onClose={handleCloseEdit} open={openEdit} selectedTask={selectedTask} />\n        </MuiPickersUtilsProvider>\n    );\n}\n\nWorkDetailDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedTask: PropTypes.object.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
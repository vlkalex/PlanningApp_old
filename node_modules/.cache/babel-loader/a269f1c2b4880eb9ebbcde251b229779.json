{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/MeetTaskBubble.js\";\nimport { useStyles } from \"../App\";\nimport \"../App.css\";\nimport React, { useContext } from \"react\";\nimport { GetTaskStatusData } from \"./TaskStatusData\";\nimport { MeetDetailDialog } from \"../dialogWindows/MeetDetailDialog\";\nimport Box from \"@material-ui/core/Box\";\nimport moment from \"moment\";\nimport \"moment/locale/sk\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport PlaceIcon from \"@material-ui/icons/Place\";\nimport { DataContext } from \"../providers/DataProvider\";\nexport function MeetTaskBubble(date) {\n  const classes = useStyles();\n  const {\n    taskData\n  } = useContext(DataContext);\n  let filteredData = [];\n\n  if (taskData.meetingTasks !== undefined) {\n    filteredData = taskData.meetingTasks.filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: \"-1\",\n    title: \"Test\",\n    desc: \"Test\",\n    workTime: \"100h\",\n    status: \"not_done\",\n    startTime: \"\",\n    endTime: \"\"\n  });\n\n  const handleClickOpen = task => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: moment(date).unix() + 'm',\n      type: \"MEET\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Pr\\xE1zdne\"), provided.placeholder)));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: moment(date).unix() + 'm',\n      type: \"MEET\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: {\n        marginBottom: '1em',\n        ...provided.draggableProps.style\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskBubble,\n      style: {\n        backgroundColor: GetTaskStatusData(item.status).color,\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      onClick: () => handleClickOpen(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(ScheduleIcon, {\n      style: {\n        marginRight: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }\n    }, item.startTime, \" - \", item.endTime)), item.address !== \"\" ? /*#__PURE__*/React.createElement(Box, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        justifyContent: \"flex-end\",\n        marginTop: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(PlaceIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, item.address)) : \"\")))), provided.placeholder)), /*#__PURE__*/React.createElement(MeetDetailDialog, {\n      onClose: handleClose,\n      open: open,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/MeetTaskBubble.js"],"names":["useStyles","React","useContext","GetTaskStatusData","MeetDetailDialog","Box","moment","Droppable","Draggable","ScheduleIcon","PlaceIcon","DataContext","MeetTaskBubble","date","classes","taskData","filteredData","meetingTasks","undefined","filter","task","includes","format","open","setOpen","useState","selectedTask","setSelectedTask","id","title","desc","workTime","status","startTime","endTime","handleClickOpen","handleClose","length","justifyContent","height","unix","provided","droppableProps","innerRef","textAlign","paddingTop","color","fontFamily","fontSize","fontWeight","placeholder","map","item","index","draggableProps","dragHandleProps","marginBottom","style","taskBubble","backgroundColor","display","flexDirection","width","bubbleTitle","marginRight","bubbleWorkTime","address","marginTop"],"mappings":"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","sourcesContent":["import { useStyles } from \"../App\";\nimport \"../App.css\";\nimport React, { useContext } from \"react\";\nimport { GetTaskStatusData } from \"./TaskStatusData\";\nimport { MeetDetailDialog } from \"../dialogWindows/MeetDetailDialog\";\nimport Box from \"@material-ui/core/Box\";\nimport moment from \"moment\";\nimport \"moment/locale/sk\";\n\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport PlaceIcon from \"@material-ui/icons/Place\";\n\nimport { DataContext } from \"../providers/DataProvider\";\n\nexport function MeetTaskBubble(date) {\n  const classes = useStyles();\n\n  const { taskData } = useContext(DataContext);\n\n  let filteredData = [];\n\n  if (taskData.meetingTasks !== undefined) {\n    filteredData = taskData.meetingTasks.filter((task) =>\n      task.date.includes(moment(date).format(\"DD/MM/yyyy\"))\n    ); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: \"-1\",\n    title: \"Test\",\n    desc: \"Test\",\n    workTime: \"100h\",\n    status: \"not_done\",\n    startTime: \"\",\n    endTime: \"\",\n  });\n\n  const handleClickOpen = (task) => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return (\n      <div style={{ justifyContent: \"center\", height: \"100%\" }}>\n        <Droppable droppableId={moment(date).unix() + 'm'} type=\"MEET\">\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            <h3\n              style={{\n                textAlign: \"center\",\n                paddingTop: \"18px\",\n                color: \"#bdbdbd\",\n                fontFamily: \"Poppins\",\n                fontSize: \"18px\",\n                fontWeight: \"500\",\n              }}\n            >\n              Prázdne\n            </h3>\n            {provided.placeholder}\n          </div>\n        )}\n        </Droppable>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Droppable droppableId={moment(date).unix() + 'm'} type=\"MEET\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {filteredData.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        marginBottom: '1em',\n                        ...provided.draggableProps.style\n                      }}\n                    >\n                      <div\n                        className={classes.taskBubble}\n                        style={{\n                          backgroundColor: GetTaskStatusData(item.status).color,\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                        }}\n                        onClick={() => handleClickOpen(item)}\n                      >\n                        <Box\n                          style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            width: \"100%\",\n                          }}\n                        >\n                          <Box flexGrow={1}>\n                            <h3 className={classes.bubbleTitle}>\n                              {item.title}\n                            </h3>\n                          </Box>\n                          <ScheduleIcon style={{ marginRight: \"5px\" }} />\n                          <h3 className={classes.bubbleWorkTime}>\n                            {item.startTime} - {item.endTime}\n                          </h3>\n                        </Box>\n                        {item.address !== \"\" ? (\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              width: \"100%\",\n                              justifyContent: \"flex-end\",\n                              marginTop: \"5px\",\n                            }}\n                          >\n                            <PlaceIcon />\n                            <h3 className={classes.bubbleWorkTime}>\n                              {item.address}\n                            </h3>\n                          </Box>\n                        ) : (\n                          \"\"\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        <MeetDetailDialog\n          onClose={handleClose}\n          open={open}\n          selectedTask={selectedTask}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
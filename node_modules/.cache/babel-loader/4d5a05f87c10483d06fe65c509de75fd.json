{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/WeekProvider.tsx\";\nimport moment from 'moment';\nimport React, { createContext, useState } from 'react';\nimport { getISOWeekDates } from '../helpers';\nexport const WeekContext = createContext({\n  currWeekInt: moment().week(),\n  setWeekInt: week => {},\n  currWeek: getISOWeekDates(moment().week()).timestamps,\n  setWeek: week => {}\n});\n\nfunction WeekProvider(props) {\n  const [currWeek, setCurrWeek] = useState(getISOWeekDates(moment().week()).timestamps);\n  const [currWeekInt, setCurrWeekInt] = useState(moment().week());\n\n  const setWeek = week => {\n    return setCurrWeek(week);\n  };\n\n  return /*#__PURE__*/React.createElement(WeekContext.Provider, {\n    value: {\n      currWeekInt,\n      setWeekInt: weekInt => {\n        setCurrWeek(getISOWeekDates(weekInt).timestamps);\n        return setCurrWeekInt(weekInt);\n      },\n      currWeek,\n      setWeek\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nexport default WeekProvider;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/WeekProvider.tsx"],"names":["moment","React","createContext","useState","getISOWeekDates","WeekContext","currWeekInt","week","setWeekInt","currWeek","timestamps","setWeek","WeekProvider","props","setCurrWeek","setCurrWeekInt","weekInt","children"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,eAAT,QAAgC,YAAhC;AAEA,OAAO,MAAMC,WAAW,GAAGH,aAAa,CAAC;AACvCI,EAAAA,WAAW,EAAEN,MAAM,GAAGO,IAAT,EAD0B;AAEvCC,EAAAA,UAAU,EAAGD,IAAD,IAAkB,CAAE,CAFO;AAGvCE,EAAAA,QAAQ,EAAEL,eAAe,CAACJ,MAAM,GAAGO,IAAT,EAAD,CAAf,CAAiCG,UAHJ;AAIvCC,EAAAA,OAAO,EAAGJ,IAAD,IAAoB,CAAE;AAJQ,CAAD,CAAjC;;AAOP,SAASK,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM,CAACJ,QAAD,EAAWK,WAAX,IAA0BX,QAAQ,CACtCC,eAAe,CAACJ,MAAM,GAAGO,IAAT,EAAD,CAAf,CAAiCG,UADK,CAAxC;AAIA,QAAM,CAACJ,WAAD,EAAcS,cAAd,IAAgCZ,QAAQ,CAACH,MAAM,GAAGO,IAAT,EAAD,CAA9C;;AAEA,QAAMI,OAAO,GAAIJ,IAAD,IAAoB;AAClC,WAAOO,WAAW,CAACP,IAAD,CAAlB;AACD,GAFD;;AAIA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,WADK;AAELE,MAAAA,UAAU,EAAGQ,OAAD,IAAa;AACvBF,QAAAA,WAAW,CAACV,eAAe,CAACY,OAAD,CAAf,CAAyBN,UAA1B,CAAX;AACA,eAAOK,cAAc,CAACC,OAAD,CAArB;AACD,OALI;AAMLP,MAAAA,QANK;AAOLE,MAAAA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGE,KAAK,CAACI,QAXT,CADF;AAeD;;AAED,eAAeL,YAAf","sourcesContent":["import moment from 'moment';\nimport React, { createContext, useState } from 'react';\nimport { getISOWeekDates } from '../helpers';\n\nexport const WeekContext = createContext({\n  currWeekInt: moment().week(),\n  setWeekInt: (week: number) => {},\n  currWeek: getISOWeekDates(moment().week()).timestamps,\n  setWeek: (week: number[]) => {}\n});\n\nfunction WeekProvider(props) {\n  const [currWeek, setCurrWeek] = useState(\n    getISOWeekDates(moment().week()).timestamps\n  );\n\n  const [currWeekInt, setCurrWeekInt] = useState(moment().week());\n\n  const setWeek = (week: number[]) => {\n    return setCurrWeek(week);\n  };\n\n  return (\n    <WeekContext.Provider\n      value={{\n        currWeekInt,\n        setWeekInt: (weekInt) => {\n          setCurrWeek(getISOWeekDates(weekInt).timestamps);\n          return setCurrWeekInt(weekInt);\n        },\n        currWeek,\n        setWeek\n      }}\n    >\n      {props.children}\n    </WeekContext.Provider>\n  );\n}\n\nexport default WeekProvider;\n"]},"metadata":{},"sourceType":"module"}
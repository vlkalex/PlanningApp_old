{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/MeetTaskBubble.js\";\nimport { useStyles } from '../App';\nimport '../App.css';\nimport React, { useContext } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { MeetDetailDialog } from '../dialogWindows/MeetDetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport { DataContext } from \"../providers/DataProvider\";\nimport { MeetEditDialog } from '../dialogWindows/editModeDialogs/MeetEditDialog';\nexport function MeetTaskBubble(date) {\n  const classes = useStyles();\n  const {\n    taskData\n  } = useContext(DataContext);\n  let filteredData = [];\n\n  if (taskData.meetingTasks !== undefined) {\n    filteredData = taskData.meetingTasks.filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: '-1',\n    title: 'Test',\n    desc: 'Test',\n    workTime: '100h',\n    status: 'not_done',\n    startTime: '',\n    endTime: ''\n  });\n\n  const handleClickOpen = task => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Pr\\xE1zdne\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: `${moment(date).unix()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      className: classes.taskBubble,\n      style: {\n        backgroundColor: GetTaskStatusData(item.status).color,\n        display: 'flex',\n        flexDirection: 'column',\n        transition: 'background-color 1s'\n      },\n      onClick: () => handleClickOpen(item),\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 31\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(ScheduleIcon, {\n      style: {\n        marginRight: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, item.startTime, \" - \", item.endTime)), item.address !== \"\" ? /*#__PURE__*/React.createElement(Box, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: '100%',\n        justifyContent: 'flex-end',\n        marginTop: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(PlaceIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, item.address)) : \"\")))), provided.placeholder))), /*#__PURE__*/React.createElement(MeetDetailDialog, {\n      onClose: handleClose,\n      open: open,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/MeetTaskBubble.js"],"names":["useStyles","React","useContext","GetTaskStatusData","MeetDetailDialog","Box","moment","DragDropContext","Droppable","Draggable","ScheduleIcon","PlaceIcon","DataContext","MeetEditDialog","MeetTaskBubble","date","classes","taskData","filteredData","meetingTasks","undefined","filter","task","includes","format","open","setOpen","useState","selectedTask","setSelectedTask","id","title","desc","workTime","status","startTime","endTime","handleClickOpen","handleClose","length","justifyContent","height","textAlign","paddingTop","color","fontFamily","fontSize","fontWeight","unix","provided","droppableProps","innerRef","map","item","index","draggableProps","dragHandleProps","taskBubble","backgroundColor","display","flexDirection","transition","width","bubbleTitle","marginRight","bubbleWorkTime","address","marginTop","placeholder"],"mappings":"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","sourcesContent":["import { useStyles } from '../App';\nimport '../App.css';\nimport React, { useContext } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { MeetDetailDialog } from '../dialogWindows/MeetDetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\n\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport PlaceIcon from '@material-ui/icons/Place';\n\nimport { DataContext } from \"../providers/DataProvider\";\nimport { MeetEditDialog } from '../dialogWindows/editModeDialogs/MeetEditDialog';\n\nexport function MeetTaskBubble(date) {\n  const classes = useStyles();\n\n  const { taskData } = useContext(DataContext);\n\n  let filteredData = [];\n\n  if (taskData.meetingTasks !== undefined) {\n    filteredData = taskData.meetingTasks.filter((task) => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({ id: '-1', title: 'Test', desc: 'Test', workTime: '100h', status: 'not_done', startTime: '', endTime: '' });\n\n  const handleClickOpen = (task) => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return (\n      <div style={{ justifyContent: \"center\", height: \"100%\" }}>\n        <h3 style={{ textAlign: \"center\", paddingTop: \"18px\", color: \"#bdbdbd\", fontFamily: \"Poppins\", fontSize: \"18px\", fontWeight: \"500\" }}>\n          Prázdne\n        </h3>\n      </div>\n    )\n\n  } else {\n    return (\n      <div>\n        <DragDropContext>\n          <Droppable droppableId={`${moment(date).unix()}`}>\n            {(provided) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                {filteredData.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index} >\n                    {(provided) => (\n                      <div {...provided.draggableProps} {...provided.dragHandleProps}>\n                        <Box className={classes.taskBubble} style={{ backgroundColor: GetTaskStatusData(item.status).color, display: 'flex', flexDirection: 'column', transition: 'background-color 1s' }} onClick={() => handleClickOpen(item)} ref={provided.innerRef}>\n                          <Box style={{display: 'flex', flexDirection: 'row', width: '100%'}}>\n                            <Box flexGrow={1}>\n                              <h3 className={classes.bubbleTitle}>{item.title}</h3>\n                            </Box>\n                            <ScheduleIcon style={{ marginRight: '5px' }} />\n                            <h3 className={classes.bubbleWorkTime}>{item.startTime} - {item.endTime}</h3>\n                          </Box>\n                          {item.address !== \"\" \n                            ? <Box style={{display: 'flex', flexDirection: 'row', width: '100%', justifyContent: 'flex-end', marginTop: '5px'}}>\n                                <PlaceIcon />\n                                <h3 className={classes.bubbleWorkTime}>{item.address}</h3>\n                              </Box>\n                            : \"\"\n                          }\n                            \n                        </Box>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <MeetDetailDialog onClose={handleClose} open={open} selectedTask={selectedTask} />\n      </div>\n    )\n  }\n};"]},"metadata":{},"sourceType":"module"}
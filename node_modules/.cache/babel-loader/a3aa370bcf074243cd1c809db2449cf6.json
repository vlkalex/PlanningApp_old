{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/addTaskDialogs/MeetAddTaskDialog.js\";\nimport '../../App.css';\nimport React, { useState, useContext } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport { DataContext } from \"../../providers/DataProvider\";\nconst CssTextField = withStyles({\n  root: {\n    '& .MuiFilledInput-root': {\n      fontFamily: 'Poppins',\n      paddingTop: 0,\n      background: 'rgba(171, 171, 171, 0.15)'\n    }\n  }\n})(TextField);\nconst styles = makeStyles(theme => ({\n  detailTitle: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '700',\n    fontSize: '1.6em',\n    paddingBottom: '15px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0\n  },\n  detailText: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    paddingLeft: '20px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(2),\n    top: theme.spacing(3.5),\n    color: '#1f1f1d'\n  },\n  editButton: {\n    position: 'absolute',\n    right: theme.spacing(8),\n    top: theme.spacing(3.5),\n    color: '#2B2B28'\n  },\n  taskSelect: {\n    width: '90%',\n    background: '#FFEAC8',\n    borderStyle: 'none',\n    borderWidth: 2,\n    borderRadius: '10px',\n    marginLeft: 18,\n    padding: '10px 0px',\n    \"&:focus\": {\n      borderRadius: '10px',\n      background: 'transparent'\n    }\n  },\n  addTaskInput: {\n    fontFamily: 'Poppins',\n    margin: '10px',\n    \"& label\": {\n      fontFamily: 'Poppins'\n    },\n    \"& input\": {\n      fontFamily: 'Poppins'\n    }\n  },\n  createTaskButton: {\n    width: '60%',\n    alignSelf: 'center',\n    margin: '20px',\n    fontFamily: 'Poppins',\n    fontSize: '14px',\n    fontWeight: '600',\n    color: 'white',\n    background: '#E3B04B',\n    '&:hover': {\n      background: '#ffc44f'\n    }\n  }\n}));\nexport function MeetAddTaskDialog(props) {\n  const classes = styles();\n  const {\n    onClose,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [val, setVal] = useState(null);\n\n  const handleStatusChange = event => {\n    setVal(event.target.value);\n  };\n\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskDesc, setTaskDesc] = useState(\"\");\n  const [taskAddress, setAddress] = useState(\"\");\n  const [selectedStartTime, handleStartTimeChange] = useState(\"13:00\");\n  const [selectedEndTime, handleEndTimeChange] = useState(\"14:00\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const {\n    taskData,\n    weekState,\n    setRefresh\n  } = useContext(DataContext); // moves the menu below the select input\n\n  const menuProps = {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const handleForm = e => {\n    e.preventDefault();\n\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*'\n        },\n        body: JSON.stringify({\n          title: taskTitle,\n          desc: taskDesc,\n          date: moment(selectedDate).format(\"DD/MM/yyyy\"),\n          address: taskAddress == undefined ? \"\" : taskAddress.value.description,\n          startTime: selectedStartTime,\n          endTime: selectedEndTime,\n          categorty: ''\n        })\n      };\n      console.log({\n        title: taskTitle,\n        desc: taskDesc,\n        date: moment(selectedDate).format(\"DD/MM/yyyy\"),\n        address: taskAddress == undefined ? \"\" : taskAddress.value.description,\n        startTime: selectedStartTime,\n        endTime: selectedEndTime,\n        categorty: ''\n      });\n      fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/create-meeting-task', requestOptions).then(response => response.json()).then(data => setRefresh(data.taskId));\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setTaskTitle(\"\");\n    setTaskDesc(\"\");\n    handleStartTimeChange(\"13:00\");\n    handleEndTimeChange(\"14:00\");\n    handleDateChange(new Date());\n    handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleForm(e),\n    style: {\n      display: 'contents'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.detailTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, \"Vytvori\\u0165 \\xFAlohu\"), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    label: \"N\\xE1zov\",\n    variant: \"outlined\",\n    value: taskTitle,\n    onChange: e => setTaskTitle(e.target.value),\n    className: classes.addTaskInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Popis\",\n    multiline: true,\n    rows: 3,\n    variant: \"outlined\",\n    value: taskDesc,\n    onChange: e => setTaskDesc(e.target.value),\n    className: classes.addTaskInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px',\n      paddingLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PlaceIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n    selectProps: {\n      styles: {\n        control: (provider, state) => ({ ...provider,\n          background: 'none',\n          fontFamily: 'Poppins',\n          width: '97.8%',\n          height: '3.8em',\n          borderColor: 'rgba(0, 0, 0, 0.23)',\n          \"&:hover\": {\n            borderColor: state.isFocused ? \"-webkit-focus-ring-color\" : \"black\"\n          }\n        }),\n        container: provided => ({ ...provided,\n          width: '100%',\n          marginLeft: '10px'\n        }),\n        input: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        option: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        menu: provided => ({ ...provided,\n          width: '97.8%'\n        }),\n        singleValue: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        dropdownIndicator: provider => ({ ...provider,\n          color: 'rgba(0, 0, 0, 0.23)'\n        }),\n        indicatorSeparator: provider => ({ ...provider,\n          color: 'rgba(0, 0, 0, 0.23)'\n        })\n      },\n      taskAddress,\n      onChange: setAddress\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingLeft: '10px',\n      paddingRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TodayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    style: {\n      width: 90,\n      marginLeft: 10,\n      background: 'rgba(171, 171, 171, 0.15)',\n      borderRadius: '5px',\n      border: 'none'\n    },\n    format: \"D.M.YYYY\",\n    value: selectedDate,\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"time-picker\",\n    options: startTimeSlots,\n    style: {\n      width: 90,\n      marginLeft: 10\n    },\n    disableClearable: true,\n    freeSolo: true,\n    value: selectedStartTime,\n    inputValue: selectedStartTime,\n    onInputChange: (event, newInputValue) => {\n      handleStartTimeChange(newInputValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(CssTextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      style: {\n        background: 'rgba(171, 171, 171, 0.15)',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginLeft: '8px',\n      marginRight: '8px',\n      fontSize: '20px',\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 29\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"time-picker\",\n    options: endTimeSlots,\n    style: {\n      width: 90\n    },\n    disableClearable: true,\n    freeSolo: true,\n    value: selectedEndTime,\n    inputValue: selectedEndTime,\n    onInputChange: (event, newInputValue) => {\n      handleEndTimeChange(newInputValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(CssTextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      style: {\n        background: 'rgba(171, 171, 171, 0.15)',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.createTaskButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, \"Vytvori\\u0165\"))));\n}\nMeetAddTaskDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\n\nconst getMinutes = index => {\n  if (index % 4 === 0) {\n    return '00';\n  } else if (index % 2 === 0) {\n    return '30';\n  } else if (index % 4 === 1) {\n    return '15';\n  } else {\n    return '45';\n  }\n};\n\nconst startTimeSlots = Array.from(new Array(24 * 4)).map((_, index) => `${Math.floor(index / 4)}:${getMinutes(index)}`);\nconst endTimeSlots = Array.from(new Array(24 * 4)).map((_, index) => `${Math.floor(index / 4)}:${getMinutes(index)}`);","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/addTaskDialogs/MeetAddTaskDialog.js"],"names":["React","useState","useContext","makeStyles","withStyles","moment","PropTypes","Dialog","Button","TextField","DatePicker","MuiPickersUtilsProvider","MomentUtils","Autocomplete","GooglePlacesAutocomplete","TimerIcon","IconButton","CloseIcon","TodayIcon","PhoneIcon","EmailIcon","PlaceIcon","DataContext","CssTextField","root","fontFamily","paddingTop","background","styles","theme","detailTitle","color","fontWeight","fontSize","paddingBottom","marginBlockStart","marginBlockEnd","detailText","paddingLeft","closeButton","position","right","spacing","top","editButton","taskSelect","width","borderStyle","borderWidth","borderRadius","marginLeft","padding","addTaskInput","margin","createTaskButton","alignSelf","MeetAddTaskDialog","props","classes","onClose","open","handleClose","val","setVal","handleStatusChange","event","target","value","taskTitle","setTaskTitle","taskDesc","setTaskDesc","taskAddress","setAddress","selectedStartTime","handleStartTimeChange","selectedEndTime","handleEndTimeChange","selectedDate","handleDateChange","Date","taskData","weekState","setRefresh","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","handleForm","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","title","desc","date","format","address","undefined","description","startTime","endTime","categorty","console","log","fetch","then","response","json","data","taskId","error","alert","style","backgroundColor","boxShadow","elevation","display","alignItems","justifyContent","control","provider","state","height","borderColor","isFocused","container","provided","input","option","menu","singleValue","dropdownIndicator","indicatorSeparator","onChange","flexDirection","paddingRight","border","startTimeSlots","newInputValue","params","marginRight","endTimeSlots","propTypes","func","isRequired","bool","getMinutes","index","Array","from","map","_","Math","floor"],"mappings":"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","sourcesContent":["import '../../App.css';\nimport React, { useState, useContext } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\n\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PlaceIcon from '@material-ui/icons/Place';\n\nimport { DataContext } from \"../../providers/DataProvider\";\n\nconst CssTextField = withStyles({\n    root: {\n      '& .MuiFilledInput-root': {\n        fontFamily: 'Poppins',\n        paddingTop: 0,\n        background: 'rgba(171, 171, 171, 0.15)'\n      },\n    },\n})(TextField);\n\nconst styles = makeStyles((theme) => ({\n    detailTitle: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '700',\n        fontSize: '1.6em',\n        paddingBottom: '15px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n    },\n    detailText: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        paddingLeft: '20px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: theme.spacing(3.5),\n        color: '#1f1f1d',\n    },\n    editButton: {\n        position: 'absolute',\n        right: theme.spacing(8),\n        top: theme.spacing(3.5),\n        color: '#2B2B28',\n    },\n    taskSelect: {\n        width: '90%',\n        background: '#FFEAC8',\n        borderStyle:'none',\n        borderWidth: 2,\n        borderRadius: '10px',\n        marginLeft: 18,\n        padding: '10px 0px',\n        \"&:focus\":{\n            borderRadius: '10px',\n            background: 'transparent',\n        },\n    },\n    addTaskInput: {\n        fontFamily: 'Poppins',\n        margin: '10px',\n        \"& label\": {\n            fontFamily: 'Poppins',\n        },\n        \"& input\": {\n            fontFamily: 'Poppins',\n        }\n    },\n    createTaskButton: {\n        width: '60%',\n        alignSelf: 'center',\n        margin: '20px',\n        fontFamily: 'Poppins',\n        fontSize: '14px',\n        fontWeight: '600',\n        color: 'white',\n        background: '#E3B04B',\n        '&:hover': {\n            background: '#ffc44f',\n        }\n    }\n}));\n\nexport function MeetAddTaskDialog(props) {\n    const classes = styles();\n\n    const { onClose, open } = props;\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const [val,setVal] = useState(null);\n\n    const handleStatusChange = (event) => {\n        setVal(event.target.value);\n    };\n\n    const [taskTitle, setTaskTitle] = useState(\"\");\n    const [taskDesc, setTaskDesc] = useState(\"\");\n    const [taskAddress, setAddress] = useState(\"\");\n    const [selectedStartTime, handleStartTimeChange] = useState(\"13:00\");\n    const [selectedEndTime, handleEndTimeChange] = useState(\"14:00\")\n    const [selectedDate, handleDateChange] = useState(new Date());\n\n    const { taskData, weekState, setRefresh } = useContext(DataContext);\n\n    // moves the menu below the select input\n    const menuProps = {\n        anchorOrigin: {\n        vertical: \"bottom\",\n            horizontal: \"left\"\n        },\n        transformOrigin: {\n        vertical: \"top\",\n            horizontal: \"left\"\n        },\n        getContentAnchorEl: null\n    };\n\n    const handleForm = e => {\n        e.preventDefault();\n\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*' },\n                body: JSON.stringify({ \n                    title: taskTitle,\n                    desc: taskDesc,\n                    date: moment(selectedDate).format(\"DD/MM/yyyy\"),\n                    address: taskAddress == undefined ? \"\" : taskAddress.value.description,\n                    startTime: selectedStartTime,\n                    endTime: selectedEndTime,\n                    categorty: '',\n                    })\n            };\n            console.log({\n                title: taskTitle,\n                desc: taskDesc,\n                date: moment(selectedDate).format(\"DD/MM/yyyy\"),\n                address: taskAddress == undefined ? \"\" : taskAddress.value.description,\n                startTime: selectedStartTime,\n                endTime: selectedEndTime,\n                categorty: ''\n            })\n            fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/create-meeting-task', requestOptions)\n                .then(response => response.json())\n                .then(data => setRefresh(data.taskId));\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setTaskTitle(\"\");\n        setTaskDesc(\"\");\n        handleStartTimeChange(\"13:00\");\n        handleEndTimeChange(\"14:00\");\n        handleDateChange(new Date());\n        handleClose();\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n            \n            <Dialog\n            onClose={handleClose}\n            open={open}\n            fullWidth={true}\n            maxWidth={'xs'}\n            PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', }, elevation: 0 }}\n            BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n            >\n                <form onSubmit={e => handleForm(e)} style={{display: 'contents'}}>\n                    <h1 className={classes.detailTitle}>Vytvoriť úlohu</h1>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n\n                    <TextField\n                        label=\"Názov\"\n                        variant=\"outlined\"\n                        value={taskTitle}\n                        onChange={e => setTaskTitle(e.target.value)}\n                        className={classes.addTaskInput}\n                    />\n\n                    <TextField\n                        label=\"Popis\"\n                        multiline\n                        rows={3}\n                        variant=\"outlined\"\n                        value={taskDesc}\n                        onChange={e => setTaskDesc(e.target.value)}\n                        className={classes.addTaskInput}\n                    />\n\n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px', paddingLeft: '10px' }}>\n                        <PlaceIcon />\n\n                        <GooglePlacesAutocomplete\n                            selectProps={{\n                                styles: {\n                                    control: (provider, state) => ({\n                                        ...provider,\n                                        background: 'none',\n                                        fontFamily: 'Poppins',\n                                        width: '97.8%',\n                                        height: '3.8em',\n                                        borderColor: 'rgba(0, 0, 0, 0.23)',\n                                        \"&:hover\": {\n                                            borderColor: state.isFocused ? \"-webkit-focus-ring-color\" : \"black\"\n                                        }\n                                    }),\n                                    container: (provided) => ({\n                                        ...provided,\n                                        width: '100%',\n                                        marginLeft: '10px',\n                                    }),\n                                    input: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    option: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    menu: (provided) => ({\n                                        ...provided,\n                                        width: '97.8%',\n                                    }),\n                                    singleValue: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    dropdownIndicator: (provider) => ({\n                                        ...provider,\n                                        color: 'rgba(0, 0, 0, 0.23)',\n                                    }),\n                                    indicatorSeparator: (provider) => ({\n                                        ...provider,\n                                        color: 'rgba(0, 0, 0, 0.23)',\n                                    }),\n                                },\n                                taskAddress,\n                                onChange: setAddress,\n                            }}\n                        />\n                    </span>\n\n                    <div style={{alignItems:'center', display: 'flex', flexDirection:'row', justifyContent: 'space-between', paddingLeft: '10px', paddingRight: '10px'}}>\n                        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                            <TodayIcon />\n                            <DatePicker\n                                autoOk\n                                disableToolbar\n                                variant=\"inline\"\n                                inputVariant=\"outlined\"\n                                style={{ width: 90, marginLeft: 10, background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px', border: 'none' }}\n                                format=\"D.M.YYYY\"\n                                value={selectedDate}\n                                onChange={date => handleDateChange(date)}\n                            />\n                        </span>\n\n                        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                            <TimerIcon />\n                            <Autocomplete\n                                id=\"time-picker\"\n                                options={startTimeSlots}\n                                style={{ width: 90, marginLeft: 10 }}\n                                disableClearable\n                                freeSolo\n                                value={selectedStartTime}\n                                inputValue={selectedStartTime}\n                                onInputChange={(event, newInputValue) => {\n                                    handleStartTimeChange(newInputValue);\n                                }}\n                                renderInput={(params) => (\n                                    <CssTextField {...params} variant=\"outlined\" style={{background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px'}} />\n                                )}\n                            />\n                            <h3 style={{marginLeft:'8px', marginRight:'8px', fontSize:'20px', fontWeight:400}}>-</h3>\n                            <Autocomplete\n                                id=\"time-picker\"\n                                options={endTimeSlots}\n                                style={{ width: 90 }}\n                                disableClearable\n                                freeSolo\n                                value={selectedEndTime}\n                                inputValue={selectedEndTime}\n                                onInputChange={(event, newInputValue) => {\n                                    handleEndTimeChange(newInputValue);\n                                }}\n                                renderInput={(params) => (\n                                    <CssTextField {...params} variant=\"outlined\" style={{background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px'}} />\n                                )}\n                            />\n                        </span>\n                    </div>\n\n                    <Button type=\"submit\" className={classes.createTaskButton}>\n                        Vytvoriť\n                    </Button>\n                \n                </form>\n            </Dialog>\n            \n        </MuiPickersUtilsProvider>\n        \n    );\n}\n\nMeetAddTaskDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};\n\n\nconst getMinutes = (index) => {\n    if (index % 4 === 0) {\n        return '00'\n    } else if ( index % 2 === 0 ) {\n        return '30'\n    } else if ( index % 4 === 1 ) {\n        return '15'\n    } else {\n        return '45'\n    }\n}\n\nconst startTimeSlots = Array.from(new Array(24 * 4)).map(\n    (_, index) => `${Math.floor(index / 4)}:${getMinutes(index)}`\n);\n\nconst endTimeSlots = Array.from(new Array(24 * 4)).map(\n    (_, index) => `${Math.floor(index / 4)}:${getMinutes(index)}`\n);"]},"metadata":{},"sourceType":"module"}
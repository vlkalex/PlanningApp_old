{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/editModeDialogs/MeetEditDialog.js\";\nimport '../../App.css';\nimport React, { useState, useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../css/dialog.sass';\nimport { GetTaskStatusData } from '../../taskBubble/TaskStatusData';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { FormatAlignLeftIcon, IconButton, CloseIcon, FlagIcon, PlaceIcon, TimerIcon, DeleteIcon, TodayIcon } from '../../imports/icons';\nimport { DataContext } from \"../../providers/DataProvider\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport { renderTaskStatusBubble, menuProps, startTimeSlots, endTimeSlots } from '../../const/dialogConsts';\nexport function MeetEditDialog(props) {\n  const {\n    onClose,\n    selectedTask,\n    open\n  } = props;\n  const {\n    setRefresh\n  } = useContext(DataContext);\n  const user = useContext(UserContext);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClickOnMore = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMore = () => {\n    setAnchorEl(null);\n  };\n\n  const taskStatusData = GetTaskStatusData(selectedTask.status);\n\n  const handleStatusChange = event => {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          token: user.uid,\n          collection: \"meeting_tasks\",\n          taskId: selectedTask.id,\n          status: event.target.value\n        })\n      };\n      fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions).then(response => response.json()).then(data => setRefresh(data.taskId));\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    selectedTask.status = event.target.value;\n  };\n\n  const [titleState, setTitle] = useState('');\n  const [descState, setDesc] = useState('');\n  const [selectedStartTime, setStartTime] = useState(\"13:00\");\n  const [selectedEndTime, setEndTime] = useState(\"14:00\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [taskAddress, setAddress] = useState('');\n  useEffect(() => {\n    setTitle(selectedTask.title);\n    setDesc(selectedTask.desc);\n    setStartTime(selectedTask.startTime);\n    setEndTime(selectedTask.endTime);\n    handleDateChange(moment(selectedTask.date, 'D.M.YYYY'));\n    setAddress(selectedTask.address);\n  }, [open]);\n\n  async function updateTask() {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          token: user.uid,\n          taskId: selectedTask.id,\n          title: titleState,\n          desc: descState,\n          date: moment(selectedDate).format(\"DD/MM/yyy\"),\n          status: selectedTask.status,\n          address: taskAddress.value == undefined ? \"\" : taskAddress.value.description,\n          startTime: selectedStartTime,\n          endTime: selectedEndTime,\n          category: \"\"\n        })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-meeting-task', requestOptions).then(response => response);\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setRefresh(selectedTask.id);\n    handleClose();\n  }\n\n  ;\n\n  async function deleteTask() {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          taskId: selectedTask.id,\n          token: user.uid\n        })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/delete-meeting-task', requestOptions).then(response => response);\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setRefresh(selectedTask.id);\n    handleClose();\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'md',\n    PaperProps: {\n      style: {\n        height: '80%',\n        backgroundColor: '#fff',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)',\n        transition: 'all 1s'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"70%\",\n      marginBottom: '1em'\n    },\n    className: \"task-title-input\",\n    value: titleState,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"update-task-button\",\n    onClick: () => {\n      updateTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, \"Ulo\\u017Ei\\u0165\"), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: \"close-button\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"more-button\",\n    onClick: e => {\n      handleClickOnMore(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"Viac\"), /*#__PURE__*/React.createElement(Menu, {\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    getContentAnchorEl: null,\n    open: Boolean(anchorEl),\n    onClose: handleCloseMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      deleteTask();\n      handleClose();\n    },\n    style: {\n      fontFamily: \"Poppins\",\n      color: '#b32929'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, \"Vymaza\\u0165\")), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disableUnderline: true,\n    classes: {\n      root: \"task-select\"\n    },\n    MenuProps: menuProps,\n    value: taskStatusData.id,\n    onChange: handleStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('done'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"in_progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('in_progress'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"not_done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('not_done')))))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    rows: 2,\n    rowsMax: 5,\n    variant: \"outlined\",\n    style: {\n      width: \"68%\",\n      marginLeft: '0.9em'\n    },\n    className: \"task-desc-input\",\n    value: descState,\n    onChange: e => setDesc(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PlaceIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(GooglePlacesAutocomplete, {\n    selectProps: {\n      placeholder: taskAddress,\n      styles: {\n        control: (provider, state) => ({ ...provider,\n          background: 'none',\n          fontFamily: 'Poppins',\n          width: '97.8%',\n          height: '3.8em',\n          borderColor: 'rgba(0, 0, 0, 0.23)',\n          \"&:hover\": {\n            borderColor: state.isFocused ? \"-webkit-focus-ring-color\" : \"black\"\n          }\n        }),\n        container: provided => ({ ...provided,\n          width: '30%',\n          marginLeft: '10px'\n        }),\n        input: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        option: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        menu: provided => ({ ...provided,\n          width: '98%'\n        }),\n        singleValue: provided => ({ ...provided,\n          fontFamily: 'Poppins',\n          color: '#2b2b2b'\n        }),\n        dropdownIndicator: provider => ({ ...provider,\n          color: 'rgba(0, 0, 0, 0.23)'\n        }),\n        indicatorSeparator: provider => ({ ...provider,\n          color: 'rgba(0, 0, 0, 0.23)'\n        })\n      },\n      taskAddress,\n      onChange: setAddress\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"time-picker\",\n    options: startTimeSlots,\n    style: {\n      width: 90,\n      marginLeft: 10\n    },\n    disableClearable: true,\n    freeSolo: true,\n    value: selectedStartTime,\n    inputValue: selectedStartTime,\n    onInputChange: (event, newInputValue) => {\n      setStartTime(newInputValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      style: {\n        background: 'rgba(171, 171, 171, 0.15)',\n        borderRadius: '5px',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginLeft: '8px',\n      marginRight: '8px',\n      fontSize: '20px',\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"time-picker\",\n    options: endTimeSlots,\n    style: {\n      width: 90\n    },\n    disableClearable: true,\n    freeSolo: true,\n    value: selectedEndTime,\n    inputValue: selectedEndTime,\n    onInputChange: (event, newInputValue) => {\n      setEndTime(newInputValue);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      style: {\n        background: 'rgba(171, 171, 171, 0.15)',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TodayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    outline: \"none\",\n    style: {\n      width: 90,\n      marginLeft: 10,\n      background: 'rgba(171, 171, 171, 0.15)',\n      borderRadius: '5px'\n    },\n    format: \"D.M.YYYY\",\n    value: selectedDate,\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 25\n    }\n  }))));\n}\nMeetEditDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedTask: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/editModeDialogs/MeetEditDialog.js"],"names":["React","useState","useContext","useEffect","makeStyles","GetTaskStatusData","moment","PropTypes","Dialog","Button","Select","Menu","MenuItem","FormControl","Autocomplete","TextField","DatePicker","GooglePlacesAutocomplete","FormatAlignLeftIcon","IconButton","CloseIcon","FlagIcon","PlaceIcon","TimerIcon","DeleteIcon","TodayIcon","DataContext","UserContext","renderTaskStatusBubble","menuProps","startTimeSlots","endTimeSlots","MeetEditDialog","props","onClose","selectedTask","open","setRefresh","user","handleClose","anchorEl","setAnchorEl","handleClickOnMore","event","currentTarget","handleCloseMore","taskStatusData","status","handleStatusChange","requestOptions","method","headers","localStorage","getItem","body","JSON","stringify","token","uid","collection","taskId","id","target","value","fetch","then","response","json","data","error","console","log","alert","titleState","setTitle","descState","setDesc","selectedStartTime","setStartTime","selectedEndTime","setEndTime","selectedDate","handleDateChange","Date","taskAddress","setAddress","title","desc","startTime","endTime","date","address","updateTask","format","undefined","description","category","deleteTask","style","height","backgroundColor","color","borderRadius","padding","boxShadow","transition","elevation","width","marginBottom","e","vertical","horizontal","Boolean","fontFamily","display","alignItems","justifyContent","paddingTop","root","marginLeft","placeholder","styles","control","provider","state","background","borderColor","isFocused","container","provided","input","option","menu","singleValue","dropdownIndicator","indicatorSeparator","onChange","newInputValue","params","border","marginRight","fontSize","fontWeight","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["import '../../App.css';\nimport React, { useState, useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../css/dialog.sass';\nimport { GetTaskStatusData } from '../../taskBubble/TaskStatusData';\nimport moment from 'moment';\n\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\n\nimport { \n    FormatAlignLeftIcon,\n    IconButton,\n    CloseIcon,\n    FlagIcon,\n    PlaceIcon,\n    TimerIcon,\n    DeleteIcon,\n    TodayIcon\n} from '../../imports/icons';\n\nimport { DataContext } from \"../../providers/DataProvider\";\nimport { UserContext } from \"../../providers/UserProvider\";\nimport { renderTaskStatusBubble, menuProps, startTimeSlots, endTimeSlots } from '../../const/dialogConsts';\n\n\nexport function MeetEditDialog(props) {\n\n    const { onClose, selectedTask, open } = props;\n    const { setRefresh } = useContext(DataContext);\n    const user = useContext(UserContext);\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClickOnMore = (event) => {\n        setAnchorEl(event.currentTarget);\n    };  \n\n    const handleCloseMore = () => {\n        setAnchorEl(null);\n    };\n\n    const taskStatusData = GetTaskStatusData(selectedTask.status);\n\n    const handleStatusChange = (event) => {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ \n                    token: user.uid,\n                    collection: \"meeting_tasks\",\n                    taskId: selectedTask.id,\n                    status: event.target.value,\n                    })\n            };\n            fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions)\n                .then(response => response.json())\n                .then(data => setRefresh(data.taskId));\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n        selectedTask.status = event.target.value;\n    };\n\n    const [titleState, setTitle] = useState('');\n    const [descState, setDesc] = useState('');\n    const [selectedStartTime, setStartTime] = useState(\"13:00\")\n    const [selectedEndTime, setEndTime] = useState(\"14:00\")\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const [taskAddress, setAddress] = useState('');\n\n    useEffect(() => {\n        setTitle(selectedTask.title);\n        setDesc(selectedTask.desc);\n        setStartTime(selectedTask.startTime);\n        setEndTime(selectedTask.endTime);\n        handleDateChange(moment(selectedTask.date, 'D.M.YYYY'));\n        setAddress(selectedTask.address)\n    }, [open])\n\n    async function updateTask() {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ \n                    token: user.uid,\n                    taskId: selectedTask.id,\n                    title: titleState,\n                    desc: descState,\n                    date: moment(selectedDate).format(\"DD/MM/yyy\"),\n                    status: selectedTask.status,\n                    address: taskAddress.value == undefined ? \"\" : taskAddress.value.description,\n                    startTime: selectedStartTime,\n                    endTime: selectedEndTime,\n                    category: \"\",\n                })\n            };\n            await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-meeting-task', requestOptions)\n            .then(response => response);\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setRefresh(selectedTask.id);\n        handleClose();\n    };\n\n    async function deleteTask() {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ taskId: selectedTask.id, token: user.uid })\n            };\n            await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/delete-meeting-task', requestOptions)\n            .then(response => response);\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setRefresh(selectedTask.id);\n        handleClose();\n    };\n\n\n    return (\n            <Dialog\n                onClose={handleClose}\n                open={open}\n                fullWidth={true}\n                maxWidth={'md'}\n                PaperProps={{ style: { height:'80%', backgroundColor: '#fff', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', transition: 'all 1s'}, elevation: 0 }}\n                BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n            >\n                <div style={{ }}>\n                    <TextField style={{width: \"70%\", marginBottom: '1em'}} className=\"task-title-input\" value={titleState} onChange={e => setTitle(e.target.value)} />\n\n                    <Button className=\"update-task-button\" onClick={() => {updateTask()}}>\n                        Uložiť\n                    </Button>\n                    \n                    <IconButton aria-label=\"close\" className=\"close-button\" onClick={handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n\n                    <Button className=\"more-button\" onClick={(e) => {handleClickOnMore(e)}}>\n                        Viac\n                    </Button>\n\n                    <Menu\n                        anchorEl={anchorEl}\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n                        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n                        getContentAnchorEl={null}\n                        open={Boolean(anchorEl)}\n                        onClose={handleCloseMore}\n                    >\n                        <MenuItem onClick={() => {deleteTask(); handleClose()}} style={{ fontFamily: \"Poppins\", color: '#b32929' }}>\n                        Vymazať\n                        </MenuItem>\n                    </Menu>\n\n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                        <FlagIcon style={{ paddingTop: '2px' }} />\n                        <FormControl>\n                            <Select\n                                disableUnderline\n                                classes={{ root: \"task-select\" }}\n                                MenuProps={menuProps}\n                                value={taskStatusData.id}\n                                onChange={handleStatusChange}\n                            >\n                                <MenuItem value={\"done\"}>{renderTaskStatusBubble(GetTaskStatusData('done'))}</MenuItem>\n                                <MenuItem value={\"in_progress\"}>{renderTaskStatusBubble(GetTaskStatusData('in_progress'))}</MenuItem>\n                                <MenuItem value={\"not_done\"}>{renderTaskStatusBubble(GetTaskStatusData('not_done'))}</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </span>\n\n                    <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                        <FormatAlignLeftIcon style={{ paddingTop: '2px' }} />\n                        <TextField multiline rows={2} rowsMax={5} variant=\"outlined\" style={{width: \"68%\", marginLeft:'0.9em'}} className=\"task-desc-input\" value={descState} onChange={e => setDesc(e.target.value)} />\n                    </span>\n                    \n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                        <PlaceIcon />\n                        <GooglePlacesAutocomplete\n                            selectProps={{\n                                placeholder: taskAddress,\n                                styles: {\n                                    control: (provider, state) => ({\n                                        ...provider,\n                                        background: 'none',\n                                        fontFamily: 'Poppins',\n                                        width: '97.8%',\n                                        height: '3.8em',\n                                        borderColor: 'rgba(0, 0, 0, 0.23)',\n                                        \"&:hover\": {\n                                            borderColor: state.isFocused ? \"-webkit-focus-ring-color\" : \"black\"\n                                        }\n                                    }),\n                                    container: (provided) => ({\n                                        ...provided,\n                                        width: '30%',\n                                        marginLeft: '10px',\n                                    }),\n                                    input: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    option: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    menu: (provided) => ({\n                                        ...provided,\n                                        width: '98%',\n                                    }),\n                                    singleValue: (provided) => ({\n                                        ...provided,\n                                        fontFamily: 'Poppins',\n                                        color: '#2b2b2b',\n                                    }),\n                                    dropdownIndicator: (provider) => ({\n                                        ...provider,\n                                        color: 'rgba(0, 0, 0, 0.23)',\n                                    }),\n                                    indicatorSeparator: (provider) => ({\n                                        ...provider,\n                                        color: 'rgba(0, 0, 0, 0.23)',\n                                    }),\n                                },\n                                taskAddress,\n                                onChange: setAddress,\n                            }}\n                        />\n                    </span>\n\n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                        <TimerIcon />\n                        <Autocomplete\n                            id=\"time-picker\"\n                            options={startTimeSlots}\n                            style={{ width: 90, marginLeft: 10 }}\n                            disableClearable\n                            freeSolo\n                            value={selectedStartTime}\n                            inputValue={selectedStartTime}\n                            onInputChange={(event, newInputValue) => {\n                                setStartTime(newInputValue);\n                            }}\n                            renderInput={(params) => (\n                                <TextField {...params} variant=\"outlined\" style={{background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px', border:'none'}} />\n                            )}\n                        />\n                        <h3 style={{marginLeft:'8px', marginRight:'8px', fontSize:'20px', fontWeight:400}}>-</h3>\n                        <Autocomplete\n                            id=\"time-picker\"\n                            options={endTimeSlots}\n                            style={{ width: 90 }}\n                            disableClearable\n                            freeSolo\n                            value={selectedEndTime}\n                            inputValue={selectedEndTime}\n                            onInputChange={(event, newInputValue) => {\n                                setEndTime(newInputValue);\n                            }}\n                            renderInput={(params) => (\n                                <TextField {...params} variant=\"outlined\" style={{background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px'}}/>\n                            )}\n                        />\n                    </span>\n                    \n                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                        <TodayIcon />\n                        <DatePicker\n                            autoOk\n                            disableToolbar\n                            variant=\"inline\"\n                            inputVariant=\"outlined\"\n                            outline=\"none\"\n                            style={{ width: 90, marginLeft: 10, background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px'}}\n                            format=\"D.M.YYYY\"\n                            value={selectedDate}\n                            onChange={date => handleDateChange(date)}\n                        />\n                    </span>\n\n                </div>\n            </Dialog>\n        \n    );\n}\n\nMeetEditDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedTask: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}
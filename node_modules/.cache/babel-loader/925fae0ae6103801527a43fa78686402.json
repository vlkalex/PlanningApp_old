{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/login/Register.js\";\nimport React, { useState, useContext } from \"react\";\nimport { AuthContext } from '../index';\nimport * as firebase from 'firebase';\nimport firebaseConfig from './firebase.config';\nimport '../App.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nconsole.log(firebase);\nfirebase.initializeApp(firebaseConfig);\n\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setErrors] = useState(\"\");\n  const Auth = useContext(AuthContext);\n\n  const handleForm = e => {\n    e.preventDefault();\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(res => {\n      if (res.user) Auth.setLoggedIn(true);\n    }).catch(e => {\n      setErrors(e.message);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleForm(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, error));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/login/Register.js"],"names":["React","useState","useContext","AuthContext","firebase","firebaseConfig","TextField","Button","console","log","initializeApp","Register","email","setEmail","password","setPassword","error","setErrors","Auth","handleForm","e","preventDefault","auth","createUserWithEmailAndPassword","then","res","user","setLoggedIn","catch","message","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEAC,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEAA,QAAQ,CAACM,aAAT,CAAuBL,cAAvB;;AAEA,SAASM,QAAT,GAAoB;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,KAAD,EAAQC,SAAR,IAAqBhB,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAMiB,IAAI,GAAGhB,UAAU,CAACC,WAAD,CAAvB;;AAGA,QAAMgB,UAAU,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAjB,IAAAA,QAAQ,CACPkB,IADD,GAECC,8BAFD,CAEgCX,KAFhC,EAEuCE,QAFvC,EAGCU,IAHD,CAGMC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAR,EAAcR,IAAI,CAACS,WAAL,CAAiB,IAAjB;AACjB,KALD,EAMCC,KAND,CAMOR,CAAC,IAAI;AACRH,MAAAA,SAAS,CAACG,CAAC,CAACS,OAAH,CAAT;AACH,KARD;AASH,GAXD;;AAaA,sBACI;AAAM,IAAA,QAAQ,EAAET,CAAC,IAAID,UAAU,CAACC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAyB,IAAA,KAAK,EAAER,KAAhC;AAAuC,IAAA,QAAQ,EAAEQ,CAAC,IAAIP,QAAQ,CAACO,CAAC,CAACU,MAAF,CAASC,KAAV,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAEjB,QAAnC;AAA6C,IAAA,QAAQ,EAAEM,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACU,MAAF,CAASC,KAAV,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOf,KAAP,CARJ,CADJ;AAaH;;AAED,eAAeL,QAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { AuthContext } from '../index';\nimport * as firebase from 'firebase';\nimport firebaseConfig from './firebase.config';\nimport '../App.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconsole.log(firebase)\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction Register() {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setErrors] = useState(\"\");\n\n    const Auth = useContext(AuthContext);\n    \n    \n    const handleForm = e => {\n        e.preventDefault();\n        firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(res => {\n            if (res.user) Auth.setLoggedIn(true);\n        })\n        .catch(e => {\n            setErrors(e.message);\n        });\n    };\n\n    return (\n        <form onSubmit={e => handleForm(e)}>\n            <TextField label=\"Email\" value={email} onChange={e => setEmail(e.target.value)}/>\n            <TextField label=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\n\n            <Button type=\"submit\">\n                Register\n            </Button>\n\n            <span>{error}</span>\n        </form>\n        \n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}
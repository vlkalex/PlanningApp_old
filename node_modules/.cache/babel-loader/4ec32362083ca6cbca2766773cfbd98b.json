{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/DateCalc.js\";\nimport React from 'react';\nimport moment from 'moment';\n\nlet enumerateDaysBetweenDates = function (startDate, endDate) {\n  var dates = [];\n  var currDate = moment(startDate).subtract(moment(\"1\", \"MM\").startOf('month').format('d'), 'days').startOf('day');\n  currDate.add('1', 'day');\n  var lastDate = moment(endDate).startOf('day'); //while(currDate.add(1, 'days').diff(lastDate) < 0) {\n  //    dates.push(currDate.valueOf());\n  //}\n\n  while (lastDate.subtract(1, 'days').format('d') !== '1') {\n    dates.push(lastDate.valueOf());\n  }\n\n  return dates;\n};\n\nexport let getDatesFromMonth = function (currentMonth) {\n  let startBlanks = [];\n  let endBlanks = [];\n  let daysInMonth = [];\n  let weeks = [];\n\n  for (let day = 1; day <= moment(currentMonth, \"MM\").daysInMonth(); day++) {\n    daysInMonth.push(moment(currentMonth, \"MM\").date(day).valueOf());\n  }\n\n  for (let i = moment(currentMonth, \"MM\").endOf('month').format('d'); i < 7; i++) {\n    if (i === 0) {\n      break;\n    }\n\n    endBlanks.push( /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }\n    }, \"Skip!\"));\n  }\n\n  if (moment(currentMonth, \"MM\").startOf('month').format('d') !== '1') {\n    startBlanks = enumerateDaysBetweenDates(moment(currentMonth, \"MM\").subtract(1, 'months').endOf('month').format('M/D/YYYY'), moment(currentMonth, \"MM\").startOf('month').format('M/D/YYYY'));\n  }\n\n  let totalSlots = [...startBlanks, ...daysInMonth, ...endBlanks];\n  let temp = [];\n  totalSlots.forEach((item, i) => {\n    if (i > 1) {\n      if (i % 7 === 0) {\n        weeks.push(temp);\n        temp = [];\n      }\n    }\n\n    temp.push(item);\n  });\n  weeks.push(temp);\n  return weeks;\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/DateCalc.js"],"names":["React","moment","enumerateDaysBetweenDates","startDate","endDate","dates","currDate","subtract","startOf","format","add","lastDate","push","valueOf","getDatesFromMonth","currentMonth","startBlanks","endBlanks","daysInMonth","weeks","day","date","i","endOf","totalSlots","temp","forEach","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nlet enumerateDaysBetweenDates = function(startDate, endDate) {\n    var dates = [];\n  \n    var currDate = moment(startDate).subtract(moment(\"1\",\"MM\").startOf('month').format('d'), 'days').startOf('day');\n    currDate.add('1', 'day');\n    \n    var lastDate = moment(endDate).startOf('day');\n  \n    //while(currDate.add(1, 'days').diff(lastDate) < 0) {\n    //    dates.push(currDate.valueOf());\n    //}\n\n    while(lastDate.subtract(1, 'days').format('d') !== '1') {\n        dates.push(lastDate.valueOf());\n    }\n    \n    return dates;\n};\n\nexport let getDatesFromMonth = function(currentMonth) {\n    let startBlanks = [];\n    let endBlanks = [];\n    let daysInMonth = [];\n    let weeks = [];\n\n    for (let day = 1; day <= moment(currentMonth,\"MM\").daysInMonth(); day++) {\n        daysInMonth.push(moment(currentMonth,\"MM\").date(day).valueOf())\n    }\n    for (let i = moment(currentMonth,\"MM\").endOf('month').format('d'); i < 7; i++) {\n        if (i === 0) {\n            break;\n        }\n        endBlanks.push(<p>Skip!</p>);\n    }\n\n    if (moment(currentMonth,\"MM\").startOf('month').format('d') !== '1') {\n        startBlanks = enumerateDaysBetweenDates(moment(currentMonth,\"MM\").subtract(1,'months').endOf('month').format('M/D/YYYY'),moment(currentMonth,\"MM\").startOf('month').format('M/D/YYYY'))\n    }\n\n    let totalSlots = [...startBlanks, ...daysInMonth, ...endBlanks];\n\n    let temp = [];\n    totalSlots.forEach((item, i) => {\n    if (i > 1) {\n        if(i%7 === 0) {\n        weeks.push(temp);\n        temp = [];\n        }\n    }\n    temp.push(item);\n    });\n\n    weeks.push(temp);\n\n    return weeks;\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/WorkDetailDialog.js\";\nimport '../App.css';\nimport React, { useState, useContext } from 'react';\nimport { styles } from './css/dialog.sass';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport { FormatAlignLeftIcon, IconButton, DeleteIcon, CreateIcon, CloseIcon, FlagIcon, TimerIcon, TodayIcon } from '../imports/icons';\nimport { DataContext } from \"../providers/DataProvider\";\nimport { UserContext } from \"../providers/UserProvider\";\n\nconst renderTaskStatusBubble = taskStatusData => {\n  const classes = styles();\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"task-status\",\n    style: {\n      backgroundColor: taskStatusData.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, taskStatusData.title);\n};\n\nexport function WorkDetailDialog(props) {\n  const {\n    onClose,\n    selectedTask,\n    open\n  } = props;\n  const {\n    setRefresh\n  } = useContext(DataContext);\n  const user = useContext(UserContext);\n\n  const handleClose = () => {\n    enterEditMode(false);\n    onClose(selectedTask);\n  };\n\n  const taskStatusData = GetTaskStatusData(selectedTask.status);\n  const [editMode, enterEditMode] = useState(false);\n  const [val, setVal] = useState(taskStatusData.id);\n\n  const handleStatusChange = event => {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          collection: \"work_tasks\",\n          token: user.uid,\n          taskId: selectedTask.id,\n          status: event.target.value\n        })\n      };\n      fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions).then(response => response.json()).then(data => setRefresh(data.taskId));\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setVal(event.target.value);\n    selectedTask.status = event.target.value;\n  };\n\n  const [titleState, setTitle] = useState('');\n  const [descState, setDesc] = useState('');\n  const [workTimeState, setWorkTime] = useState('');\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const editModeOn = () => {\n    enterEditMode(true);\n    setTitle(selectedTask.title);\n    setDesc(selectedTask.desc);\n    setWorkTime(selectedTask.workTime);\n    handleDateChange(moment(selectedTask.date, \"DD/MM/yyy\"));\n  };\n\n  const editModeOff = () => {\n    enterEditMode(false);\n    setTitle('');\n    setDesc('');\n    setWorkTime('');\n  }; // moves the menu below the select input\n\n\n  const menuProps = {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  async function updateTask() {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          token: user.uid,\n          taskId: selectedTask.id,\n          title: selectedTask.title,\n          desc: selectedTask.desc,\n          date: moment(selectedDate).format(\"DD/MM/yyy\"),\n          status: selectedTask.status,\n          workTime: selectedTask.workTime\n        })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-work-task', requestOptions).then(response => response);\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setRefresh(selectedTask.id);\n    editModeOff();\n  }\n\n  ;\n\n  async function deleteTask() {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + localStorage.getItem(\"@token\")\n        },\n        body: JSON.stringify({\n          taskId: selectedTask.id,\n          token: user.uid\n        })\n      };\n      await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/delete-work-task', requestOptions).then(response => response);\n    } catch (error) {\n      console.log(error);\n      alert(\"Something went wrong. Please try again later.\");\n    }\n\n    setRefresh(selectedTask.id);\n    handleClose();\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"70%\"\n    },\n    className: \"task-title-input\",\n    value: selectedTask.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"detail-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, selectedTask.title), editMode ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"edit\",\n    className: \"edit-button\",\n    onClick: () => {\n      deleteTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    style: {\n      color: '#c45a5a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"edit\",\n    className: \"edit-button\",\n    onClick: () => {\n      editModeOn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CreateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: \"close-button\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disableUnderline: true,\n    classes: {\n      root: \"task-select\"\n    },\n    MenuProps: menuProps,\n    value: taskStatusData.id,\n    onChange: handleStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('done'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"in_progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('in_progress'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"not_done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('not_done')))))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }), editMode ? /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    style: {\n      width: \"70%\"\n    },\n    className: \"task-desc-input\",\n    value: descState,\n    onChange: e => setDesc(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"detail-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, selectedTask.desc)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"detail-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, selectedTask.workTime)), editMode ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TodayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    style: {\n      width: 90,\n      marginLeft: 10,\n      background: 'rgba(171, 171, 171, 0.15)',\n      borderRadius: '5px',\n      border: 'none'\n    },\n    format: \"D.M.YYYY\",\n    value: selectedDate,\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  })) : \"\", editMode ? /*#__PURE__*/React.createElement(Button, {\n    className: \"update-task-button\",\n    onClick: () => {\n      editModeOff();\n      updateTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, \"Aktualizova\\u0165\") : \"\"));\n}\nWorkDetailDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedTask: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/WorkDetailDialog.js"],"names":["React","useState","useContext","styles","GetTaskStatusData","moment","PropTypes","Dialog","Button","Select","MenuItem","FormControl","TextField","DatePicker","MuiPickersUtilsProvider","MomentUtils","FormatAlignLeftIcon","IconButton","DeleteIcon","CreateIcon","CloseIcon","FlagIcon","TimerIcon","TodayIcon","DataContext","UserContext","renderTaskStatusBubble","taskStatusData","classes","backgroundColor","color","title","WorkDetailDialog","props","onClose","selectedTask","open","setRefresh","user","handleClose","enterEditMode","status","editMode","val","setVal","id","handleStatusChange","event","requestOptions","method","headers","localStorage","getItem","body","JSON","stringify","collection","token","uid","taskId","target","value","fetch","then","response","json","data","error","console","log","alert","titleState","setTitle","descState","setDesc","workTimeState","setWorkTime","selectedDate","handleDateChange","Date","editModeOn","desc","workTime","date","editModeOff","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","updateTask","format","deleteTask","style","borderRadius","padding","boxShadow","elevation","width","display","alignItems","justifyContent","paddingTop","root","e","marginLeft","background","border","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React, { useState, useContext } from 'react';\nimport { styles } from './css/dialog.sass';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\nimport moment from 'moment';\n\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Button from '@material-ui/core/Button'\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\n\nimport { \n    FormatAlignLeftIcon,\n    IconButton,\n    DeleteIcon,\n    CreateIcon,\n    CloseIcon,\n    FlagIcon,\n    TimerIcon,\n    TodayIcon\n} from '../imports/icons';\n\nimport { DataContext } from \"../providers/DataProvider\";\nimport { UserContext } from \"../providers/UserProvider\";\n\n\nconst renderTaskStatusBubble = (taskStatusData) => {\n    const classes = styles();\n    return (\n        <span className=\"task-status\" style={{backgroundColor: taskStatusData.color}}>\n            {taskStatusData.title}\n        </span>\n    )\n}\n\nexport function WorkDetailDialog(props) {\n    const { onClose, selectedTask, open } = props;\n    const { setRefresh } = useContext(DataContext);\n    const user = useContext(UserContext);\n\n    const handleClose = () => {\n        enterEditMode(false);\n        onClose(selectedTask);\n    };\n\n    const taskStatusData = GetTaskStatusData(selectedTask.status);\n\n    const [editMode, enterEditMode] = useState(false);\n\n    const [val,setVal] = useState(taskStatusData.id);\n\n    const handleStatusChange = (event) => {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ \n                    collection: \"work_tasks\",\n                    token: user.uid,\n                    taskId: selectedTask.id,\n                    status: event.target.value,\n                    })\n            };\n            fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-task-status', requestOptions)\n                .then(response => response.json())\n                .then(data => setRefresh(data.taskId));\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n        setVal(event.target.value);\n        selectedTask.status = event.target.value;\n    };\n\n    const [titleState, setTitle] = useState('');\n    const [descState, setDesc] = useState('');\n    const [workTimeState, setWorkTime] = useState('');\n    const [selectedDate, handleDateChange] = useState(new Date());\n\n    const editModeOn = () => {\n        enterEditMode(true);\n        setTitle(selectedTask.title);\n        setDesc(selectedTask.desc);\n        setWorkTime(selectedTask.workTime);\n        handleDateChange(moment(selectedTask.date, \"DD/MM/yyy\"));\n    }\n\n    const editModeOff = () => {\n        enterEditMode(false);\n        setTitle('');\n        setDesc('');\n        setWorkTime('');\n    }\n\n    // moves the menu below the select input\n    const menuProps = {\n        anchorOrigin: {\n        vertical: \"bottom\",\n            horizontal: \"left\"\n        },\n        transformOrigin: {\n        vertical: \"top\",\n            horizontal: \"left\"\n        },\n        getContentAnchorEl: null\n    };\n\n    async function updateTask() {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ \n                    token: user.uid,\n                    taskId: selectedTask.id,\n                    title: selectedTask.title,\n                    desc: selectedTask.desc,\n                    date: moment(selectedDate).format(\"DD/MM/yyy\"),\n                    status: selectedTask.status,\n                    workTime: selectedTask.workTime,\n                })\n            };\n            await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/update-work-task', requestOptions)\n            .then(response => response);\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setRefresh(selectedTask.id);\n        editModeOff();\n    };\n\n    async function deleteTask() {\n        try {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Accept': '*/*', 'Authorization': 'Bearer ' + localStorage.getItem(\"@token\") },\n                body: JSON.stringify({ taskId: selectedTask.id, token: user.uid })\n            };\n            await fetch('https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/delete-work-task', requestOptions)\n            .then(response => response);\n        } catch(error) {\n            console.log(error);\n            alert(\"Something went wrong. Please try again later.\")\n        }\n\n        setRefresh(selectedTask.id);\n        handleClose();\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Dialog\n            onClose={handleClose}\n            open={open}\n            fullWidth={true}\n            maxWidth={'xs'}\n            PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', }, elevation: 0 }}\n            BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n        >\n            { editMode\n                ? <TextField style={{width: \"70%\"}} className=\"task-title-input\" value={selectedTask.title}/> \n                : <h1 className=\"detail-title\">{selectedTask.title}</h1>\n            }\n            { editMode \n                ?   <IconButton aria-label=\"edit\" className=\"edit-button\" onClick={() => {deleteTask()}}>\n                        <DeleteIcon style={{color: '#c45a5a'}}/>\n                    </IconButton>\n                :   <IconButton aria-label=\"edit\" className=\"edit-button\" onClick={() => {editModeOn()}}>\n                        <CreateIcon />\n                    </IconButton>\n            }\n                \n            <IconButton aria-label=\"close\" className=\"close-button\" onClick={handleClose}>\n                <CloseIcon />\n            </IconButton>\n\n            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                <FlagIcon style={{ paddingTop: '2px' }} />\n                <FormControl>\n                    <Select\n                        disableUnderline\n                        classes={{ root: \"task-select\" }}\n                        MenuProps={menuProps}\n                        value={taskStatusData.id}\n                        onChange={handleStatusChange}\n                    >\n                        <MenuItem value={\"done\"}>{renderTaskStatusBubble(GetTaskStatusData('done'))}</MenuItem>\n                        <MenuItem value={\"in_progress\"}>{renderTaskStatusBubble(GetTaskStatusData('in_progress'))}</MenuItem>\n                        <MenuItem value={\"not_done\"}>{renderTaskStatusBubble(GetTaskStatusData('not_done'))}</MenuItem>\n                    </Select>\n                </FormControl>\n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <FormatAlignLeftIcon style={{ paddingTop: '2px' }} />\n                { editMode \n                    ?   <TextField multiline style={{width: \"70%\"}} className=\"task-desc-input\" value={descState} onChange={e => setDesc(e.target.value)}/> \n                    :   <h3 className=\"detail-text\">\n                            {selectedTask.desc}\n                        </h3>\n                }\n                \n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <TimerIcon />\n                <h3 className=\"detail-text\">\n                    {selectedTask.workTime}\n                </h3>\n            </span>\n\n            { editMode \n                ?   <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                        <TodayIcon />\n                        <DatePicker\n                            autoOk\n                            disableToolbar\n                            variant=\"inline\"\n                            inputVariant=\"outlined\"\n                            style={{ width: 90, marginLeft: 10, background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px', border: 'none' }}\n                            format=\"D.M.YYYY\"\n                            value={selectedDate}\n                            onChange={date => handleDateChange(date)}\n                        />\n                    </span>\n                :   \"\"\n            }\n\n            { editMode\n                ?   <Button className=\"update-task-button\" onClick={() => {editModeOff();updateTask()}}>\n                        Aktualizovať\n                    </Button>\n                :   \"\"\n            }\n\n        </Dialog>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nWorkDetailDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedTask: PropTypes.object.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
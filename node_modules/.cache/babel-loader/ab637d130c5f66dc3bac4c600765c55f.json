{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js\";\nimport { useStyles } from '../App';\nimport React, { Component } from 'react';\nimport Box from '@material-ui/core/Box';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport data from '../MOCK_DATA.json';\nimport { SettingsPowerRounded } from '@material-ui/icons';\nexport default function TaskBubble(type) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const filteredData = data.filter(task => task.type.includes(type)); //filter tasks by type specified\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, filteredData.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.taskBubble,\n    style: {\n      backgroundColor: item.state\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.bubbleTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n    style: {\n      marginRight: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.bubbleWorkTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, item.workTime)))));\n}\n;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js"],"names":["useStyles","React","Component","Box","TimerIcon","data","SettingsPowerRounded","TaskBubble","type","classes","open","setOpen","useState","filteredData","filter","task","includes","handleClickOpen","handleClose","map","item","index","id","taskBubble","backgroundColor","state","bubbleTitle","title","marginRight","bubbleWorkTime","workTime"],"mappings":";AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AAGA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACrC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAxB;AAEA,QAAMC,YAAY,GAAGR,IAAI,CAACS,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACP,IAAL,CAAUQ,QAAV,CAAmBR,IAAnB,CAAtB,CAArB,CALqC,CAKiC;;AAEtE,QAAMS,eAAe,GAAG,MAAM;AAC1BN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMO,WAAW,GAAG,MAAM;AACtBP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,YAAY,CAACM,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBACd,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAED,IAAI,CAACE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,UAAxB;AAAoC,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEJ,IAAI,CAACK;AAAxB,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEhB,OAAO,CAACiB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCN,IAAI,CAACO,KAA1C,CADJ,CADA,eAKA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAC;AAAb,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,eAMA;AAAI,IAAA,SAAS,EAAEnB,OAAO,CAACoB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCT,IAAI,CAACU,QAA7C,CANA,CADJ,CADH,CADL,CADJ;AAiBD;AAAA","sourcesContent":["import { useStyles } from '../App';\nimport React, { Component } from 'react';\nimport Box from '@material-ui/core/Box';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport data from '../MOCK_DATA.json';\nimport { SettingsPowerRounded } from '@material-ui/icons';\n\n\nexport default function TaskBubble(type) {\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n\n    const filteredData = data.filter((task) => task.type.includes(type)); //filter tasks by type specified\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n    \n    return (\n        <div>\n            {filteredData.map((item, index) => (\n                <React.Fragment key={item.id}>\n                    <Box className={classes.taskBubble} style={{ backgroundColor: item.state }}>\n                    <Box flexGrow={1}>\n                        <h3 className={classes.bubbleTitle}>{item.title}</h3>\n                    </Box>\n                    \n                    <TimerIcon style={{marginRight:'5px'}}/>\n                    <h3 className={classes.bubbleWorkTime}>{item.workTime}</h3>\n                    \n                    </Box>\n                </React.Fragment>\n            ))}\n        </div>\n    )\n  };"]},"metadata":{},"sourceType":"module"}
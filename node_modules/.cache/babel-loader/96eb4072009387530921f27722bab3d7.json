{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js\";\nimport { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { DetailDialog } from './DetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from '@material-ui/icons/Timer';\nimport data from '../MOCK_DATA.json';\n\nconst getItems = (count, offset = 0) => Array.from({\n  length: count\n}, (v, k) => k).map(k => ({\n  id: `item-${k + offset}-${new Date().getTime()}`,\n  content: `item ${k + offset}`\n}));\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n * Moves an item from one list to another list.\n */\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nlet AllTasks = {\n  date: \"\",\n  tasks: [task]\n};\nlet task = {\n  id: \"\",\n  title: \"\",\n  desc: \"\",\n  date: \"\",\n  type: \"\"\n};\nexport function TaskBubble(type, date) {\n  const classes = useStyles();\n  const filteredData = data.filter(task => task.type.includes(type)).filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: '-1',\n    title: 'Test',\n    desc: 'Test',\n    workTime: '100h',\n    status: 'not_done'\n  });\n\n  const handleClickOpen = task => {\n    setSelectedTask(task);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [state, setState] = useState(filteredData);\n\n  function onDragEnd(result) {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n    console.log(sInd);\n    console.log(dInd);\n\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n      setState(newState.filter(group => group.length));\n    }\n  }\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"Pr\\xE1zdne\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: `${moment(date).unix()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      className: classes.taskBubble,\n      style: {\n        backgroundColor: GetTaskStatusData(item.status).color\n      },\n      onClick: () => handleClickOpen(item),\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 57\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n      style: {\n        marginRight: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 53\n      }\n    }, item.workTime))))), provided.placeholder))), /*#__PURE__*/React.createElement(DetailDialog, {\n      onClose: handleClose,\n      open: open,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }));\n  }\n}\n;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js"],"names":["useStyles","React","useState","GetTaskStatusData","DetailDialog","Box","moment","DragDropContext","Droppable","Draggable","TimerIcon","data","getItems","count","offset","Array","from","length","v","k","map","id","Date","getTime","content","reorder","list","startIndex","endIndex","result","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","AllTasks","date","tasks","task","title","desc","type","TaskBubble","classes","filteredData","filter","includes","format","open","setOpen","selectedTask","setSelectedTask","workTime","status","handleClickOpen","handleClose","state","setState","onDragEnd","sInd","dInd","console","log","items","newState","group","undefined","justifyContent","height","textAlign","paddingTop","color","fontFamily","fontSize","fontWeight","unix","provided","droppableProps","innerRef","item","draggableProps","dragHandleProps","taskBubble","backgroundColor","bubbleTitle","marginRight","bubbleWorkTime","placeholder"],"mappings":"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","sourcesContent":["import { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { DetailDialog } from './DetailDialog';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport 'moment/locale/sk';\n\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport TimerIcon from '@material-ui/icons/Timer';\n\nimport data from '../MOCK_DATA.json';\n\n\nconst getItems = (count, offset = 0) =>\n  Array.from({ length: count }, (v, k) => k).map(k => ({\n    id: `item-${k + offset}-${new Date().getTime()}`,\n    content: `item ${k + offset}`\n    }));\n\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n  \n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nlet AllTasks = {\n    date: \"\",\n    tasks: [task]\n};\n\nlet task = {\n    id: \"\",\n    title: \"\",\n    desc: \"\",\n    date: \"\",\n    type: \"\"\n}\n\nexport function TaskBubble(type, date) {\n    const classes = useStyles();\n\n    const filteredData = data.filter((task) => task.type.includes(type)).filter((task) => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n\n    const [open, setOpen] = React.useState(false);\n    const [selectedTask, setSelectedTask] = React.useState({ id: '-1', title: 'Test', desc: 'Test', workTime: '100h', status: 'not_done' });\n\n    const handleClickOpen = (task) => {\n        setSelectedTask(task);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const [state, setState] = useState(filteredData);\n\n    function onDragEnd(result) {\n        const { source, destination } = result;\n    \n        // dropped outside the list\n        if (!destination) {\n          return;\n        }\n        const sInd = +source.droppableId;\n        const dInd = +destination.droppableId;\n\n        console.log(sInd);\n        console.log(dInd)\n    \n        if (sInd === dInd) {\n          const items = reorder(state[sInd], source.index, destination.index);\n          const newState = [...state];\n          newState[sInd] = items;\n          setState(newState);\n        } else {\n          const result = move(state[sInd], state[dInd], source, destination);\n          const newState = [...state];\n          newState[sInd] = result[sInd];\n          newState[dInd] = result[dInd];\n    \n          setState(newState.filter(group => group.length));\n        }\n    }\n\n    if (filteredData === undefined || filteredData.length === 0) {\n        return (\n            <div style={{justifyContent:\"center\", height:\"100%\"}}>\n                <h3 style={{textAlign:\"center\", paddingTop:\"18px\", color:\"#bdbdbd\", fontFamily:\"Poppins\", fontSize:\"18px\", fontWeight:\"500\"}}>\n                    Prázdne\n                </h3>\n            </div>\n        )\n        \n    } else {\n        return (\n            <div>\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable droppableId={`${moment(date).unix()}`}>\n                        {(provided) => (\n                            <div {...provided.droppableProps} ref={provided.innerRef}>\n                                {filteredData.map((item, index) => (\n                                    <Draggable key={item.id} draggableId={item.id} index={index} >\n                                        {(provided) => (\n                                            <div {...provided.draggableProps} {...provided.dragHandleProps}>\n                                                <Box  className={classes.taskBubble} style={{ backgroundColor: GetTaskStatusData(item.status).color }} onClick={() => handleClickOpen(item)} ref={provided.innerRef}>\n                                                    <Box flexGrow={1}>\n                                                        <h3 className={classes.bubbleTitle}>{item.title}</h3>\n                                                    </Box>\n                                                    <TimerIcon style={{marginRight: '5px'}} />\n                                                    <h3 className={classes.bubbleWorkTime}>{item.workTime}</h3>\n                                                </Box>\n                                            </div>\n                                        )}\n                                    </Draggable>\n                                ))}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n                <DetailDialog onClose={handleClose} open={open} selectedTask={selectedTask} />\n            </div>\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}
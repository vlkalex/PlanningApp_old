{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/components/Task/EditTask/EditCommTask.tsx\";\nimport MomentUtils from '@date-io/moment';\nimport { IconButton } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport FormControl from '@material-ui/core/FormControl';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport { Close, Email, Flag, FormatAlignLeft, Phone, Timer, Today } from '@material-ui/icons';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport moment from 'moment';\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../../App.css';\nimport { CommTasksDocument, Status, useDeleteCommTaskMutation, useEditCommTaskMutation } from '../../../generated/graphql';\nimport { WeekContext } from '../../../providers/WeekProvider';\nimport { notification } from '../../Notification';\nimport { getTaskStatusData } from '../Bubble/TaskStatusData';\nimport { menuProps, timeSlots } from '../helpers';\nexport function EditCommTask({\n  onClose,\n  selectedTask,\n  setSelectedTask,\n  open,\n  setPreviousStatusState,\n  previousState\n}) {\n  var _selectedTask$user, _formState$date, _formState$descriptio, _formState$id, _formState$pending, _formState$status, _formState$userId, _formState$title, _formState$workTime, _formState$email, _formState$phoneNumbe, _formState$date2, _formState$descriptio2, _formState$id2, _formState$status2, _formState$title2, _formState$workTime2, _formState$email2, _formState$phoneNumbe2, _selectedTask$id, _formState$status3;\n\n  const {\n    currWeek\n  } = useContext(WeekContext);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [formState, setFormState] = useState({\n    id: selectedTask.id,\n    userId: selectedTask === null || selectedTask === void 0 ? void 0 : (_selectedTask$user = selectedTask.user) === null || _selectedTask$user === void 0 ? void 0 : _selectedTask$user.id,\n    date: selectedTask.date,\n    description: selectedTask.description,\n    title: selectedTask.title,\n    status: selectedTask.status,\n    workTime: selectedTask.workTime,\n    phoneNumber: selectedTask.phoneNumber,\n    email: selectedTask.email,\n    pending: selectedTask.pending\n  });\n  useEffect(() => {\n    var _selectedTask$user2;\n\n    if (selectedTask.id !== formState.id) setFormState({\n      id: selectedTask.id,\n      userId: selectedTask === null || selectedTask === void 0 ? void 0 : (_selectedTask$user2 = selectedTask.user) === null || _selectedTask$user2 === void 0 ? void 0 : _selectedTask$user2.id,\n      date: selectedTask.date,\n      description: selectedTask.description,\n      title: selectedTask.title,\n      status: selectedTask.status,\n      workTime: selectedTask.workTime,\n      phoneNumber: selectedTask.phoneNumber,\n      email: selectedTask.email,\n      pending: selectedTask.pending\n    });\n\n    if (selectedTask.statusChanged === true) {\n      setSelectedTask({ ...selectedTask,\n        statusChanged: false\n      });\n      setFormState({ ...formState,\n        status: selectedTask.status\n      });\n    }\n  }, [selectedTask, formState, setSelectedTask]);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClickOnMore = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMore = () => {\n    setAnchorEl(null);\n  };\n\n  const [editTask] = useEditCommTaskMutation({\n    variables: {\n      date: (_formState$date = formState.date) !== null && _formState$date !== void 0 ? _formState$date : '',\n      description: (_formState$descriptio = formState.description) !== null && _formState$descriptio !== void 0 ? _formState$descriptio : '',\n      id: (_formState$id = formState.id) !== null && _formState$id !== void 0 ? _formState$id : '',\n      pending: (_formState$pending = formState.pending) !== null && _formState$pending !== void 0 ? _formState$pending : false,\n      status: (_formState$status = formState.status) !== null && _formState$status !== void 0 ? _formState$status : Status.NotDone,\n      userId: (_formState$userId = formState.userId) !== null && _formState$userId !== void 0 ? _formState$userId : '',\n      title: (_formState$title = formState.title) !== null && _formState$title !== void 0 ? _formState$title : '',\n      workTime: (_formState$workTime = formState.workTime) !== null && _formState$workTime !== void 0 ? _formState$workTime : '',\n      email: (_formState$email = formState.email) !== null && _formState$email !== void 0 ? _formState$email : '',\n      phoneNumber: (_formState$phoneNumbe = formState.phoneNumber) !== null && _formState$phoneNumbe !== void 0 ? _formState$phoneNumbe : ''\n    },\n    optimisticResponse: {\n      editTask: { ...selectedTask,\n        date: (_formState$date2 = formState.date) !== null && _formState$date2 !== void 0 ? _formState$date2 : '',\n        description: (_formState$descriptio2 = formState.description) !== null && _formState$descriptio2 !== void 0 ? _formState$descriptio2 : '',\n        id: (_formState$id2 = formState.id) !== null && _formState$id2 !== void 0 ? _formState$id2 : '',\n        status: (_formState$status2 = formState.status) !== null && _formState$status2 !== void 0 ? _formState$status2 : Status.NotDone,\n        title: (_formState$title2 = formState.title) !== null && _formState$title2 !== void 0 ? _formState$title2 : '',\n        workTime: (_formState$workTime2 = formState.workTime) !== null && _formState$workTime2 !== void 0 ? _formState$workTime2 : '',\n        email: (_formState$email2 = formState.email) !== null && _formState$email2 !== void 0 ? _formState$email2 : '',\n        phoneNumber: (_formState$phoneNumbe2 = formState.phoneNumber) !== null && _formState$phoneNumbe2 !== void 0 ? _formState$phoneNumbe2 : ''\n      }\n    },\n    update: (store, {\n      data\n    }) => {\n      var _selectedTask$user$id, _selectedTask$user3, _selectedTask$user$id2, _selectedTask$user4;\n\n      store.readQuery({\n        query: CommTasksDocument,\n        variables: {\n          userId: (_selectedTask$user$id = selectedTask === null || selectedTask === void 0 ? void 0 : (_selectedTask$user3 = selectedTask.user) === null || _selectedTask$user3 === void 0 ? void 0 : _selectedTask$user3.id) !== null && _selectedTask$user$id !== void 0 ? _selectedTask$user$id : '',\n          dateFrom: new Date(currWeek[0]).toISOString(),\n          dateTo: new Date(currWeek[6]).toISOString()\n        }\n      });\n      return store.writeQuery({\n        query: CommTasksDocument,\n        variables: {\n          userId: (_selectedTask$user$id2 = selectedTask === null || selectedTask === void 0 ? void 0 : (_selectedTask$user4 = selectedTask.user) === null || _selectedTask$user4 === void 0 ? void 0 : _selectedTask$user4.id) !== null && _selectedTask$user$id2 !== void 0 ? _selectedTask$user$id2 : '',\n          dateFrom: new Date(currWeek[0]).toISOString(),\n          dateTo: new Date(currWeek[6]).toISOString()\n        },\n        data: {\n          items: [data === null || data === void 0 ? void 0 : data.editTask]\n        }\n      });\n    }\n  });\n  const [deleteTask] = useDeleteCommTaskMutation({\n    variables: {\n      id: (_selectedTask$id = selectedTask.id) !== null && _selectedTask$id !== void 0 ? _selectedTask$id : ''\n    },\n    update: (store, {\n      data\n    }) => {\n      if (data == null) return;\n      store.modify({\n        id: 'ROOT_QUERY',\n        fields: {\n          communicationTaskMany(existingCommunicationTasksRef, {\n            readField\n          }) {\n            return {\n              items: existingCommunicationTasksRef.items.filter(taskRef => selectedTask.id !== readField('id', taskRef))\n            };\n          }\n\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'md',\n    PaperProps: {\n      style: {\n        height: '60%',\n        backgroundColor: '#fff',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)',\n        transition: 'all 1s'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: '70%',\n      marginBottom: '1em'\n    },\n    className: \"task-title-input\",\n    value: formState.title,\n    onChange: e => setFormState({ ...formState,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"update-task-button\",\n    onClick: () => {\n      editTask();\n      setPreviousStatusState({ ...previousState,\n        status: formState.status\n      });\n      notification({\n        text: 'Úspešne uložené.',\n        background: 'green-background'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \"Ulo\\u017Ei\\u0165\"), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: \"close-button\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"more-button\",\n    onClick: e => {\n      handleClickOnMore(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, \"Viac\"), /*#__PURE__*/React.createElement(Menu, {\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    getContentAnchorEl: null,\n    open: Boolean(anchorEl),\n    onClose: handleCloseMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      deleteTask();\n      handleClose();\n    },\n    style: {\n      fontFamily: 'Poppins',\n      color: '#b32929'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, \"Vymaza\\u0165\")), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Flag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disableUnderline: true,\n    classes: {\n      root: 'task-select'\n    },\n    MenuProps: menuProps,\n    value: formState === null || formState === void 0 ? void 0 : (_formState$status3 = formState.status) === null || _formState$status3 === void 0 ? void 0 : _formState$status3.toLowerCase(),\n    onChange: e => setFormState({ ...formState,\n      status: e.target.value.toUpperCase()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'done',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, renderTaskStatusBubble(getTaskStatusData(Status.Done))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'in_progress',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, renderTaskStatusBubble(getTaskStatusData(Status.InProgress))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'not_done',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, renderTaskStatusBubble(getTaskStatusData(Status.NotDone)))))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeft, {\n    style: {\n      marginTop: '0.3em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    rows: 2,\n    rowsMax: 5,\n    variant: \"outlined\",\n    style: {\n      width: '66%',\n      marginLeft: '0.9em'\n    },\n    className: \"task-desc-input\",\n    value: formState.description,\n    onChange: e => setFormState({ ...formState,\n      description: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Phone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Tel. \\u010D\\xEDslo\",\n    variant: \"outlined\",\n    value: formState.phoneNumber,\n    onChange: e => setFormState({ ...formState,\n      phoneNumber: e.target.value\n    }),\n    className: \"add-task-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px',\n      marginLeft: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Email, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    variant: \"outlined\",\n    value: formState.email,\n    onChange: e => setFormState({ ...formState,\n      email: e.target.value\n    }),\n    className: \"add-task-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Today, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    style: {\n      width: 90,\n      marginLeft: 10,\n      background: 'rgba(171, 171, 171, 0.15)',\n      borderRadius: '5px'\n    },\n    format: \"D.M.YYYY\",\n    value: moment(formState.date).format('YYYY-MM-DD'),\n    onChange: date => {\n      var _date$toDate$toISOStr;\n\n      return setFormState({ ...formState,\n        date: (_date$toDate$toISOStr = date === null || date === void 0 ? void 0 : date.toDate().toISOString()) !== null && _date$toDate$toISOStr !== void 0 ? _date$toDate$toISOStr : ''\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"time-picker\",\n    options: timeSlots,\n    style: {\n      width: 90,\n      marginLeft: 10\n    },\n    disableClearable: true,\n    freeSolo: true,\n    value: formState.workTime,\n    inputValue: formState.workTime,\n    onInputChange: (event, newInputValue) => {\n      setFormState({ ...formState,\n        workTime: newInputValue\n      });\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      style: {\n        background: 'rgba(171, 171, 171, 0.15)',\n        borderRadius: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  })))));\n}\n\nconst renderTaskStatusBubble = ({\n  color,\n  title\n}) => {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: 'task-status',\n    style: {\n      backgroundColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 5\n    }\n  }, title);\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/components/Task/EditTask/EditCommTask.tsx"],"names":["MomentUtils","IconButton","Button","Dialog","FormControl","Menu","MenuItem","Select","TextField","Close","Email","Flag","FormatAlignLeft","Phone","Timer","Today","Autocomplete","DatePicker","MuiPickersUtilsProvider","moment","React","useContext","useEffect","useState","CommTasksDocument","Status","useDeleteCommTaskMutation","useEditCommTaskMutation","WeekContext","notification","getTaskStatusData","menuProps","timeSlots","EditCommTask","onClose","selectedTask","setSelectedTask","open","setPreviousStatusState","previousState","currWeek","handleClose","formState","setFormState","id","userId","user","date","description","title","status","workTime","phoneNumber","email","pending","statusChanged","anchorEl","setAnchorEl","handleClickOnMore","event","currentTarget","handleCloseMore","editTask","variables","NotDone","optimisticResponse","update","store","data","readQuery","query","dateFrom","Date","toISOString","dateTo","writeQuery","items","deleteTask","modify","fields","communicationTaskMany","existingCommunicationTasksRef","readField","filter","taskRef","style","height","backgroundColor","color","borderRadius","padding","boxShadow","transition","elevation","width","marginBottom","e","target","value","text","background","vertical","horizontal","Boolean","fontFamily","display","alignItems","justifyContent","root","toLowerCase","toUpperCase","renderTaskStatusBubble","Done","InProgress","marginTop","marginLeft","flexDirection","format","toDate","newInputValue","params"],"mappings":"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","sourcesContent":["import MomentUtils from '@date-io/moment';\nimport { IconButton } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport FormControl from '@material-ui/core/FormControl';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  Close,\n  Email,\n  Flag,\n  FormatAlignLeft,\n  Phone,\n  Timer,\n  Today\n} from '@material-ui/icons';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport moment from 'moment';\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../../../App.css';\nimport {\n  CommTasksDocument,\n  CommunicationTask,\n  Status,\n  useDeleteCommTaskMutation,\n  useEditCommTaskMutation\n} from '../../../generated/graphql';\nimport { WeekContext } from '../../../providers/WeekProvider';\nimport { notification } from '../../Notification';\nimport { getTaskStatusData } from '../Bubble/TaskStatusData';\nimport { menuProps, timeSlots } from '../helpers';\nimport { PickCommunicationTask } from '../RenderTaskList';\n\ninterface InputProps {\n  open: boolean;\n  onClose: () => void;\n  selectedTask: Partial<Omit<PickCommunicationTask, 'status'>> & {\n    status: Status | undefined;\n    statusChanged: boolean;\n  };\n  setSelectedTask: React.Dispatch<\n    React.SetStateAction<\n      Partial<PickCommunicationTask> & {\n        statusChanged: boolean;\n      }\n    >\n  >;\n  previousState: Partial<{\n    id: string;\n    userId: string;\n    date: string;\n    status: Status;\n  }>;\n  setPreviousStatusState: React.Dispatch<\n    React.SetStateAction<\n      Partial<\n        Pick<CommunicationTask, 'id' | 'date' | 'status'> & {\n          userId: string;\n        }\n      >\n    >\n  >;\n}\n\nexport function EditCommTask({\n  onClose,\n  selectedTask,\n  setSelectedTask,\n  open,\n  setPreviousStatusState,\n  previousState\n}: InputProps) {\n  const { currWeek } = useContext(WeekContext);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const [formState, setFormState] = useState({\n    id: selectedTask.id,\n    userId: selectedTask?.user?.id,\n    date: selectedTask.date,\n    description: selectedTask.description,\n    title: selectedTask.title,\n    status: selectedTask.status,\n    workTime: selectedTask.workTime,\n    phoneNumber: selectedTask.phoneNumber,\n    email: selectedTask.email,\n    pending: selectedTask.pending\n  });\n\n  useEffect(() => {\n    if (selectedTask.id !== formState.id)\n      setFormState({\n        id: selectedTask.id,\n        userId: selectedTask?.user?.id,\n        date: selectedTask.date,\n        description: selectedTask.description,\n        title: selectedTask.title,\n        status: selectedTask.status,\n        workTime: selectedTask.workTime,\n        phoneNumber: selectedTask.phoneNumber,\n        email: selectedTask.email,\n        pending: selectedTask.pending\n      });\n    if (selectedTask.statusChanged === true) {\n      setSelectedTask({\n        ...selectedTask,\n        statusChanged: false\n      });\n      setFormState({\n        ...formState,\n        status: selectedTask.status\n      });\n    }\n  }, [selectedTask, formState, setSelectedTask]);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleClickOnMore = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMore = () => {\n    setAnchorEl(null);\n  };\n\n  const [editTask] = useEditCommTaskMutation({\n    variables: {\n      date: formState.date ?? '',\n      description: formState.description ?? '',\n      id: formState.id ?? '',\n      pending: formState.pending ?? false,\n      status: formState.status ?? Status.NotDone,\n      userId: formState.userId ?? '',\n      title: formState.title ?? '',\n      workTime: formState.workTime ?? '',\n      email: formState.email ?? '',\n      phoneNumber: formState.phoneNumber ?? ''\n    },\n    optimisticResponse: {\n      editTask: {\n        ...selectedTask,\n        date: formState.date ?? '',\n        description: formState.description ?? '',\n        id: formState.id ?? '',\n        status: formState.status ?? Status.NotDone,\n        title: formState.title ?? '',\n        workTime: formState.workTime ?? '',\n        email: formState.email ?? '',\n        phoneNumber: formState.phoneNumber ?? ''\n      }\n    },\n    update: (store, { data }) => {\n      store.readQuery<any>({\n        query: CommTasksDocument,\n        variables: {\n          userId: selectedTask?.user?.id ?? '',\n          dateFrom: new Date(currWeek[0]).toISOString(),\n          dateTo: new Date(currWeek[6]).toISOString()\n        }\n      });\n\n      return store.writeQuery({\n        query: CommTasksDocument,\n        variables: {\n          userId: selectedTask?.user?.id ?? '',\n          dateFrom: new Date(currWeek[0]).toISOString(),\n          dateTo: new Date(currWeek[6]).toISOString()\n        },\n        data: { items: [data?.editTask] }\n      });\n    }\n  });\n\n  const [deleteTask] = useDeleteCommTaskMutation({\n    variables: {\n      id: selectedTask.id ?? ''\n    },\n    update: (store, { data }) => {\n      if (data == null) return;\n\n      store.modify({\n        id: 'ROOT_QUERY',\n        fields: {\n          communicationTaskMany(existingCommunicationTasksRef, { readField }) {\n            return {\n              items: existingCommunicationTasksRef.items.filter(\n                (taskRef) => selectedTask.id !== readField('id', taskRef)\n              )\n            };\n          }\n        }\n      });\n    }\n  });\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Dialog\n        onClose={handleClose}\n        open={open}\n        fullWidth={true}\n        maxWidth={'md'}\n        PaperProps={{\n          style: {\n            height: '60%',\n            backgroundColor: '#fff',\n            color: 'black',\n            borderRadius: '30px',\n            padding: '35px',\n            boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)',\n            transition: 'all 1s'\n          },\n          elevation: 0\n        }}\n        BackdropProps={{ style: { backgroundColor: 'rgba(0, 0, 0, 0.25)' } }}\n      >\n        <div style={{}}>\n          <TextField\n            style={{ width: '70%', marginBottom: '1em' }}\n            className=\"task-title-input\"\n            value={formState.title}\n            onChange={(e) =>\n              setFormState({ ...formState, title: e.target.value })\n            }\n          />\n\n          <Button\n            className=\"update-task-button\"\n            onClick={() => {\n              editTask();\n              setPreviousStatusState({\n                ...previousState,\n                status: formState.status\n              });\n              notification({\n                text: 'Úspešne uložené.',\n                background: 'green-background'\n              });\n            }}\n          >\n            Uložiť\n          </Button>\n\n          <IconButton\n            aria-label=\"close\"\n            className=\"close-button\"\n            onClick={handleClose}\n          >\n            <Close />\n          </IconButton>\n\n          <Button\n            className=\"more-button\"\n            onClick={(e) => {\n              handleClickOnMore(e);\n            }}\n          >\n            Viac\n          </Button>\n\n          <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n            getContentAnchorEl={null}\n            open={Boolean(anchorEl)}\n            onClose={handleCloseMore}\n          >\n            <MenuItem\n              onClick={() => {\n                deleteTask();\n                handleClose();\n              }}\n              style={{ fontFamily: 'Poppins', color: '#b32929' }}\n            >\n              Vymazať\n            </MenuItem>\n          </Menu>\n\n          <span\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'start',\n              padding: '10px 0px'\n            }}\n          >\n            <Flag />\n            <FormControl>\n              <Select\n                disableUnderline\n                classes={{ root: 'task-select' }}\n                MenuProps={menuProps}\n                value={formState?.status?.toLowerCase()}\n                onChange={(e) =>\n                  setFormState({\n                    ...formState,\n                    status: (e.target.value as string).toUpperCase() as Status\n                  })\n                }\n              >\n                <MenuItem value={'done'}>\n                  {renderTaskStatusBubble(getTaskStatusData(Status.Done))}\n                </MenuItem>\n                <MenuItem value={'in_progress'}>\n                  {renderTaskStatusBubble(getTaskStatusData(Status.InProgress))}\n                </MenuItem>\n                <MenuItem value={'not_done'}>\n                  {renderTaskStatusBubble(getTaskStatusData(Status.NotDone))}\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </span>\n\n          <span\n            style={{\n              display: 'flex',\n              alignItems: 'flex-start',\n              justifyContent: 'start',\n              padding: '10px 0px'\n            }}\n          >\n            <FormatAlignLeft style={{ marginTop: '0.3em' }} />\n            <TextField\n              multiline\n              rows={2}\n              rowsMax={5}\n              variant=\"outlined\"\n              style={{ width: '66%', marginLeft: '0.9em' }}\n              className=\"task-desc-input\"\n              value={formState.description}\n              onChange={(e) =>\n                setFormState({ ...formState, description: e.target.value })\n              }\n            />\n          </span>\n\n          <div\n            style={{\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'row'\n            }}\n          >\n            <span\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'start',\n                padding: '10px 0px'\n              }}\n            >\n              <Phone />\n              <TextField\n                label=\"Tel. číslo\"\n                variant=\"outlined\"\n                value={formState.phoneNumber}\n                onChange={(e) =>\n                  setFormState({ ...formState, phoneNumber: e.target.value })\n                }\n                className=\"add-task-input\"\n              />\n            </span>\n\n            <span\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'start',\n                padding: '10px 0px',\n                marginLeft: '1em'\n              }}\n            >\n              <Email />\n              <TextField\n                label=\"Email\"\n                variant=\"outlined\"\n                value={formState.email}\n                onChange={(e) =>\n                  setFormState({ ...formState, email: e.target.value })\n                }\n                className=\"add-task-input\"\n              />\n            </span>\n          </div>\n\n          <span\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'start',\n              padding: '10px 0px'\n            }}\n          >\n            <Today />\n            <DatePicker\n              autoOk\n              disableToolbar\n              variant=\"inline\"\n              inputVariant=\"outlined\"\n              style={{\n                width: 90,\n                marginLeft: 10,\n                background: 'rgba(171, 171, 171, 0.15)',\n                borderRadius: '5px'\n              }}\n              format=\"D.M.YYYY\"\n              value={moment(formState.date).format('YYYY-MM-DD')}\n              onChange={(date) =>\n                setFormState({\n                  ...formState,\n                  date: date?.toDate().toISOString() ?? ''\n                })\n              }\n            />\n          </span>\n\n          <span\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'start',\n              padding: '10px 0px'\n            }}\n          >\n            <Timer />\n            <Autocomplete\n              id=\"time-picker\"\n              options={timeSlots}\n              style={{ width: 90, marginLeft: 10 }}\n              disableClearable\n              freeSolo\n              value={formState.workTime}\n              inputValue={formState.workTime}\n              onInputChange={(event, newInputValue) => {\n                setFormState({ ...formState, workTime: newInputValue });\n              }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  style={{\n                    background: 'rgba(171, 171, 171, 0.15)',\n                    borderRadius: '5px'\n                  }}\n                />\n              )}\n            />\n          </span>\n        </div>\n      </Dialog>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nconst renderTaskStatusBubble = ({\n  color,\n  title\n}: {\n  color: string;\n  title: string;\n}) => {\n  return (\n    <span className={'task-status'} style={{ backgroundColor: color }}>\n      {title}\n    </span>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/DataProvider.js\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport * as firebase from \"firebase\";\nimport moment from \"moment\";\nimport { getISOWeekDates } from \"../DateCalc\";\nexport const DataContext = createContext({\n  currWeek: null,\n  currMonth: null,\n  taskData: null\n});\n\nfunction DataProvider(props) {\n  const [weekState, setWeek] = useState(moment().week());\n  const [taskData, setTaskData] = useState([]);\n  let ISOWeekDates = getISOWeekDates(weekState);\n  let currWeek = ISOWeekDates[0];\n  let currMonth = ISOWeekDates[1];\n  let modWeek = [];\n  useEffect(() => {\n    // const requestOptions = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\", Accept: \"text/html\" },\n    //   body: JSON.stringify({ idToken: idToken }),\n    // };\n    // console.log(idToken);\n    // fetch(\n    //   \"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/auth\",\n    //   requestOptions\n    // )\n    //   .then((response) => response.json())\n    //   .then((data) => setUser(data));\n    for (const i of currWeek) {\n      modWeek.push(moment(i).format(\"DD/MM/yyyy\"));\n    }\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"*/*\"\n      },\n      body: JSON.stringify({\n        date: modWeek\n      })\n    };\n    fetch(\"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-all-tasks\", requestOptions).then(response => response.json()).then(data => {\n      setTaskData(data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(DataContext.Provider, {\n    value: {\n      currWeek: currWeek,\n      currMonth: currMonth,\n      taskData: taskData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nexport default DataProvider;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/DataProvider.js"],"names":["React","useState","createContext","useEffect","firebase","moment","getISOWeekDates","DataContext","currWeek","currMonth","taskData","DataProvider","props","weekState","setWeek","week","setTaskData","ISOWeekDates","modWeek","i","push","format","requestOptions","method","headers","Accept","body","JSON","stringify","date","fetch","then","response","json","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,eAAT,QAAgC,aAAhC;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,CAAC;AAAEM,EAAAA,QAAQ,EAAE,IAAZ;AAAkBC,EAAAA,SAAS,EAAE,IAA7B;AAAmCC,EAAAA,QAAQ,EAAE;AAA7C,CAAD,CAAjC;;AAEP,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuBb,QAAQ,CAACI,MAAM,GAAGU,IAAT,EAAD,CAArC;AACA,QAAM,CAACL,QAAD,EAAWM,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AAEA,MAAIgB,YAAY,GAAGX,eAAe,CAACO,SAAD,CAAlC;AACA,MAAIL,QAAQ,GAAGS,YAAY,CAAC,CAAD,CAA3B;AACA,MAAIR,SAAS,GAAGQ,YAAY,CAAC,CAAD,CAA5B;AAEA,MAAIC,OAAO,GAAG,EAAd;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAK,MAAMgB,CAAX,IAAgBX,QAAhB,EAA0B;AACxBU,MAAAA,OAAO,CAACE,IAAR,CAAaf,MAAM,CAACc,CAAD,CAAN,CAAUE,MAAV,CAAiB,YAAjB,CAAb;AACD;;AAED,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB,kBAAlB;AAAsCC,QAAAA,MAAM,EAAE;AAA9C,OAFY;AAGrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,IAAI,EAAEX;AAAR,OAAf;AAHe,KAAvB;AAKAY,IAAAA,KAAK,CACH,gFADG,EAEHR,cAFG,CAAL,CAIGS,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJtB,EAKGF,IALH,CAKSG,IAAD,IAAU;AACdlB,MAAAA,WAAW,CAACkB,IAAD,CAAX;AACD,KAPH;AAQD,GA9BQ,EA8BN,EA9BM,CAAT;AAgCA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAE1B,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,MAAAA,SAAS,EAAEA,SAAjC;AAA4CC,MAAAA,QAAQ,EAAEA;AAAtD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACuB,QADT,CADF;AAKD;;AAED,eAAexB,YAAf","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\nimport * as firebase from \"firebase\";\nimport moment from \"moment\";\n\nimport { getISOWeekDates } from \"../DateCalc\";\n\nexport const DataContext = createContext({ currWeek: null, currMonth: null, taskData: null });\n\nfunction DataProvider(props) {\n  const [weekState, setWeek] = useState(moment().week());\n  const [taskData, setTaskData] = useState([]);\n\n  let ISOWeekDates = getISOWeekDates(weekState);\n  let currWeek = ISOWeekDates[0];\n  let currMonth = ISOWeekDates[1];\n\n  let modWeek = [];\n\n  useEffect(() => {\n    // const requestOptions = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\", Accept: \"text/html\" },\n    //   body: JSON.stringify({ idToken: idToken }),\n    // };\n    // console.log(idToken);\n    // fetch(\n    //   \"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/auth\",\n    //   requestOptions\n    // )\n    //   .then((response) => response.json())\n    //   .then((data) => setUser(data));\n    for (const i of currWeek) {\n      modWeek.push(moment(i).format(\"DD/MM/yyyy\"));\n    }\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\", Accept: \"*/*\" },\n      body: JSON.stringify({ date: modWeek }),\n    };\n    fetch(\n      \"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/get-all-tasks\",\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setTaskData(data);\n      });\n  }, []);\n\n  return (\n    <DataContext.Provider value={{ currWeek: currWeek, currMonth: currMonth, taskData: taskData}}>\n      {props.children}\n    </DataContext.Provider>\n  );\n}\n\nexport default DataProvider;\n"]},"metadata":{},"sourceType":"module"}
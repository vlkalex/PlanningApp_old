{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/DataProvider.js\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport * as firebase from \"firebase\";\nimport { getISOWeekDates } from \"../DateCalc\";\nexport const UserContext = createContext({\n  currWeek: null\n});\n\nfunction DataProvider(props) {\n  const [weekState, setWeek] = useState([]);\n  let ISOWeekDates = getISOWeekDates(weekState);\n  let currWeek = ISOWeekDates[0];\n  let currMonth = ISOWeekDates[1];\n  useEffect(() => {\n    for (let week in weekState) {\n      console.log(week);\n    }\n\n    console.log(\"heeeey\"); // const requestOptions = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\", Accept: \"text/html\" },\n    //   body: JSON.stringify({ idToken: idToken }),\n    // };\n    // console.log(idToken);\n    // fetch(\n    //   \"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/auth\",\n    //   requestOptions\n    // )\n    //   .then((response) => response.json())\n    //   .then((data) => setUser(data));\n  }, []);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: currWeek,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nexport default DataProvider;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/providers/DataProvider.js"],"names":["React","useState","createContext","useEffect","firebase","getISOWeekDates","UserContext","currWeek","DataProvider","props","weekState","setWeek","ISOWeekDates","currMonth","week","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,SAASC,eAAT,QAAgC,aAAhC;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,CAAC;AAAEK,EAAAA,QAAQ,EAAE;AAAZ,CAAD,CAAjC;;AAEP,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuBV,QAAQ,CAAC,EAAD,CAArC;AACA,MAAIW,YAAY,GAAGP,eAAe,CAACK,SAAD,CAAlC;AACA,MAAIH,QAAQ,GAAGK,YAAY,CAAC,CAAD,CAA3B;AACA,MAAIC,SAAS,GAAGD,YAAY,CAAC,CAAD,CAA5B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,SAAK,IAAIW,IAAT,IAAiBJ,SAAjB,EAA4B;AAC1BK,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EALc,CAMd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAGT,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACQ,QADT,CADF;AAKD;;AAED,eAAeT,YAAf","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\nimport * as firebase from \"firebase\";\n\nimport { getISOWeekDates } from \"../DateCalc\";\n\nexport const UserContext = createContext({ currWeek: null });\n\nfunction DataProvider(props) {\n  const [weekState, setWeek] = useState([]);\n  let ISOWeekDates = getISOWeekDates(weekState);\n  let currWeek = ISOWeekDates[0];\n  let currMonth = ISOWeekDates[1];\n\n  useEffect(() => {\n    for (let week in weekState) {\n      console.log(week);\n    }\n\n    console.log(\"heeeey\");\n    // const requestOptions = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\", Accept: \"text/html\" },\n    //   body: JSON.stringify({ idToken: idToken }),\n    // };\n    // console.log(idToken);\n    // fetch(\n    //   \"https://europe-west1-plannerapp-960c1.cloudfunctions.net/app/api/auth\",\n    //   requestOptions\n    // )\n    //   .then((response) => response.json())\n    //   .then((data) => setUser(data));\n  }, []);\n\n  return (\n    <UserContext.Provider value={(currWeek)}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n\nexport default DataProvider;\n"]},"metadata":{},"sourceType":"module"}
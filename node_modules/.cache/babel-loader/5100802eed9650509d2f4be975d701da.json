{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js\";\nimport { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport moment from 'moment';\nimport 'moment/locale/sk';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport data from '../MOCK_DATA.json';\nconst styles = makeStyles(theme => ({\n  detailTitle: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '700',\n    fontSize: '1.6em',\n    paddingBottom: '15px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0\n  },\n  detailText: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    paddingLeft: '20px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(2),\n    top: theme.spacing(3.5),\n    color: '#1f1f1d'\n  },\n  editButton: {\n    position: 'absolute',\n    right: theme.spacing(8),\n    top: theme.spacing(3.5),\n    color: '#2B2B28'\n  },\n  taskStatus: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    padding: '0.4em 0.7em',\n    borderRadius: '10px',\n    marginLeft: '20px'\n  }\n}));\nexport function TaskBubble(type, date) {\n  const classes = useStyles();\n  const filteredData = data.filter(task => task.type.includes(type)).filter(task => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedTask, setSelectedTask] = React.useState({\n    id: '0',\n    title: 'Test',\n    desc: 'Test',\n    workTime: '100h',\n    status: 'not_done'\n  });\n\n  const handleClickOpen = task => {\n    setOpen(true);\n    setSelectedTask(task);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (filteredData === undefined || filteredData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"18px\",\n        color: \"#bdbdbd\",\n        fontFamily: \"Poppins\",\n        fontSize: \"18px\",\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Empty\"));\n  } else {\n    return /*#__PURE__*/React.createElement(DragDropContext, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"taskBubbles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }), filteredData.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      className: classes.taskBubble,\n      style: {\n        backgroundColor: GetTaskStatusData(item.status).color\n      },\n      onClick: () => handleClickOpen(item),\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 53\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(TimerIcon, {\n      style: {\n        marginRight: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.bubbleWorkTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 49\n      }\n    }, item.workTime)), /*#__PURE__*/React.createElement(DetailDialog, {\n      open: open,\n      onClose: handleClose,\n      selectedTask: selectedTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    })))), provided.placeholder)));\n  }\n}\n;","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/taskBubble/TaskBubble.js"],"names":["useStyles","React","useState","GetTaskStatusData","makeStyles","PropTypes","Box","Dialog","moment","DragDropContext","Droppable","Draggable","Select","MenuItem","FormControl","FormatAlignLeftIcon","TimerIcon","IconButton","CloseIcon","CreateIcon","FlagIcon","ExpandMoreIcon","data","styles","theme","detailTitle","fontFamily","color","fontWeight","fontSize","paddingBottom","marginBlockStart","marginBlockEnd","detailText","paddingLeft","closeButton","position","right","spacing","top","editButton","taskStatus","padding","borderRadius","marginLeft","TaskBubble","type","date","classes","filteredData","filter","task","includes","format","open","setOpen","selectedTask","setSelectedTask","id","title","desc","workTime","status","handleClickOpen","handleClose","undefined","length","justifyContent","height","textAlign","paddingTop","provided","droppableProps","innerRef","map","item","index","draggableProps","dragHandleProps","taskBubble","backgroundColor","bubbleTitle","marginRight","bubbleWorkTime","placeholder"],"mappings":"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","sourcesContent":["import { useStyles } from '../App';\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { GetTaskStatusData } from './TaskStatusData';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport moment from 'moment';\nimport 'moment/locale/sk';\n\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport data from '../MOCK_DATA.json';\n\nconst styles = makeStyles((theme) => ({\n    detailTitle: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '700',\n        fontSize: '1.6em',\n        paddingBottom: '15px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n    },\n    detailText: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        paddingLeft: '20px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: theme.spacing(3.5),\n        color: '#1f1f1d',\n    },\n    editButton: {\n        position: 'absolute',\n        right: theme.spacing(8),\n        top: theme.spacing(3.5),\n        color: '#2B2B28',\n    },\n    taskStatus: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        padding: '0.4em 0.7em',\n        borderRadius: '10px',\n        marginLeft: '20px',\n    }\n}));\n\nexport function TaskBubble(type, date) {\n    const classes = useStyles();\n\n    const filteredData = data.filter((task) => task.type.includes(type)).filter((task) => task.date.includes(moment(date).format(\"DD/MM/yyyy\"))); //filter tasks by specified type\n\n    const [open, setOpen] = React.useState(false);\n    const [selectedTask, setSelectedTask] = React.useState({ id: '0', title: 'Test', desc: 'Test', workTime: '100h', status: 'not_done' });\n\n    const handleClickOpen = (task) => {\n        setOpen(true);\n        setSelectedTask(task);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    if (filteredData === undefined || filteredData.length === 0) {\n        return (\n            <div style={{justifyContent:\"center\", height:\"100%\"}}>\n                <h3 style={{textAlign:\"center\", paddingTop:\"18px\", color:\"#bdbdbd\", fontFamily:\"Poppins\", fontSize:\"18px\", fontWeight:\"500\"}}>\n                    Empty\n                </h3>\n            </div>\n        )\n        \n    } else {\n        return (\n            <DragDropContext>\n                <Droppable droppableId=\"taskBubbles\">\n                    {(provided) => (\n                        <div {...provided.droppableProps} ref={provided.innerRef}>\n                            {filteredData.map((item, index) => (\n                                <Draggable key={item.id} draggableId={item.id} index={index} >\n                                    {(provided) => (\n                                        <div {...provided.draggableProps} {...provided.dragHandleProps}>\n                                            <Box  className={classes.taskBubble} style={{ backgroundColor: GetTaskStatusData(item.status).color }} onClick={() => handleClickOpen(item)} ref={provided.innerRef}>\n                                                <Box flexGrow={1}>\n                                                    <h3 className={classes.bubbleTitle}>{item.title}</h3>\n                                                </Box>\n                                                <TimerIcon style={{marginRight: '5px'}} />\n                                                <h3 className={classes.bubbleWorkTime}>{item.workTime}</h3>\n                                            </Box>\n                                            <DetailDialog open={open} onClose={handleClose} selectedTask={selectedTask} />\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}
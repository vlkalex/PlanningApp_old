{"ast":null,"code":"var _jsxFileName = \"/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/MeetDetailDialog.js\";\nimport '../App.css';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport DoneIcon from '@material-ui/icons/Done';\nimport TodayIcon from '@material-ui/icons/Today';\nconst styles = makeStyles(theme => ({\n  detailTitle: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '700',\n    fontSize: '1.6em',\n    paddingBottom: '15px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0\n  },\n  detailText: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    paddingLeft: '20px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(2),\n    top: theme.spacing(3.5),\n    color: '#1f1f1d'\n  },\n  editButton: {\n    position: 'absolute',\n    right: theme.spacing(8),\n    top: theme.spacing(3.5),\n    color: '#2B2B28'\n  },\n  taskStatus: {\n    fontFamily: 'Poppins',\n    color: '#2b2b2b',\n    fontWeight: '500',\n    fontSize: '1.1em',\n    padding: '0.4em 0.7em',\n    borderRadius: '10px'\n  },\n  taskSelect: {\n    width: '90%',\n    background: '#FFEAC8',\n    borderStyle: 'none',\n    borderWidth: 2,\n    borderRadius: '10px',\n    marginLeft: 18,\n    padding: '10px 0px',\n    \"&:focus\": {\n      borderRadius: '10px',\n      background: 'transparent'\n    }\n  },\n  taskTitleInput: {\n    paddingBottom: '10px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    \"& input\": {\n      fontFamily: 'Poppins',\n      color: '#2b2b2b',\n      fontWeight: '700',\n      fontSize: '1.6em'\n    }\n  },\n  taskDescInput: {\n    paddingLeft: '20px',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    \"& textarea\": {\n      fontFamily: 'Poppins',\n      color: '#2b2b2b',\n      fontWeight: '500',\n      fontSize: '1.1em'\n    }\n  },\n  deleteTaskButton: {}\n}));\n\nconst renderTaskStatusBubble = taskStatusData => {\n  const classes = styles();\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.taskStatus,\n    style: {\n      backgroundColor: taskStatusData.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, taskStatusData.title);\n};\n\nexport function MeetDetailDialog(props) {\n  const classes = styles();\n  const {\n    onClose,\n    selectedTask,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedTask);\n  };\n\n  const taskStatusData = GetTaskStatusData(selectedTask.status);\n  const [editMode, enterEditMode] = useState(false);\n  const [val, setVal] = useState(taskStatusData.id);\n\n  const handleStatusChange = event => {\n    setVal(event.target.value);\n    selectedTask.status = event.target.value;\n  };\n\n  const [titleState, setTitle] = useState('');\n  const [descState, setDesc] = useState('');\n  const [workTimeState, setWorkTime] = useState('');\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const editModeOn = () => {\n    enterEditMode(true);\n    setTitle(selectedTask.title);\n    setDesc(selectedTask.desc);\n    setWorkTime(selectedTask.workTime);\n  };\n\n  const editModeOff = () => {\n    enterEditMode(false);\n    setTitle('');\n    setDesc('');\n    setWorkTime('');\n  }; // moves the menu below the select input\n\n\n  const menuProps = {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n  return /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xs',\n    PaperProps: {\n      style: {\n        backgroundColor: '#FFEAC8',\n        color: 'black',\n        borderRadius: '30px',\n        padding: '35px',\n        boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)'\n      },\n      elevation: 0\n    },\n    BackdropProps: {\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.25)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"70%\"\n    },\n    className: classes.taskTitleInput,\n    value: selectedTask.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.detailTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, selectedTask.title), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"edit\",\n    className: classes.editButton,\n    onClick: () => {\n      editMode ? editModeOff() : editModeOn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(DoneIcon, {\n    style: {\n      fontWeight: '700'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(CreateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FlagIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disableUnderline: true,\n    classes: {\n      root: classes.taskSelect\n    },\n    MenuProps: menuProps,\n    value: taskStatusData.id,\n    onChange: handleStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('done'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"in_progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('in_progress'))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"not_done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, renderTaskStatusBubble(GetTaskStatusData('not_done')))))), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormatAlignLeftIcon, {\n    style: {\n      paddingTop: '2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }), editMode ? /*#__PURE__*/React.createElement(TextField, {\n    multiline: true,\n    style: {\n      width: \"70%\"\n    },\n    className: classes.taskDescInput,\n    value: descState,\n    onChange: e => setDesc(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, selectedTask.desc)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ScheduleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, selectedTask.startTime, \" - \", selectedTask.endTime)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PlaceIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.detailText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, selectedTask.address)), editMode ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'start',\n      padding: '10px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TodayIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    inputVariant: \"outlined\",\n    style: {\n      width: 90,\n      marginLeft: 10,\n      background: 'rgba(171, 171, 171, 0.15)',\n      borderRadius: '5px',\n      border: 'none'\n    },\n    format: \"D.M.YYYY\",\n    value: selectedDate,\n    onChange: date => handleDateChange(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  })) : \"\", editMode ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.deleteTaskButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, \"Vymaza\\u0165\") : \"\"));\n}\nMeetDetailDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedTask: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/alexvlk/Documents/Projects/GitHub/ConsultApp/src/dialogWindows/MeetDetailDialog.js"],"names":["React","useState","makeStyles","GetTaskStatusData","PropTypes","Dialog","Select","MenuItem","FormControl","TextField","DatePicker","MuiPickersUtilsProvider","MomentUtils","FormatAlignLeftIcon","TimerIcon","PlaceIcon","ScheduleIcon","IconButton","CloseIcon","CreateIcon","FlagIcon","DoneIcon","TodayIcon","styles","theme","detailTitle","fontFamily","color","fontWeight","fontSize","paddingBottom","marginBlockStart","marginBlockEnd","detailText","paddingLeft","closeButton","position","right","spacing","top","editButton","taskStatus","padding","borderRadius","taskSelect","width","background","borderStyle","borderWidth","marginLeft","taskTitleInput","taskDescInput","deleteTaskButton","renderTaskStatusBubble","taskStatusData","classes","backgroundColor","title","MeetDetailDialog","props","onClose","selectedTask","open","handleClose","status","editMode","enterEditMode","val","setVal","id","handleStatusChange","event","target","value","titleState","setTitle","descState","setDesc","workTimeState","setWorkTime","selectedDate","handleDateChange","Date","editModeOn","desc","workTime","editModeOff","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","style","boxShadow","elevation","display","alignItems","justifyContent","paddingTop","root","e","startTime","endTime","address","border","date","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GetTaskStatusData } from '../taskBubble/TaskStatusData';\n\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from '@date-io/moment';\n\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport DoneIcon from '@material-ui/icons/Done';\nimport TodayIcon from '@material-ui/icons/Today';\n\nconst styles = makeStyles((theme) => ({\n    detailTitle: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '700',\n        fontSize: '1.6em',\n        paddingBottom: '15px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n    },\n    detailText: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        paddingLeft: '20px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(2),\n        top: theme.spacing(3.5),\n        color: '#1f1f1d',\n    },\n    editButton: {\n        position: 'absolute',\n        right: theme.spacing(8),\n        top: theme.spacing(3.5),\n        color: '#2B2B28',\n    },\n    taskStatus: {\n        fontFamily: 'Poppins',\n        color: '#2b2b2b',\n        fontWeight: '500',\n        fontSize: '1.1em',\n        padding: '0.4em 0.7em',\n        borderRadius: '10px',\n    },\n    taskSelect: {\n        width: '90%',\n        background: '#FFEAC8',\n        borderStyle:'none',\n        borderWidth: 2,\n        borderRadius: '10px',\n        marginLeft: 18,\n        padding: '10px 0px',\n        \"&:focus\":{\n            borderRadius: '10px',\n            background: 'transparent',\n        },\n    },\n    taskTitleInput: {\n        paddingBottom: '10px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        \"& input\": {\n            fontFamily: 'Poppins',\n            color: '#2b2b2b',\n            fontWeight: '700',\n            fontSize: '1.6em',\n        }\n    },\n    taskDescInput: {\n        paddingLeft: '20px',\n        marginBlockStart: 0,\n        marginBlockEnd: 0,\n        \"& textarea\": {\n            fontFamily: 'Poppins',\n            color: '#2b2b2b',\n            fontWeight: '500',\n            fontSize: '1.1em',\n        }\n    },\n    deleteTaskButton: {\n\n    },\n}));\n\nconst renderTaskStatusBubble = (taskStatusData) => {\n    const classes = styles();\n    return (\n        <span className={classes.taskStatus} style={{backgroundColor: taskStatusData.color}}>\n            {taskStatusData.title}\n        </span>\n    )\n}\n\nexport function MeetDetailDialog(props) {\n    const classes = styles();\n\n    const { onClose, selectedTask, open } = props;\n\n    const handleClose = () => {\n        onClose(selectedTask);\n    };\n\n    const taskStatusData = GetTaskStatusData(selectedTask.status);\n\n    const [editMode, enterEditMode] = useState(false);\n\n    const [val,setVal] = useState(taskStatusData.id);\n\n    const handleStatusChange = (event) => {\n        setVal(event.target.value);\n        selectedTask.status = event.target.value;\n    };\n\n    const [titleState, setTitle] = useState('');\n    const [descState, setDesc] = useState('');\n    const [workTimeState, setWorkTime] = useState('');\n    const [selectedDate, handleDateChange] = useState(new Date());\n\n    const editModeOn = () => {\n        enterEditMode(true);\n        setTitle(selectedTask.title);\n        setDesc(selectedTask.desc);\n        setWorkTime(selectedTask.workTime);\n    }\n\n    const editModeOff = () => {\n        enterEditMode(false);\n        setTitle('');\n        setDesc('');\n        setWorkTime('');\n    }\n\n    // moves the menu below the select input\n    const menuProps = {\n        anchorOrigin: {\n        vertical: \"bottom\",\n            horizontal: \"left\"\n        },\n        transformOrigin: {\n        vertical: \"top\",\n            horizontal: \"left\"\n        },\n        getContentAnchorEl: null\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Dialog\n            onClose={handleClose}\n            open={open}\n            fullWidth={true}\n            maxWidth={'xs'}\n            PaperProps={{ style: { backgroundColor: '#FFEAC8', color: 'black', borderRadius: '30px', padding: '35px', boxShadow: '0px 0px 15px 0px rgba(0,0,0,0.15)', }, elevation: 0 }}\n            BackdropProps={{ style: { backgroundColor: \"rgba(0, 0, 0, 0.25)\" } }}\n        >\n            { editMode\n                ? <TextField style={{width: \"70%\"}} className={classes.taskTitleInput} value={selectedTask.title}/> \n                : <h1 className={classes.detailTitle}>{selectedTask.title}</h1>\n            }\n            <IconButton aria-label=\"edit\" className={classes.editButton} onClick={() => {editMode ? editModeOff() : editModeOn()}}>\n                { editMode \n                    ?   <DoneIcon style={{fontWeight:'700'}}/>\n                    :   <CreateIcon />\n                }\n                \n            </IconButton>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                <CloseIcon />\n            </IconButton>\n\n            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                <FlagIcon style={{ paddingTop: '2px' }} />\n                <FormControl>\n                    <Select\n                        disableUnderline\n                        classes={{ root: classes.taskSelect }}\n                        MenuProps={menuProps}\n                        value={taskStatusData.id}\n                        onChange={handleStatusChange}\n                    >\n                        <MenuItem value={\"done\"}>{renderTaskStatusBubble(GetTaskStatusData('done'))}</MenuItem>\n                        <MenuItem value={\"in_progress\"}>{renderTaskStatusBubble(GetTaskStatusData('in_progress'))}</MenuItem>\n                        <MenuItem value={\"not_done\"}>{renderTaskStatusBubble(GetTaskStatusData('not_done'))}</MenuItem>\n                    </Select>\n                </FormControl>\n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <FormatAlignLeftIcon style={{ paddingTop: '2px' }} />\n                { editMode \n                    ?   <TextField multiline style={{width: \"70%\"}} className={classes.taskDescInput} value={descState} onChange={e => setDesc(e.target.value)}/> \n                    :   <h3 className={classes.detailText}>\n                            {selectedTask.desc}\n                        </h3>\n                }\n                \n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <ScheduleIcon />\n                <h3 className={classes.detailText}>\n                    {selectedTask.startTime} - {selectedTask.endTime}\n                </h3>\n            </span>\n\n            <span style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'start', padding: '10px 0px' }}>\n                <PlaceIcon />\n                <h3 className={classes.detailText}>\n                    {selectedTask.address}\n                </h3>\n            </span>\n\n            { editMode \n                ?   <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'start', padding: '10px 0px' }}>\n                        <TodayIcon />\n                        <DatePicker\n                            autoOk\n                            disableToolbar\n                            variant=\"inline\"\n                            inputVariant=\"outlined\"\n                            style={{ width: 90, marginLeft: 10, background: 'rgba(171, 171, 171, 0.15)', borderRadius: '5px', border: 'none' }}\n                            format=\"D.M.YYYY\"\n                            value={selectedDate}\n                            onChange={date => handleDateChange(date)}\n                        />\n                    </span>\n                :   \"\"\n            }\n\n            { editMode\n                ?   <Button className={classes.deleteTaskButton}>\n                        Vymazať\n                    </Button>\n                :   \"\"\n            }\n\n        </Dialog>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nMeetDetailDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedTask: PropTypes.object.isRequired,\n};"]},"metadata":{},"sourceType":"module"}